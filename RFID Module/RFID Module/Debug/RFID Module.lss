
RFID Module.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a06  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000008e  00800060  00000a06  00000a7a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000b08  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b38  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000c8  00000000  00000000  00000b74  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000188e  00000000  00000000  00000c3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000072f  00000000  00000000  000024ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000b8d  00000000  00000000  00002bf9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001e8  00000000  00000000  00003788  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000049f  00000000  00000000  00003970  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000013f2  00000000  00000000  00003e0f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d0  00000000  00000000  00005201  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e0       	ldi	r30, 0x06	; 6
  68:	fa e0       	ldi	r31, 0x0A	; 10
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 3e       	cpi	r26, 0xEE	; 238
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 2c 03 	call	0x658	; 0x658 <main>
  7a:	0c 94 01 05 	jmp	0xa02	; 0xa02 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <pinChange>:
}

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
	Lcd4_Cmd(0x08);
  82:	67 2b       	or	r22, r23
  84:	09 f0       	breq	.+2      	; 0x88 <pinChange+0x6>
  86:	df c0       	rjmp	.+446    	; 0x246 <pinChange+0x1c4>
  88:	00 97       	sbiw	r24, 0x00	; 0
  8a:	21 f4       	brne	.+8      	; 0x94 <pinChange+0x12>
  8c:	8b b3       	in	r24, 0x1b	; 27
  8e:	8e 7f       	andi	r24, 0xFE	; 254
  90:	8b bb       	out	0x1b, r24	; 27
  92:	08 95       	ret
  94:	81 30       	cpi	r24, 0x01	; 1
  96:	91 05       	cpc	r25, r1
  98:	21 f4       	brne	.+8      	; 0xa2 <pinChange+0x20>
  9a:	8b b3       	in	r24, 0x1b	; 27
  9c:	8d 7f       	andi	r24, 0xFD	; 253
  9e:	8b bb       	out	0x1b, r24	; 27
  a0:	08 95       	ret
  a2:	82 30       	cpi	r24, 0x02	; 2
  a4:	91 05       	cpc	r25, r1
  a6:	21 f4       	brne	.+8      	; 0xb0 <pinChange+0x2e>
  a8:	8b b3       	in	r24, 0x1b	; 27
  aa:	8b 7f       	andi	r24, 0xFB	; 251
  ac:	8b bb       	out	0x1b, r24	; 27
  ae:	08 95       	ret
  b0:	83 30       	cpi	r24, 0x03	; 3
  b2:	91 05       	cpc	r25, r1
  b4:	21 f4       	brne	.+8      	; 0xbe <pinChange+0x3c>
  b6:	8b b3       	in	r24, 0x1b	; 27
  b8:	87 7f       	andi	r24, 0xF7	; 247
  ba:	8b bb       	out	0x1b, r24	; 27
  bc:	08 95       	ret
  be:	84 30       	cpi	r24, 0x04	; 4
  c0:	91 05       	cpc	r25, r1
  c2:	21 f4       	brne	.+8      	; 0xcc <pinChange+0x4a>
  c4:	8b b3       	in	r24, 0x1b	; 27
  c6:	8f 7e       	andi	r24, 0xEF	; 239
  c8:	8b bb       	out	0x1b, r24	; 27
  ca:	08 95       	ret
  cc:	85 30       	cpi	r24, 0x05	; 5
  ce:	91 05       	cpc	r25, r1
  d0:	21 f4       	brne	.+8      	; 0xda <pinChange+0x58>
  d2:	8b b3       	in	r24, 0x1b	; 27
  d4:	8f 7d       	andi	r24, 0xDF	; 223
  d6:	8b bb       	out	0x1b, r24	; 27
  d8:	08 95       	ret
  da:	86 30       	cpi	r24, 0x06	; 6
  dc:	91 05       	cpc	r25, r1
  de:	21 f4       	brne	.+8      	; 0xe8 <pinChange+0x66>
  e0:	8b b3       	in	r24, 0x1b	; 27
  e2:	8f 7b       	andi	r24, 0xBF	; 191
  e4:	8b bb       	out	0x1b, r24	; 27
  e6:	08 95       	ret
  e8:	87 30       	cpi	r24, 0x07	; 7
  ea:	91 05       	cpc	r25, r1
  ec:	21 f4       	brne	.+8      	; 0xf6 <pinChange+0x74>
  ee:	8b b3       	in	r24, 0x1b	; 27
  f0:	8f 77       	andi	r24, 0x7F	; 127
  f2:	8b bb       	out	0x1b, r24	; 27
  f4:	08 95       	ret
  f6:	8a 30       	cpi	r24, 0x0A	; 10
  f8:	91 05       	cpc	r25, r1
  fa:	21 f4       	brne	.+8      	; 0x104 <pinChange+0x82>
  fc:	88 b3       	in	r24, 0x18	; 24
  fe:	8e 7f       	andi	r24, 0xFE	; 254
 100:	88 bb       	out	0x18, r24	; 24
 102:	08 95       	ret
 104:	8b 30       	cpi	r24, 0x0B	; 11
 106:	91 05       	cpc	r25, r1
 108:	21 f4       	brne	.+8      	; 0x112 <pinChange+0x90>
 10a:	88 b3       	in	r24, 0x18	; 24
 10c:	8d 7f       	andi	r24, 0xFD	; 253
 10e:	88 bb       	out	0x18, r24	; 24
 110:	08 95       	ret
 112:	8c 30       	cpi	r24, 0x0C	; 12
 114:	91 05       	cpc	r25, r1
 116:	21 f4       	brne	.+8      	; 0x120 <pinChange+0x9e>
 118:	88 b3       	in	r24, 0x18	; 24
 11a:	8b 7f       	andi	r24, 0xFB	; 251
 11c:	88 bb       	out	0x18, r24	; 24
 11e:	08 95       	ret
 120:	8d 30       	cpi	r24, 0x0D	; 13
 122:	91 05       	cpc	r25, r1
 124:	21 f4       	brne	.+8      	; 0x12e <pinChange+0xac>
 126:	88 b3       	in	r24, 0x18	; 24
 128:	87 7f       	andi	r24, 0xF7	; 247
 12a:	88 bb       	out	0x18, r24	; 24
 12c:	08 95       	ret
 12e:	8e 30       	cpi	r24, 0x0E	; 14
 130:	91 05       	cpc	r25, r1
 132:	21 f4       	brne	.+8      	; 0x13c <pinChange+0xba>
 134:	88 b3       	in	r24, 0x18	; 24
 136:	8f 7e       	andi	r24, 0xEF	; 239
 138:	88 bb       	out	0x18, r24	; 24
 13a:	08 95       	ret
 13c:	8f 30       	cpi	r24, 0x0F	; 15
 13e:	91 05       	cpc	r25, r1
 140:	21 f4       	brne	.+8      	; 0x14a <pinChange+0xc8>
 142:	88 b3       	in	r24, 0x18	; 24
 144:	8f 7d       	andi	r24, 0xDF	; 223
 146:	88 bb       	out	0x18, r24	; 24
 148:	08 95       	ret
 14a:	80 31       	cpi	r24, 0x10	; 16
 14c:	91 05       	cpc	r25, r1
 14e:	21 f4       	brne	.+8      	; 0x158 <pinChange+0xd6>
 150:	88 b3       	in	r24, 0x18	; 24
 152:	8f 7b       	andi	r24, 0xBF	; 191
 154:	88 bb       	out	0x18, r24	; 24
 156:	08 95       	ret
 158:	81 31       	cpi	r24, 0x11	; 17
 15a:	91 05       	cpc	r25, r1
 15c:	21 f4       	brne	.+8      	; 0x166 <pinChange+0xe4>
 15e:	88 b3       	in	r24, 0x18	; 24
 160:	8f 77       	andi	r24, 0x7F	; 127
 162:	88 bb       	out	0x18, r24	; 24
 164:	08 95       	ret
 166:	84 31       	cpi	r24, 0x14	; 20
 168:	91 05       	cpc	r25, r1
 16a:	21 f4       	brne	.+8      	; 0x174 <pinChange+0xf2>
 16c:	85 b3       	in	r24, 0x15	; 21
 16e:	8e 7f       	andi	r24, 0xFE	; 254
 170:	85 bb       	out	0x15, r24	; 21
 172:	08 95       	ret
 174:	85 31       	cpi	r24, 0x15	; 21
 176:	91 05       	cpc	r25, r1
 178:	21 f4       	brne	.+8      	; 0x182 <pinChange+0x100>
 17a:	85 b3       	in	r24, 0x15	; 21
 17c:	8d 7f       	andi	r24, 0xFD	; 253
 17e:	85 bb       	out	0x15, r24	; 21
 180:	08 95       	ret
 182:	86 31       	cpi	r24, 0x16	; 22
 184:	91 05       	cpc	r25, r1
 186:	21 f4       	brne	.+8      	; 0x190 <pinChange+0x10e>
 188:	85 b3       	in	r24, 0x15	; 21
 18a:	8b 7f       	andi	r24, 0xFB	; 251
 18c:	85 bb       	out	0x15, r24	; 21
 18e:	08 95       	ret
 190:	87 31       	cpi	r24, 0x17	; 23
 192:	91 05       	cpc	r25, r1
 194:	21 f4       	brne	.+8      	; 0x19e <pinChange+0x11c>
 196:	85 b3       	in	r24, 0x15	; 21
 198:	87 7f       	andi	r24, 0xF7	; 247
 19a:	85 bb       	out	0x15, r24	; 21
 19c:	08 95       	ret
 19e:	88 31       	cpi	r24, 0x18	; 24
 1a0:	91 05       	cpc	r25, r1
 1a2:	21 f4       	brne	.+8      	; 0x1ac <pinChange+0x12a>
 1a4:	85 b3       	in	r24, 0x15	; 21
 1a6:	8f 7e       	andi	r24, 0xEF	; 239
 1a8:	85 bb       	out	0x15, r24	; 21
 1aa:	08 95       	ret
 1ac:	89 31       	cpi	r24, 0x19	; 25
 1ae:	91 05       	cpc	r25, r1
 1b0:	21 f4       	brne	.+8      	; 0x1ba <pinChange+0x138>
 1b2:	85 b3       	in	r24, 0x15	; 21
 1b4:	8f 7d       	andi	r24, 0xDF	; 223
 1b6:	85 bb       	out	0x15, r24	; 21
 1b8:	08 95       	ret
 1ba:	8a 31       	cpi	r24, 0x1A	; 26
 1bc:	91 05       	cpc	r25, r1
 1be:	21 f4       	brne	.+8      	; 0x1c8 <pinChange+0x146>
 1c0:	85 b3       	in	r24, 0x15	; 21
 1c2:	8f 7b       	andi	r24, 0xBF	; 191
 1c4:	85 bb       	out	0x15, r24	; 21
 1c6:	08 95       	ret
 1c8:	8b 31       	cpi	r24, 0x1B	; 27
 1ca:	91 05       	cpc	r25, r1
 1cc:	21 f4       	brne	.+8      	; 0x1d6 <pinChange+0x154>
 1ce:	85 b3       	in	r24, 0x15	; 21
 1d0:	8f 77       	andi	r24, 0x7F	; 127
 1d2:	85 bb       	out	0x15, r24	; 21
 1d4:	08 95       	ret
 1d6:	8e 31       	cpi	r24, 0x1E	; 30
 1d8:	91 05       	cpc	r25, r1
 1da:	21 f4       	brne	.+8      	; 0x1e4 <pinChange+0x162>
 1dc:	82 b3       	in	r24, 0x12	; 18
 1de:	8e 7f       	andi	r24, 0xFE	; 254
 1e0:	82 bb       	out	0x12, r24	; 18
 1e2:	08 95       	ret
 1e4:	8f 31       	cpi	r24, 0x1F	; 31
 1e6:	91 05       	cpc	r25, r1
 1e8:	21 f4       	brne	.+8      	; 0x1f2 <pinChange+0x170>
 1ea:	82 b3       	in	r24, 0x12	; 18
 1ec:	8d 7f       	andi	r24, 0xFD	; 253
 1ee:	82 bb       	out	0x12, r24	; 18
 1f0:	08 95       	ret
 1f2:	80 32       	cpi	r24, 0x20	; 32
 1f4:	91 05       	cpc	r25, r1
 1f6:	21 f4       	brne	.+8      	; 0x200 <pinChange+0x17e>
 1f8:	82 b3       	in	r24, 0x12	; 18
 1fa:	8b 7f       	andi	r24, 0xFB	; 251
 1fc:	82 bb       	out	0x12, r24	; 18
 1fe:	08 95       	ret
 200:	81 32       	cpi	r24, 0x21	; 33
 202:	91 05       	cpc	r25, r1
 204:	21 f4       	brne	.+8      	; 0x20e <pinChange+0x18c>
 206:	82 b3       	in	r24, 0x12	; 18
 208:	87 7f       	andi	r24, 0xF7	; 247
 20a:	82 bb       	out	0x12, r24	; 18
 20c:	08 95       	ret
 20e:	82 32       	cpi	r24, 0x22	; 34
 210:	91 05       	cpc	r25, r1
 212:	21 f4       	brne	.+8      	; 0x21c <pinChange+0x19a>
 214:	82 b3       	in	r24, 0x12	; 18
 216:	8f 7e       	andi	r24, 0xEF	; 239
 218:	82 bb       	out	0x12, r24	; 18
 21a:	08 95       	ret
 21c:	83 32       	cpi	r24, 0x23	; 35
 21e:	91 05       	cpc	r25, r1
 220:	21 f4       	brne	.+8      	; 0x22a <pinChange+0x1a8>
 222:	82 b3       	in	r24, 0x12	; 18
 224:	8f 7d       	andi	r24, 0xDF	; 223
 226:	82 bb       	out	0x12, r24	; 18
 228:	08 95       	ret
 22a:	84 32       	cpi	r24, 0x24	; 36
 22c:	91 05       	cpc	r25, r1
 22e:	21 f4       	brne	.+8      	; 0x238 <pinChange+0x1b6>
 230:	82 b3       	in	r24, 0x12	; 18
 232:	8f 7b       	andi	r24, 0xBF	; 191
 234:	82 bb       	out	0x12, r24	; 18
 236:	08 95       	ret
 238:	85 97       	sbiw	r24, 0x25	; 37
 23a:	09 f0       	breq	.+2      	; 0x23e <pinChange+0x1bc>
 23c:	e1 c0       	rjmp	.+450    	; 0x400 <__EEPROM_REGION_LENGTH__>
 23e:	82 b3       	in	r24, 0x12	; 18
 240:	8f 77       	andi	r24, 0x7F	; 127
 242:	82 bb       	out	0x12, r24	; 18
 244:	08 95       	ret
 246:	00 97       	sbiw	r24, 0x00	; 0
 248:	21 f4       	brne	.+8      	; 0x252 <pinChange+0x1d0>
 24a:	8b b3       	in	r24, 0x1b	; 27
 24c:	81 60       	ori	r24, 0x01	; 1
 24e:	8b bb       	out	0x1b, r24	; 27
 250:	08 95       	ret
 252:	81 30       	cpi	r24, 0x01	; 1
 254:	91 05       	cpc	r25, r1
 256:	21 f4       	brne	.+8      	; 0x260 <pinChange+0x1de>
 258:	8b b3       	in	r24, 0x1b	; 27
 25a:	82 60       	ori	r24, 0x02	; 2
 25c:	8b bb       	out	0x1b, r24	; 27
 25e:	08 95       	ret
 260:	82 30       	cpi	r24, 0x02	; 2
 262:	91 05       	cpc	r25, r1
 264:	21 f4       	brne	.+8      	; 0x26e <pinChange+0x1ec>
 266:	8b b3       	in	r24, 0x1b	; 27
 268:	84 60       	ori	r24, 0x04	; 4
 26a:	8b bb       	out	0x1b, r24	; 27
 26c:	08 95       	ret
 26e:	83 30       	cpi	r24, 0x03	; 3
 270:	91 05       	cpc	r25, r1
 272:	21 f4       	brne	.+8      	; 0x27c <pinChange+0x1fa>
 274:	8b b3       	in	r24, 0x1b	; 27
 276:	88 60       	ori	r24, 0x08	; 8
 278:	8b bb       	out	0x1b, r24	; 27
 27a:	08 95       	ret
 27c:	84 30       	cpi	r24, 0x04	; 4
 27e:	91 05       	cpc	r25, r1
 280:	21 f4       	brne	.+8      	; 0x28a <pinChange+0x208>
 282:	8b b3       	in	r24, 0x1b	; 27
 284:	80 61       	ori	r24, 0x10	; 16
 286:	8b bb       	out	0x1b, r24	; 27
 288:	08 95       	ret
 28a:	85 30       	cpi	r24, 0x05	; 5
 28c:	91 05       	cpc	r25, r1
 28e:	21 f4       	brne	.+8      	; 0x298 <pinChange+0x216>
 290:	8b b3       	in	r24, 0x1b	; 27
 292:	80 62       	ori	r24, 0x20	; 32
 294:	8b bb       	out	0x1b, r24	; 27
 296:	08 95       	ret
 298:	86 30       	cpi	r24, 0x06	; 6
 29a:	91 05       	cpc	r25, r1
 29c:	21 f4       	brne	.+8      	; 0x2a6 <pinChange+0x224>
 29e:	8b b3       	in	r24, 0x1b	; 27
 2a0:	80 64       	ori	r24, 0x40	; 64
 2a2:	8b bb       	out	0x1b, r24	; 27
 2a4:	08 95       	ret
 2a6:	87 30       	cpi	r24, 0x07	; 7
 2a8:	91 05       	cpc	r25, r1
 2aa:	21 f4       	brne	.+8      	; 0x2b4 <pinChange+0x232>
 2ac:	8b b3       	in	r24, 0x1b	; 27
 2ae:	80 68       	ori	r24, 0x80	; 128
 2b0:	8b bb       	out	0x1b, r24	; 27
 2b2:	08 95       	ret
 2b4:	8a 30       	cpi	r24, 0x0A	; 10
 2b6:	91 05       	cpc	r25, r1
 2b8:	21 f4       	brne	.+8      	; 0x2c2 <pinChange+0x240>
 2ba:	88 b3       	in	r24, 0x18	; 24
 2bc:	81 60       	ori	r24, 0x01	; 1
 2be:	88 bb       	out	0x18, r24	; 24
 2c0:	08 95       	ret
 2c2:	8b 30       	cpi	r24, 0x0B	; 11
 2c4:	91 05       	cpc	r25, r1
 2c6:	21 f4       	brne	.+8      	; 0x2d0 <pinChange+0x24e>
 2c8:	88 b3       	in	r24, 0x18	; 24
 2ca:	82 60       	ori	r24, 0x02	; 2
 2cc:	88 bb       	out	0x18, r24	; 24
 2ce:	08 95       	ret
 2d0:	8c 30       	cpi	r24, 0x0C	; 12
 2d2:	91 05       	cpc	r25, r1
 2d4:	21 f4       	brne	.+8      	; 0x2de <pinChange+0x25c>
 2d6:	88 b3       	in	r24, 0x18	; 24
 2d8:	84 60       	ori	r24, 0x04	; 4
 2da:	88 bb       	out	0x18, r24	; 24
 2dc:	08 95       	ret
 2de:	8d 30       	cpi	r24, 0x0D	; 13
 2e0:	91 05       	cpc	r25, r1
 2e2:	21 f4       	brne	.+8      	; 0x2ec <pinChange+0x26a>
 2e4:	88 b3       	in	r24, 0x18	; 24
 2e6:	88 60       	ori	r24, 0x08	; 8
 2e8:	88 bb       	out	0x18, r24	; 24
 2ea:	08 95       	ret
 2ec:	8e 30       	cpi	r24, 0x0E	; 14
 2ee:	91 05       	cpc	r25, r1
 2f0:	21 f4       	brne	.+8      	; 0x2fa <pinChange+0x278>
 2f2:	88 b3       	in	r24, 0x18	; 24
 2f4:	80 61       	ori	r24, 0x10	; 16
 2f6:	88 bb       	out	0x18, r24	; 24
 2f8:	08 95       	ret
 2fa:	8f 30       	cpi	r24, 0x0F	; 15
 2fc:	91 05       	cpc	r25, r1
 2fe:	21 f4       	brne	.+8      	; 0x308 <pinChange+0x286>
 300:	88 b3       	in	r24, 0x18	; 24
 302:	80 62       	ori	r24, 0x20	; 32
 304:	88 bb       	out	0x18, r24	; 24
 306:	08 95       	ret
 308:	80 31       	cpi	r24, 0x10	; 16
 30a:	91 05       	cpc	r25, r1
 30c:	21 f4       	brne	.+8      	; 0x316 <pinChange+0x294>
 30e:	88 b3       	in	r24, 0x18	; 24
 310:	80 64       	ori	r24, 0x40	; 64
 312:	88 bb       	out	0x18, r24	; 24
 314:	08 95       	ret
 316:	81 31       	cpi	r24, 0x11	; 17
 318:	91 05       	cpc	r25, r1
 31a:	21 f4       	brne	.+8      	; 0x324 <pinChange+0x2a2>
 31c:	88 b3       	in	r24, 0x18	; 24
 31e:	80 68       	ori	r24, 0x80	; 128
 320:	88 bb       	out	0x18, r24	; 24
 322:	08 95       	ret
 324:	84 31       	cpi	r24, 0x14	; 20
 326:	91 05       	cpc	r25, r1
 328:	21 f4       	brne	.+8      	; 0x332 <pinChange+0x2b0>
 32a:	85 b3       	in	r24, 0x15	; 21
 32c:	81 60       	ori	r24, 0x01	; 1
 32e:	85 bb       	out	0x15, r24	; 21
 330:	08 95       	ret
 332:	85 31       	cpi	r24, 0x15	; 21
 334:	91 05       	cpc	r25, r1
 336:	21 f4       	brne	.+8      	; 0x340 <pinChange+0x2be>
 338:	85 b3       	in	r24, 0x15	; 21
 33a:	82 60       	ori	r24, 0x02	; 2
 33c:	85 bb       	out	0x15, r24	; 21
 33e:	08 95       	ret
 340:	86 31       	cpi	r24, 0x16	; 22
 342:	91 05       	cpc	r25, r1
 344:	21 f4       	brne	.+8      	; 0x34e <pinChange+0x2cc>
 346:	85 b3       	in	r24, 0x15	; 21
 348:	84 60       	ori	r24, 0x04	; 4
 34a:	85 bb       	out	0x15, r24	; 21
 34c:	08 95       	ret
 34e:	87 31       	cpi	r24, 0x17	; 23
 350:	91 05       	cpc	r25, r1
 352:	21 f4       	brne	.+8      	; 0x35c <pinChange+0x2da>
 354:	85 b3       	in	r24, 0x15	; 21
 356:	88 60       	ori	r24, 0x08	; 8
 358:	85 bb       	out	0x15, r24	; 21
 35a:	08 95       	ret
 35c:	88 31       	cpi	r24, 0x18	; 24
 35e:	91 05       	cpc	r25, r1
 360:	21 f4       	brne	.+8      	; 0x36a <pinChange+0x2e8>
 362:	85 b3       	in	r24, 0x15	; 21
 364:	80 61       	ori	r24, 0x10	; 16
 366:	85 bb       	out	0x15, r24	; 21
 368:	08 95       	ret
 36a:	89 31       	cpi	r24, 0x19	; 25
 36c:	91 05       	cpc	r25, r1
 36e:	21 f4       	brne	.+8      	; 0x378 <pinChange+0x2f6>
 370:	85 b3       	in	r24, 0x15	; 21
 372:	80 62       	ori	r24, 0x20	; 32
 374:	85 bb       	out	0x15, r24	; 21
 376:	08 95       	ret
 378:	8a 31       	cpi	r24, 0x1A	; 26
 37a:	91 05       	cpc	r25, r1
 37c:	21 f4       	brne	.+8      	; 0x386 <pinChange+0x304>
 37e:	85 b3       	in	r24, 0x15	; 21
 380:	80 64       	ori	r24, 0x40	; 64
 382:	85 bb       	out	0x15, r24	; 21
 384:	08 95       	ret
 386:	8b 31       	cpi	r24, 0x1B	; 27
 388:	91 05       	cpc	r25, r1
 38a:	21 f4       	brne	.+8      	; 0x394 <pinChange+0x312>
 38c:	85 b3       	in	r24, 0x15	; 21
 38e:	80 68       	ori	r24, 0x80	; 128
 390:	85 bb       	out	0x15, r24	; 21
 392:	08 95       	ret
 394:	8e 31       	cpi	r24, 0x1E	; 30
 396:	91 05       	cpc	r25, r1
 398:	21 f4       	brne	.+8      	; 0x3a2 <pinChange+0x320>
 39a:	82 b3       	in	r24, 0x12	; 18
 39c:	81 60       	ori	r24, 0x01	; 1
 39e:	82 bb       	out	0x12, r24	; 18
 3a0:	08 95       	ret
 3a2:	8f 31       	cpi	r24, 0x1F	; 31
 3a4:	91 05       	cpc	r25, r1
 3a6:	21 f4       	brne	.+8      	; 0x3b0 <pinChange+0x32e>
 3a8:	82 b3       	in	r24, 0x12	; 18
 3aa:	82 60       	ori	r24, 0x02	; 2
 3ac:	82 bb       	out	0x12, r24	; 18
 3ae:	08 95       	ret
 3b0:	80 32       	cpi	r24, 0x20	; 32
 3b2:	91 05       	cpc	r25, r1
 3b4:	21 f4       	brne	.+8      	; 0x3be <pinChange+0x33c>
 3b6:	82 b3       	in	r24, 0x12	; 18
 3b8:	84 60       	ori	r24, 0x04	; 4
 3ba:	82 bb       	out	0x12, r24	; 18
 3bc:	08 95       	ret
 3be:	81 32       	cpi	r24, 0x21	; 33
 3c0:	91 05       	cpc	r25, r1
 3c2:	21 f4       	brne	.+8      	; 0x3cc <pinChange+0x34a>
 3c4:	82 b3       	in	r24, 0x12	; 18
 3c6:	88 60       	ori	r24, 0x08	; 8
 3c8:	82 bb       	out	0x12, r24	; 18
 3ca:	08 95       	ret
 3cc:	82 32       	cpi	r24, 0x22	; 34
 3ce:	91 05       	cpc	r25, r1
 3d0:	21 f4       	brne	.+8      	; 0x3da <pinChange+0x358>
 3d2:	82 b3       	in	r24, 0x12	; 18
 3d4:	80 61       	ori	r24, 0x10	; 16
 3d6:	82 bb       	out	0x12, r24	; 18
 3d8:	08 95       	ret
 3da:	83 32       	cpi	r24, 0x23	; 35
 3dc:	91 05       	cpc	r25, r1
 3de:	21 f4       	brne	.+8      	; 0x3e8 <pinChange+0x366>
 3e0:	82 b3       	in	r24, 0x12	; 18
 3e2:	80 62       	ori	r24, 0x20	; 32
 3e4:	82 bb       	out	0x12, r24	; 18
 3e6:	08 95       	ret
 3e8:	84 32       	cpi	r24, 0x24	; 36
 3ea:	91 05       	cpc	r25, r1
 3ec:	21 f4       	brne	.+8      	; 0x3f6 <pinChange+0x374>
 3ee:	82 b3       	in	r24, 0x12	; 18
 3f0:	80 64       	ori	r24, 0x40	; 64
 3f2:	82 bb       	out	0x12, r24	; 18
 3f4:	08 95       	ret
 3f6:	85 97       	sbiw	r24, 0x25	; 37
 3f8:	19 f4       	brne	.+6      	; 0x400 <__EEPROM_REGION_LENGTH__>
 3fa:	82 b3       	in	r24, 0x12	; 18
 3fc:	80 68       	ori	r24, 0x80	; 128
 3fe:	82 bb       	out	0x12, r24	; 18
 400:	08 95       	ret

00000402 <Lcd4_Port>:
 402:	cf 93       	push	r28
 404:	c8 2f       	mov	r28, r24
 406:	80 ff       	sbrs	r24, 0
 408:	07 c0       	rjmp	.+14     	; 0x418 <Lcd4_Port+0x16>
 40a:	61 e0       	ldi	r22, 0x01	; 1
 40c:	70 e0       	ldi	r23, 0x00	; 0
 40e:	84 e0       	ldi	r24, 0x04	; 4
 410:	90 e0       	ldi	r25, 0x00	; 0
 412:	0e 94 41 00 	call	0x82	; 0x82 <pinChange>
 416:	06 c0       	rjmp	.+12     	; 0x424 <Lcd4_Port+0x22>
 418:	60 e0       	ldi	r22, 0x00	; 0
 41a:	70 e0       	ldi	r23, 0x00	; 0
 41c:	84 e0       	ldi	r24, 0x04	; 4
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	0e 94 41 00 	call	0x82	; 0x82 <pinChange>
 424:	c1 ff       	sbrs	r28, 1
 426:	07 c0       	rjmp	.+14     	; 0x436 <Lcd4_Port+0x34>
 428:	61 e0       	ldi	r22, 0x01	; 1
 42a:	70 e0       	ldi	r23, 0x00	; 0
 42c:	85 e0       	ldi	r24, 0x05	; 5
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	0e 94 41 00 	call	0x82	; 0x82 <pinChange>
 434:	06 c0       	rjmp	.+12     	; 0x442 <Lcd4_Port+0x40>
 436:	60 e0       	ldi	r22, 0x00	; 0
 438:	70 e0       	ldi	r23, 0x00	; 0
 43a:	85 e0       	ldi	r24, 0x05	; 5
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	0e 94 41 00 	call	0x82	; 0x82 <pinChange>
 442:	c2 ff       	sbrs	r28, 2
 444:	07 c0       	rjmp	.+14     	; 0x454 <Lcd4_Port+0x52>
 446:	61 e0       	ldi	r22, 0x01	; 1
 448:	70 e0       	ldi	r23, 0x00	; 0
 44a:	86 e0       	ldi	r24, 0x06	; 6
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	0e 94 41 00 	call	0x82	; 0x82 <pinChange>
 452:	06 c0       	rjmp	.+12     	; 0x460 <Lcd4_Port+0x5e>
 454:	60 e0       	ldi	r22, 0x00	; 0
 456:	70 e0       	ldi	r23, 0x00	; 0
 458:	86 e0       	ldi	r24, 0x06	; 6
 45a:	90 e0       	ldi	r25, 0x00	; 0
 45c:	0e 94 41 00 	call	0x82	; 0x82 <pinChange>
 460:	c3 ff       	sbrs	r28, 3
 462:	07 c0       	rjmp	.+14     	; 0x472 <Lcd4_Port+0x70>
 464:	61 e0       	ldi	r22, 0x01	; 1
 466:	70 e0       	ldi	r23, 0x00	; 0
 468:	87 e0       	ldi	r24, 0x07	; 7
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	0e 94 41 00 	call	0x82	; 0x82 <pinChange>
 470:	06 c0       	rjmp	.+12     	; 0x47e <Lcd4_Port+0x7c>
 472:	60 e0       	ldi	r22, 0x00	; 0
 474:	70 e0       	ldi	r23, 0x00	; 0
 476:	87 e0       	ldi	r24, 0x07	; 7
 478:	90 e0       	ldi	r25, 0x00	; 0
 47a:	0e 94 41 00 	call	0x82	; 0x82 <pinChange>
 47e:	cf 91       	pop	r28
 480:	08 95       	ret

00000482 <Lcd4_Cmd>:
 482:	cf 93       	push	r28
 484:	c8 2f       	mov	r28, r24
 486:	60 e0       	ldi	r22, 0x00	; 0
 488:	70 e0       	ldi	r23, 0x00	; 0
 48a:	80 e0       	ldi	r24, 0x00	; 0
 48c:	90 e0       	ldi	r25, 0x00	; 0
 48e:	0e 94 41 00 	call	0x82	; 0x82 <pinChange>
 492:	8c 2f       	mov	r24, r28
 494:	0e 94 01 02 	call	0x402	; 0x402 <Lcd4_Port>
 498:	61 e0       	ldi	r22, 0x01	; 1
 49a:	70 e0       	ldi	r23, 0x00	; 0
 49c:	81 e0       	ldi	r24, 0x01	; 1
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	0e 94 41 00 	call	0x82	; 0x82 <pinChange>
 4a4:	89 ef       	ldi	r24, 0xF9	; 249
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	01 97       	sbiw	r24, 0x01	; 1
 4aa:	f1 f7       	brne	.-4      	; 0x4a8 <Lcd4_Cmd+0x26>
 4ac:	00 c0       	rjmp	.+0      	; 0x4ae <Lcd4_Cmd+0x2c>
 4ae:	00 00       	nop
 4b0:	60 e0       	ldi	r22, 0x00	; 0
 4b2:	70 e0       	ldi	r23, 0x00	; 0
 4b4:	81 e0       	ldi	r24, 0x01	; 1
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	0e 94 41 00 	call	0x82	; 0x82 <pinChange>
 4bc:	89 ef       	ldi	r24, 0xF9	; 249
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	01 97       	sbiw	r24, 0x01	; 1
 4c2:	f1 f7       	brne	.-4      	; 0x4c0 <Lcd4_Cmd+0x3e>
 4c4:	00 c0       	rjmp	.+0      	; 0x4c6 <Lcd4_Cmd+0x44>
 4c6:	00 00       	nop
 4c8:	cf 91       	pop	r28
 4ca:	08 95       	ret

000004cc <Lcd4_Clear>:
 4cc:	80 e0       	ldi	r24, 0x00	; 0
 4ce:	0e 94 41 02 	call	0x482	; 0x482 <Lcd4_Cmd>
 4d2:	81 e0       	ldi	r24, 0x01	; 1
 4d4:	0e 94 41 02 	call	0x482	; 0x482 <Lcd4_Cmd>
 4d8:	08 95       	ret

000004da <Lcd4_Set_Cursor>:
 4da:	cf 93       	push	r28
 4dc:	81 30       	cpi	r24, 0x01	; 1
 4de:	61 f4       	brne	.+24     	; 0x4f8 <Lcd4_Set_Cursor+0x1e>
 4e0:	80 e8       	ldi	r24, 0x80	; 128
 4e2:	86 0f       	add	r24, r22
 4e4:	c6 2f       	mov	r28, r22
 4e6:	cf 70       	andi	r28, 0x0F	; 15
 4e8:	82 95       	swap	r24
 4ea:	8f 70       	andi	r24, 0x0F	; 15
 4ec:	0e 94 41 02 	call	0x482	; 0x482 <Lcd4_Cmd>
 4f0:	8c 2f       	mov	r24, r28
 4f2:	0e 94 41 02 	call	0x482	; 0x482 <Lcd4_Cmd>
 4f6:	0d c0       	rjmp	.+26     	; 0x512 <Lcd4_Set_Cursor+0x38>
 4f8:	82 30       	cpi	r24, 0x02	; 2
 4fa:	59 f4       	brne	.+22     	; 0x512 <Lcd4_Set_Cursor+0x38>
 4fc:	80 ec       	ldi	r24, 0xC0	; 192
 4fe:	86 0f       	add	r24, r22
 500:	c6 2f       	mov	r28, r22
 502:	cf 70       	andi	r28, 0x0F	; 15
 504:	82 95       	swap	r24
 506:	8f 70       	andi	r24, 0x0F	; 15
 508:	0e 94 41 02 	call	0x482	; 0x482 <Lcd4_Cmd>
 50c:	8c 2f       	mov	r24, r28
 50e:	0e 94 41 02 	call	0x482	; 0x482 <Lcd4_Cmd>
 512:	cf 91       	pop	r28
 514:	08 95       	ret

00000516 <Lcd4_Init>:
 516:	80 e0       	ldi	r24, 0x00	; 0
 518:	0e 94 01 02 	call	0x402	; 0x402 <Lcd4_Port>
 51c:	87 e8       	ldi	r24, 0x87	; 135
 51e:	93 e1       	ldi	r25, 0x13	; 19
 520:	01 97       	sbiw	r24, 0x01	; 1
 522:	f1 f7       	brne	.-4      	; 0x520 <Lcd4_Init+0xa>
 524:	00 c0       	rjmp	.+0      	; 0x526 <Lcd4_Init+0x10>
 526:	00 00       	nop
 528:	83 e0       	ldi	r24, 0x03	; 3
 52a:	0e 94 41 02 	call	0x482	; 0x482 <Lcd4_Cmd>
 52e:	81 ee       	ldi	r24, 0xE1	; 225
 530:	94 e0       	ldi	r25, 0x04	; 4
 532:	01 97       	sbiw	r24, 0x01	; 1
 534:	f1 f7       	brne	.-4      	; 0x532 <Lcd4_Init+0x1c>
 536:	00 c0       	rjmp	.+0      	; 0x538 <Lcd4_Init+0x22>
 538:	00 00       	nop
 53a:	83 e0       	ldi	r24, 0x03	; 3
 53c:	0e 94 41 02 	call	0x482	; 0x482 <Lcd4_Cmd>
 540:	8d eb       	ldi	r24, 0xBD	; 189
 542:	9a e0       	ldi	r25, 0x0A	; 10
 544:	01 97       	sbiw	r24, 0x01	; 1
 546:	f1 f7       	brne	.-4      	; 0x544 <Lcd4_Init+0x2e>
 548:	00 c0       	rjmp	.+0      	; 0x54a <Lcd4_Init+0x34>
 54a:	00 00       	nop
 54c:	83 e0       	ldi	r24, 0x03	; 3
 54e:	0e 94 41 02 	call	0x482	; 0x482 <Lcd4_Cmd>
 552:	82 e0       	ldi	r24, 0x02	; 2
 554:	0e 94 41 02 	call	0x482	; 0x482 <Lcd4_Cmd>
 558:	82 e0       	ldi	r24, 0x02	; 2
 55a:	0e 94 41 02 	call	0x482	; 0x482 <Lcd4_Cmd>
 55e:	88 e0       	ldi	r24, 0x08	; 8
 560:	0e 94 41 02 	call	0x482	; 0x482 <Lcd4_Cmd>
 564:	80 e0       	ldi	r24, 0x00	; 0
 566:	0e 94 41 02 	call	0x482	; 0x482 <Lcd4_Cmd>
 56a:	8c e0       	ldi	r24, 0x0C	; 12
 56c:	0e 94 41 02 	call	0x482	; 0x482 <Lcd4_Cmd>
 570:	80 e0       	ldi	r24, 0x00	; 0
 572:	0e 94 41 02 	call	0x482	; 0x482 <Lcd4_Cmd>
 576:	86 e0       	ldi	r24, 0x06	; 6
 578:	0e 94 41 02 	call	0x482	; 0x482 <Lcd4_Cmd>
 57c:	08 95       	ret

0000057e <Lcd4_Write_Char>:
 57e:	cf 93       	push	r28
 580:	df 93       	push	r29
 582:	d8 2f       	mov	r29, r24
 584:	df 70       	andi	r29, 0x0F	; 15
 586:	c8 2f       	mov	r28, r24
 588:	c0 7f       	andi	r28, 0xF0	; 240
 58a:	61 e0       	ldi	r22, 0x01	; 1
 58c:	70 e0       	ldi	r23, 0x00	; 0
 58e:	80 e0       	ldi	r24, 0x00	; 0
 590:	90 e0       	ldi	r25, 0x00	; 0
 592:	0e 94 41 00 	call	0x82	; 0x82 <pinChange>
 596:	8c 2f       	mov	r24, r28
 598:	82 95       	swap	r24
 59a:	8f 70       	andi	r24, 0x0F	; 15
 59c:	0e 94 01 02 	call	0x402	; 0x402 <Lcd4_Port>
 5a0:	61 e0       	ldi	r22, 0x01	; 1
 5a2:	70 e0       	ldi	r23, 0x00	; 0
 5a4:	81 e0       	ldi	r24, 0x01	; 1
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	0e 94 41 00 	call	0x82	; 0x82 <pinChange>
 5ac:	89 ef       	ldi	r24, 0xF9	; 249
 5ae:	90 e0       	ldi	r25, 0x00	; 0
 5b0:	01 97       	sbiw	r24, 0x01	; 1
 5b2:	f1 f7       	brne	.-4      	; 0x5b0 <Lcd4_Write_Char+0x32>
 5b4:	00 c0       	rjmp	.+0      	; 0x5b6 <Lcd4_Write_Char+0x38>
 5b6:	00 00       	nop
 5b8:	60 e0       	ldi	r22, 0x00	; 0
 5ba:	70 e0       	ldi	r23, 0x00	; 0
 5bc:	81 e0       	ldi	r24, 0x01	; 1
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	0e 94 41 00 	call	0x82	; 0x82 <pinChange>
 5c4:	89 ef       	ldi	r24, 0xF9	; 249
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	01 97       	sbiw	r24, 0x01	; 1
 5ca:	f1 f7       	brne	.-4      	; 0x5c8 <Lcd4_Write_Char+0x4a>
 5cc:	00 c0       	rjmp	.+0      	; 0x5ce <Lcd4_Write_Char+0x50>
 5ce:	00 00       	nop
 5d0:	8d 2f       	mov	r24, r29
 5d2:	0e 94 01 02 	call	0x402	; 0x402 <Lcd4_Port>
 5d6:	61 e0       	ldi	r22, 0x01	; 1
 5d8:	70 e0       	ldi	r23, 0x00	; 0
 5da:	81 e0       	ldi	r24, 0x01	; 1
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	0e 94 41 00 	call	0x82	; 0x82 <pinChange>
 5e2:	89 ef       	ldi	r24, 0xF9	; 249
 5e4:	90 e0       	ldi	r25, 0x00	; 0
 5e6:	01 97       	sbiw	r24, 0x01	; 1
 5e8:	f1 f7       	brne	.-4      	; 0x5e6 <Lcd4_Write_Char+0x68>
 5ea:	00 c0       	rjmp	.+0      	; 0x5ec <Lcd4_Write_Char+0x6e>
 5ec:	00 00       	nop
 5ee:	60 e0       	ldi	r22, 0x00	; 0
 5f0:	70 e0       	ldi	r23, 0x00	; 0
 5f2:	81 e0       	ldi	r24, 0x01	; 1
 5f4:	90 e0       	ldi	r25, 0x00	; 0
 5f6:	0e 94 41 00 	call	0x82	; 0x82 <pinChange>
 5fa:	89 ef       	ldi	r24, 0xF9	; 249
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	01 97       	sbiw	r24, 0x01	; 1
 600:	f1 f7       	brne	.-4      	; 0x5fe <Lcd4_Write_Char+0x80>
 602:	00 c0       	rjmp	.+0      	; 0x604 <Lcd4_Write_Char+0x86>
 604:	00 00       	nop
 606:	df 91       	pop	r29
 608:	cf 91       	pop	r28
 60a:	08 95       	ret

0000060c <Lcd4_Write_String>:
 60c:	0f 93       	push	r16
 60e:	1f 93       	push	r17
 610:	cf 93       	push	r28
 612:	df 93       	push	r29
 614:	8c 01       	movw	r16, r24
 616:	c0 e0       	ldi	r28, 0x00	; 0
 618:	d0 e0       	ldi	r29, 0x00	; 0
 61a:	03 c0       	rjmp	.+6      	; 0x622 <Lcd4_Write_String+0x16>
 61c:	0e 94 bf 02 	call	0x57e	; 0x57e <Lcd4_Write_Char>
 620:	21 96       	adiw	r28, 0x01	; 1
 622:	f8 01       	movw	r30, r16
 624:	ec 0f       	add	r30, r28
 626:	fd 1f       	adc	r31, r29
 628:	80 81       	ld	r24, Z
 62a:	81 11       	cpse	r24, r1
 62c:	f7 cf       	rjmp	.-18     	; 0x61c <Lcd4_Write_String+0x10>
 62e:	df 91       	pop	r29
 630:	cf 91       	pop	r28
 632:	1f 91       	pop	r17
 634:	0f 91       	pop	r16
 636:	08 95       	ret

00000638 <UART_init>:


void UART_init()
{	
	
	UCSRB = 0b00010000;// Turn on the reception
 638:	80 e1       	ldi	r24, 0x10	; 16
 63a:	8a b9       	out	0x0a, r24	; 10
	UCSRC = 0b10000110;
 63c:	86 e8       	ldi	r24, 0x86	; 134
 63e:	80 bd       	out	0x20, r24	; 32
	//UCSRC |= (1 << URSEL) | (1 << UCSZ0) | (1 << UCSZ1);// Use 8-bit character sizes
	UCSRA = 0b00000000;
 640:	1b b8       	out	0x0b, r1	; 11
	UCSRA |= (1 << RXC);
 642:	8b b1       	in	r24, 0x0b	; 11
 644:	80 68       	ori	r24, 0x80	; 128
 646:	8b b9       	out	0x0b, r24	; 11
	// | (0<<TXC)|(0<<UDRE)|(0<<FE)|(0<<DOR)|(0<UPE)|(0<<U2X)|(0<<MPCM)

	//UBRRL = BAUD_PRESCALE;		// Load lower 8-bits of the baud rate
	//UBRRH = (BAUD_PRESCALE >> 8);	// Load upper 8-bits
	UBRRL = 0x19;
 648:	89 e1       	ldi	r24, 0x19	; 25
 64a:	89 b9       	out	0x09, r24	; 9
	UBRRH = 0x00;
 64c:	10 bc       	out	0x20, r1	; 32
 64e:	08 95       	ret

00000650 <UART_RxChar>:
}

unsigned char UART_RxChar()
{
	while ((UCSRA & (1 << RXC)) == 0x00);// Wait till data is received
 650:	5f 9b       	sbis	0x0b, 7	; 11
 652:	fe cf       	rjmp	.-4      	; 0x650 <UART_RxChar>
	return UDR;		// Return the byte
 654:	8c b1       	in	r24, 0x0c	; 12
}
 656:	08 95       	ret

00000658 <main>:
unsigned char UART_TxChar(){
	
	
}*/
int main(void)
{	
 658:	cf 93       	push	r28
 65a:	df 93       	push	r29
 65c:	cd b7       	in	r28, 0x3d	; 61
 65e:	de b7       	in	r29, 0x3e	; 62
 660:	2e 97       	sbiw	r28, 0x0e	; 14
 662:	0f b6       	in	r0, 0x3f	; 63
 664:	f8 94       	cli
 666:	de bf       	out	0x3e, r29	; 62
 668:	0f be       	out	0x3f, r0	; 63
 66a:	cd bf       	out	0x3d, r28	; 61
   DDRD = 0b11111110;
 66c:	8e ef       	ldi	r24, 0xFE	; 254
 66e:	81 bb       	out	0x11, r24	; 17
   DDRA = 0xFF;
 670:	8f ef       	ldi	r24, 0xFF	; 255
 672:	8a bb       	out	0x1a, r24	; 26
   Lcd4_Init();
 674:	0e 94 8b 02 	call	0x516	; 0x516 <Lcd4_Init>
   UART_init();
 678:	0e 94 1c 03 	call	0x638	; 0x638 <UART_init>
   unsigned char id[10];
   int count = 1;
   Lcd4_Write_String("Waiting for  ");
 67c:	8a e9       	ldi	r24, 0x9A	; 154
 67e:	90 e0       	ldi	r25, 0x00	; 0
 680:	0e 94 06 03 	call	0x60c	; 0x60c <Lcd4_Write_String>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 684:	2f e9       	ldi	r18, 0x9F	; 159
 686:	36 e8       	ldi	r19, 0x86	; 134
 688:	81 e0       	ldi	r24, 0x01	; 1
 68a:	21 50       	subi	r18, 0x01	; 1
 68c:	30 40       	sbci	r19, 0x00	; 0
 68e:	80 40       	sbci	r24, 0x00	; 0
 690:	e1 f7       	brne	.-8      	; 0x68a <main+0x32>
 692:	00 c0       	rjmp	.+0      	; 0x694 <main+0x3c>
 694:	00 00       	nop
   _delay_ms(500);
   Lcd4_Set_Cursor(2, 1);
 696:	61 e0       	ldi	r22, 0x01	; 1
 698:	82 e0       	ldi	r24, 0x02	; 2
 69a:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Set_Cursor>
   Lcd4_Write_String("RFID Tag");
 69e:	88 ea       	ldi	r24, 0xA8	; 168
 6a0:	90 e0       	ldi	r25, 0x00	; 0
 6a2:	0e 94 06 03 	call	0x60c	; 0x60c <Lcd4_Write_String>
 6a6:	9f e9       	ldi	r25, 0x9F	; 159
 6a8:	26 e8       	ldi	r18, 0x86	; 134
 6aa:	31 e0       	ldi	r19, 0x01	; 1
 6ac:	91 50       	subi	r25, 0x01	; 1
 6ae:	20 40       	sbci	r18, 0x00	; 0
 6b0:	30 40       	sbci	r19, 0x00	; 0
 6b2:	e1 f7       	brne	.-8      	; 0x6ac <main+0x54>
 6b4:	00 c0       	rjmp	.+0      	; 0x6b6 <main+0x5e>
 6b6:	00 00       	nop
   _delay_ms(500);
   Lcd4_Clear();
 6b8:	0e 94 66 02 	call	0x4cc	; 0x4cc <Lcd4_Clear>
   
   Lcd4_Set_Cursor(1, 0);
 6bc:	60 e0       	ldi	r22, 0x00	; 0
 6be:	81 e0       	ldi	r24, 0x01	; 1
 6c0:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Set_Cursor>
   
   int match = 0;
 6c4:	e1 2c       	mov	r14, r1
 6c6:	f1 2c       	mov	r15, r1
   DDRD = 0b11111110;
   DDRA = 0xFF;
   Lcd4_Init();
   UART_init();
   unsigned char id[10];
   int count = 1;
 6c8:	01 e0       	ldi	r16, 0x01	; 1
 6ca:	10 e0       	ldi	r17, 0x00	; 0
   Lcd4_Set_Cursor(1, 0);
   
   int match = 0;
    while (1) 
    {	
		id[count-1] = UART_RxChar();
 6cc:	0e 94 28 03 	call	0x650	; 0x650 <UART_RxChar>
 6d0:	f8 01       	movw	r30, r16
 6d2:	31 97       	sbiw	r30, 0x01	; 1
 6d4:	21 e0       	ldi	r18, 0x01	; 1
 6d6:	30 e0       	ldi	r19, 0x00	; 0
 6d8:	2c 0f       	add	r18, r28
 6da:	3d 1f       	adc	r19, r29
 6dc:	e2 0f       	add	r30, r18
 6de:	f3 1f       	adc	r31, r19
 6e0:	80 83       	st	Z, r24
		Lcd4_Write_Char(id[count-1]);
 6e2:	0e 94 bf 02 	call	0x57e	; 0x57e <Lcd4_Write_Char>
		if(count < id_len){
 6e6:	60 91 96 00 	lds	r22, 0x0096	; 0x800096 <id_len>
 6ea:	70 91 97 00 	lds	r23, 0x0097	; 0x800097 <id_len+0x1>
 6ee:	06 17       	cp	r16, r22
 6f0:	17 07       	cpc	r17, r23
 6f2:	1c f4       	brge	.+6      	; 0x6fa <main+0xa2>
			count++;
 6f4:	0f 5f       	subi	r16, 0xFF	; 255
 6f6:	1f 4f       	sbci	r17, 0xFF	; 255
			continue;
 6f8:	e9 cf       	rjmp	.-46     	; 0x6cc <main+0x74>
		 }
		 else if(count == id_len){
 6fa:	06 17       	cp	r16, r22
 6fc:	17 07       	cpc	r17, r23
 6fe:	b1 f5       	brne	.+108    	; 0x76c <main+0x114>
 700:	28 c0       	rjmp	.+80     	; 0x752 <main+0xfa>
			 int j;
			 for(int i = 0; i<total_id; i++){
				 for(j = 0; j<id_len; j++){
					 if(valid_id[i][j] != id[j]){
 702:	ca 01       	movw	r24, r20
 704:	88 0f       	add	r24, r24
 706:	99 1f       	adc	r25, r25
 708:	88 0f       	add	r24, r24
 70a:	99 1f       	adc	r25, r25
 70c:	88 0f       	add	r24, r24
 70e:	99 1f       	adc	r25, r25
 710:	fa 01       	movw	r30, r20
 712:	ee 0f       	add	r30, r30
 714:	ff 1f       	adc	r31, r31
 716:	e8 0f       	add	r30, r24
 718:	f9 1f       	adc	r31, r25
 71a:	ec 59       	subi	r30, 0x9C	; 156
 71c:	ff 4f       	sbci	r31, 0xFF	; 255
 71e:	e2 0f       	add	r30, r18
 720:	f3 1f       	adc	r31, r19
 722:	90 81       	ld	r25, Z
 724:	e1 e0       	ldi	r30, 0x01	; 1
 726:	f0 e0       	ldi	r31, 0x00	; 0
 728:	ec 0f       	add	r30, r28
 72a:	fd 1f       	adc	r31, r29
 72c:	e2 0f       	add	r30, r18
 72e:	f3 1f       	adc	r31, r19
 730:	80 81       	ld	r24, Z
 732:	98 13       	cpse	r25, r24
 734:	08 c0       	rjmp	.+16     	; 0x746 <main+0xee>
			continue;
		 }
		 else if(count == id_len){
			 int j;
			 for(int i = 0; i<total_id; i++){
				 for(j = 0; j<id_len; j++){
 736:	2f 5f       	subi	r18, 0xFF	; 255
 738:	3f 4f       	sbci	r19, 0xFF	; 255
 73a:	02 c0       	rjmp	.+4      	; 0x740 <main+0xe8>
 73c:	20 e0       	ldi	r18, 0x00	; 0
 73e:	30 e0       	ldi	r19, 0x00	; 0
 740:	26 17       	cp	r18, r22
 742:	37 07       	cpc	r19, r23
 744:	f4 f2       	brlt	.-68     	; 0x702 <main+0xaa>
					 if(valid_id[i][j] != id[j]){
						break;
					 }	 
				 }
				 if(j == id_len){
 746:	26 17       	cp	r18, r22
 748:	37 07       	cpc	r19, r23
 74a:	69 f0       	breq	.+26     	; 0x766 <main+0x10e>
			count++;
			continue;
		 }
		 else if(count == id_len){
			 int j;
			 for(int i = 0; i<total_id; i++){
 74c:	4f 5f       	subi	r20, 0xFF	; 255
 74e:	5f 4f       	sbci	r21, 0xFF	; 255
 750:	02 c0       	rjmp	.+4      	; 0x756 <main+0xfe>
 752:	40 e0       	ldi	r20, 0x00	; 0
 754:	50 e0       	ldi	r21, 0x00	; 0
 756:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <total_id>
 75a:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <total_id+0x1>
 75e:	48 17       	cp	r20, r24
 760:	59 07       	cpc	r21, r25
 762:	64 f3       	brlt	.-40     	; 0x73c <main+0xe4>
 764:	03 c0       	rjmp	.+6      	; 0x76c <main+0x114>
					 if(valid_id[i][j] != id[j]){
						break;
					 }	 
				 }
				 if(j == id_len){
					match = 1;
 766:	ee 24       	eor	r14, r14
 768:	e3 94       	inc	r14
 76a:	f1 2c       	mov	r15, r1
					break;
				 }
			 }
		 }
		 if(match == 0){
 76c:	e1 14       	cp	r14, r1
 76e:	f1 04       	cpc	r15, r1
 770:	79 f4       	brne	.+30     	; 0x790 <main+0x138>
			 Lcd4_Clear();
 772:	0e 94 66 02 	call	0x4cc	; 0x4cc <Lcd4_Clear>
			 Lcd4_Write_String("ID match: ");
 776:	81 eb       	ldi	r24, 0xB1	; 177
 778:	90 e0       	ldi	r25, 0x00	; 0
 77a:	0e 94 06 03 	call	0x60c	; 0x60c <Lcd4_Write_String>
			 Lcd4_Set_Cursor(2,0);
 77e:	60 e0       	ldi	r22, 0x00	; 0
 780:	82 e0       	ldi	r24, 0x02	; 2
 782:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Set_Cursor>
			 Lcd4_Write_String("Not found. Reset");
 786:	8c eb       	ldi	r24, 0xBC	; 188
 788:	90 e0       	ldi	r25, 0x00	; 0
 78a:	0e 94 06 03 	call	0x60c	; 0x60c <Lcd4_Write_String>
 78e:	9e cf       	rjmp	.-196    	; 0x6cc <main+0x74>
		 }
		 else if(match == 1){
 790:	31 e0       	ldi	r19, 0x01	; 1
 792:	e3 16       	cp	r14, r19
 794:	f1 04       	cpc	r15, r1
 796:	09 f0       	breq	.+2      	; 0x79a <main+0x142>
 798:	99 cf       	rjmp	.-206    	; 0x6cc <main+0x74>
			  Lcd4_Clear();
 79a:	0e 94 66 02 	call	0x4cc	; 0x4cc <Lcd4_Clear>
			  Lcd4_Write_String("ID match found!");
 79e:	8d ec       	ldi	r24, 0xCD	; 205
 7a0:	90 e0       	ldi	r25, 0x00	; 0
 7a2:	0e 94 06 03 	call	0x60c	; 0x60c <Lcd4_Write_String>
 7a6:	8f e1       	ldi	r24, 0x1F	; 31
 7a8:	91 ea       	ldi	r25, 0xA1	; 161
 7aa:	27 e0       	ldi	r18, 0x07	; 7
 7ac:	81 50       	subi	r24, 0x01	; 1
 7ae:	90 40       	sbci	r25, 0x00	; 0
 7b0:	20 40       	sbci	r18, 0x00	; 0
 7b2:	e1 f7       	brne	.-8      	; 0x7ac <main+0x154>
 7b4:	00 c0       	rjmp	.+0      	; 0x7b6 <main+0x15e>
 7b6:	00 00       	nop
			  _delay_ms(2500);
			  Lcd4_Clear();
 7b8:	0e 94 66 02 	call	0x4cc	; 0x4cc <Lcd4_Clear>
			  
			  int lock = rand() % (9999 + 1 - 1000) + 1000;
 7bc:	0e 94 8e 04 	call	0x91c	; 0x91c <rand>
 7c0:	68 e2       	ldi	r22, 0x28	; 40
 7c2:	73 e2       	ldi	r23, 0x23	; 35
 7c4:	0e 94 1a 04 	call	0x834	; 0x834 <__divmodhi4>
 7c8:	88 51       	subi	r24, 0x18	; 24
 7ca:	9c 4f       	sbci	r25, 0xFC	; 252
			  unsigned char locks[4];
			  //int div = 99;
			  int mod = 0;
 7cc:	20 e0       	ldi	r18, 0x00	; 0
 7ce:	30 e0       	ldi	r19, 0x00	; 0
			  while(lock != 0){
 7d0:	10 c0       	rjmp	.+32     	; 0x7f2 <main+0x19a>
				  locks[mod] = (lock % 10) + '0';
 7d2:	6a e0       	ldi	r22, 0x0A	; 10
 7d4:	70 e0       	ldi	r23, 0x00	; 0
 7d6:	0e 94 1a 04 	call	0x834	; 0x834 <__divmodhi4>
 7da:	eb e0       	ldi	r30, 0x0B	; 11
 7dc:	f0 e0       	ldi	r31, 0x00	; 0
 7de:	ec 0f       	add	r30, r28
 7e0:	fd 1f       	adc	r31, r29
 7e2:	e2 0f       	add	r30, r18
 7e4:	f3 1f       	adc	r31, r19
 7e6:	80 5d       	subi	r24, 0xD0	; 208
 7e8:	80 83       	st	Z, r24
				  lock = lock / 10;
 7ea:	86 2f       	mov	r24, r22
 7ec:	97 2f       	mov	r25, r23
				  mod++;
 7ee:	2f 5f       	subi	r18, 0xFF	; 255
 7f0:	3f 4f       	sbci	r19, 0xFF	; 255
			  
			  int lock = rand() % (9999 + 1 - 1000) + 1000;
			  unsigned char locks[4];
			  //int div = 99;
			  int mod = 0;
			  while(lock != 0){
 7f2:	00 97       	sbiw	r24, 0x00	; 0
 7f4:	71 f7       	brne	.-36     	; 0x7d2 <main+0x17a>
				  locks[mod] = (lock % 10) + '0';
				  lock = lock / 10;
				  mod++;
				  
			  }
			  Lcd4_Write_String("Your Lock Code: ");
 7f6:	8d ed       	ldi	r24, 0xDD	; 221
 7f8:	90 e0       	ldi	r25, 0x00	; 0
 7fa:	0e 94 06 03 	call	0x60c	; 0x60c <Lcd4_Write_String>
			  Lcd4_Set_Cursor(2, 0);
 7fe:	60 e0       	ldi	r22, 0x00	; 0
 800:	82 e0       	ldi	r24, 0x02	; 2
 802:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Set_Cursor>
			  for(int i = 3; i!=-1; i--){
 806:	0f 2e       	mov	r0, r31
 808:	f3 e0       	ldi	r31, 0x03	; 3
 80a:	cf 2e       	mov	r12, r31
 80c:	d1 2c       	mov	r13, r1
 80e:	f0 2d       	mov	r31, r0
 810:	0c c0       	rjmp	.+24     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
				  Lcd4_Write_Char(locks[i]);
 812:	eb e0       	ldi	r30, 0x0B	; 11
 814:	f0 e0       	ldi	r31, 0x00	; 0
 816:	ec 0f       	add	r30, r28
 818:	fd 1f       	adc	r31, r29
 81a:	ec 0d       	add	r30, r12
 81c:	fd 1d       	adc	r31, r13
 81e:	80 81       	ld	r24, Z
 820:	0e 94 bf 02 	call	0x57e	; 0x57e <Lcd4_Write_Char>
				  mod++;
				  
			  }
			  Lcd4_Write_String("Your Lock Code: ");
			  Lcd4_Set_Cursor(2, 0);
			  for(int i = 3; i!=-1; i--){
 824:	31 e0       	ldi	r19, 0x01	; 1
 826:	c3 1a       	sub	r12, r19
 828:	d1 08       	sbc	r13, r1
 82a:	8f ef       	ldi	r24, 0xFF	; 255
 82c:	c8 16       	cp	r12, r24
 82e:	d8 06       	cpc	r13, r24
 830:	81 f7       	brne	.-32     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 832:	4c cf       	rjmp	.-360    	; 0x6cc <main+0x74>

00000834 <__divmodhi4>:
 834:	97 fb       	bst	r25, 7
 836:	07 2e       	mov	r0, r23
 838:	16 f4       	brtc	.+4      	; 0x83e <__divmodhi4+0xa>
 83a:	00 94       	com	r0
 83c:	07 d0       	rcall	.+14     	; 0x84c <__divmodhi4_neg1>
 83e:	77 fd       	sbrc	r23, 7
 840:	09 d0       	rcall	.+18     	; 0x854 <__divmodhi4_neg2>
 842:	0e 94 2e 04 	call	0x85c	; 0x85c <__udivmodhi4>
 846:	07 fc       	sbrc	r0, 7
 848:	05 d0       	rcall	.+10     	; 0x854 <__divmodhi4_neg2>
 84a:	3e f4       	brtc	.+14     	; 0x85a <__divmodhi4_exit>

0000084c <__divmodhi4_neg1>:
 84c:	90 95       	com	r25
 84e:	81 95       	neg	r24
 850:	9f 4f       	sbci	r25, 0xFF	; 255
 852:	08 95       	ret

00000854 <__divmodhi4_neg2>:
 854:	70 95       	com	r23
 856:	61 95       	neg	r22
 858:	7f 4f       	sbci	r23, 0xFF	; 255

0000085a <__divmodhi4_exit>:
 85a:	08 95       	ret

0000085c <__udivmodhi4>:
 85c:	aa 1b       	sub	r26, r26
 85e:	bb 1b       	sub	r27, r27
 860:	51 e1       	ldi	r21, 0x11	; 17
 862:	07 c0       	rjmp	.+14     	; 0x872 <__udivmodhi4_ep>

00000864 <__udivmodhi4_loop>:
 864:	aa 1f       	adc	r26, r26
 866:	bb 1f       	adc	r27, r27
 868:	a6 17       	cp	r26, r22
 86a:	b7 07       	cpc	r27, r23
 86c:	10 f0       	brcs	.+4      	; 0x872 <__udivmodhi4_ep>
 86e:	a6 1b       	sub	r26, r22
 870:	b7 0b       	sbc	r27, r23

00000872 <__udivmodhi4_ep>:
 872:	88 1f       	adc	r24, r24
 874:	99 1f       	adc	r25, r25
 876:	5a 95       	dec	r21
 878:	a9 f7       	brne	.-22     	; 0x864 <__udivmodhi4_loop>
 87a:	80 95       	com	r24
 87c:	90 95       	com	r25
 87e:	bc 01       	movw	r22, r24
 880:	cd 01       	movw	r24, r26
 882:	08 95       	ret

00000884 <do_rand>:
 884:	8f 92       	push	r8
 886:	9f 92       	push	r9
 888:	af 92       	push	r10
 88a:	bf 92       	push	r11
 88c:	cf 92       	push	r12
 88e:	df 92       	push	r13
 890:	ef 92       	push	r14
 892:	ff 92       	push	r15
 894:	cf 93       	push	r28
 896:	df 93       	push	r29
 898:	ec 01       	movw	r28, r24
 89a:	68 81       	ld	r22, Y
 89c:	79 81       	ldd	r23, Y+1	; 0x01
 89e:	8a 81       	ldd	r24, Y+2	; 0x02
 8a0:	9b 81       	ldd	r25, Y+3	; 0x03
 8a2:	61 15       	cp	r22, r1
 8a4:	71 05       	cpc	r23, r1
 8a6:	81 05       	cpc	r24, r1
 8a8:	91 05       	cpc	r25, r1
 8aa:	21 f4       	brne	.+8      	; 0x8b4 <do_rand+0x30>
 8ac:	64 e2       	ldi	r22, 0x24	; 36
 8ae:	79 ed       	ldi	r23, 0xD9	; 217
 8b0:	8b e5       	ldi	r24, 0x5B	; 91
 8b2:	97 e0       	ldi	r25, 0x07	; 7
 8b4:	2d e1       	ldi	r18, 0x1D	; 29
 8b6:	33 ef       	ldi	r19, 0xF3	; 243
 8b8:	41 e0       	ldi	r20, 0x01	; 1
 8ba:	50 e0       	ldi	r21, 0x00	; 0
 8bc:	0e 94 9e 04 	call	0x93c	; 0x93c <__divmodsi4>
 8c0:	49 01       	movw	r8, r18
 8c2:	5a 01       	movw	r10, r20
 8c4:	9b 01       	movw	r18, r22
 8c6:	ac 01       	movw	r20, r24
 8c8:	a7 ea       	ldi	r26, 0xA7	; 167
 8ca:	b1 e4       	ldi	r27, 0x41	; 65
 8cc:	0e 94 bd 04 	call	0x97a	; 0x97a <__muluhisi3>
 8d0:	6b 01       	movw	r12, r22
 8d2:	7c 01       	movw	r14, r24
 8d4:	ac ee       	ldi	r26, 0xEC	; 236
 8d6:	b4 ef       	ldi	r27, 0xF4	; 244
 8d8:	a5 01       	movw	r20, r10
 8da:	94 01       	movw	r18, r8
 8dc:	0e 94 cb 04 	call	0x996	; 0x996 <__mulohisi3>
 8e0:	dc 01       	movw	r26, r24
 8e2:	cb 01       	movw	r24, r22
 8e4:	8c 0d       	add	r24, r12
 8e6:	9d 1d       	adc	r25, r13
 8e8:	ae 1d       	adc	r26, r14
 8ea:	bf 1d       	adc	r27, r15
 8ec:	b7 ff       	sbrs	r27, 7
 8ee:	03 c0       	rjmp	.+6      	; 0x8f6 <do_rand+0x72>
 8f0:	01 97       	sbiw	r24, 0x01	; 1
 8f2:	a1 09       	sbc	r26, r1
 8f4:	b0 48       	sbci	r27, 0x80	; 128
 8f6:	88 83       	st	Y, r24
 8f8:	99 83       	std	Y+1, r25	; 0x01
 8fa:	aa 83       	std	Y+2, r26	; 0x02
 8fc:	bb 83       	std	Y+3, r27	; 0x03
 8fe:	9f 77       	andi	r25, 0x7F	; 127
 900:	df 91       	pop	r29
 902:	cf 91       	pop	r28
 904:	ff 90       	pop	r15
 906:	ef 90       	pop	r14
 908:	df 90       	pop	r13
 90a:	cf 90       	pop	r12
 90c:	bf 90       	pop	r11
 90e:	af 90       	pop	r10
 910:	9f 90       	pop	r9
 912:	8f 90       	pop	r8
 914:	08 95       	ret

00000916 <rand_r>:
 916:	0e 94 42 04 	call	0x884	; 0x884 <do_rand>
 91a:	08 95       	ret

0000091c <rand>:
 91c:	80 e6       	ldi	r24, 0x60	; 96
 91e:	90 e0       	ldi	r25, 0x00	; 0
 920:	0e 94 42 04 	call	0x884	; 0x884 <do_rand>
 924:	08 95       	ret

00000926 <srand>:
 926:	a0 e0       	ldi	r26, 0x00	; 0
 928:	b0 e0       	ldi	r27, 0x00	; 0
 92a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 92e:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 932:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 936:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 93a:	08 95       	ret

0000093c <__divmodsi4>:
 93c:	05 2e       	mov	r0, r21
 93e:	97 fb       	bst	r25, 7
 940:	1e f4       	brtc	.+6      	; 0x948 <__divmodsi4+0xc>
 942:	00 94       	com	r0
 944:	0e 94 b5 04 	call	0x96a	; 0x96a <__negsi2>
 948:	57 fd       	sbrc	r21, 7
 94a:	07 d0       	rcall	.+14     	; 0x95a <__divmodsi4_neg2>
 94c:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__udivmodsi4>
 950:	07 fc       	sbrc	r0, 7
 952:	03 d0       	rcall	.+6      	; 0x95a <__divmodsi4_neg2>
 954:	4e f4       	brtc	.+18     	; 0x968 <__divmodsi4_exit>
 956:	0c 94 b5 04 	jmp	0x96a	; 0x96a <__negsi2>

0000095a <__divmodsi4_neg2>:
 95a:	50 95       	com	r21
 95c:	40 95       	com	r20
 95e:	30 95       	com	r19
 960:	21 95       	neg	r18
 962:	3f 4f       	sbci	r19, 0xFF	; 255
 964:	4f 4f       	sbci	r20, 0xFF	; 255
 966:	5f 4f       	sbci	r21, 0xFF	; 255

00000968 <__divmodsi4_exit>:
 968:	08 95       	ret

0000096a <__negsi2>:
 96a:	90 95       	com	r25
 96c:	80 95       	com	r24
 96e:	70 95       	com	r23
 970:	61 95       	neg	r22
 972:	7f 4f       	sbci	r23, 0xFF	; 255
 974:	8f 4f       	sbci	r24, 0xFF	; 255
 976:	9f 4f       	sbci	r25, 0xFF	; 255
 978:	08 95       	ret

0000097a <__muluhisi3>:
 97a:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <__umulhisi3>
 97e:	a5 9f       	mul	r26, r21
 980:	90 0d       	add	r25, r0
 982:	b4 9f       	mul	r27, r20
 984:	90 0d       	add	r25, r0
 986:	a4 9f       	mul	r26, r20
 988:	80 0d       	add	r24, r0
 98a:	91 1d       	adc	r25, r1
 98c:	11 24       	eor	r1, r1
 98e:	08 95       	ret

00000990 <__mulshisi3>:
 990:	b7 ff       	sbrs	r27, 7
 992:	0c 94 bd 04 	jmp	0x97a	; 0x97a <__muluhisi3>

00000996 <__mulohisi3>:
 996:	0e 94 bd 04 	call	0x97a	; 0x97a <__muluhisi3>
 99a:	82 1b       	sub	r24, r18
 99c:	93 0b       	sbc	r25, r19
 99e:	08 95       	ret

000009a0 <__udivmodsi4>:
 9a0:	a1 e2       	ldi	r26, 0x21	; 33
 9a2:	1a 2e       	mov	r1, r26
 9a4:	aa 1b       	sub	r26, r26
 9a6:	bb 1b       	sub	r27, r27
 9a8:	fd 01       	movw	r30, r26
 9aa:	0d c0       	rjmp	.+26     	; 0x9c6 <__udivmodsi4_ep>

000009ac <__udivmodsi4_loop>:
 9ac:	aa 1f       	adc	r26, r26
 9ae:	bb 1f       	adc	r27, r27
 9b0:	ee 1f       	adc	r30, r30
 9b2:	ff 1f       	adc	r31, r31
 9b4:	a2 17       	cp	r26, r18
 9b6:	b3 07       	cpc	r27, r19
 9b8:	e4 07       	cpc	r30, r20
 9ba:	f5 07       	cpc	r31, r21
 9bc:	20 f0       	brcs	.+8      	; 0x9c6 <__udivmodsi4_ep>
 9be:	a2 1b       	sub	r26, r18
 9c0:	b3 0b       	sbc	r27, r19
 9c2:	e4 0b       	sbc	r30, r20
 9c4:	f5 0b       	sbc	r31, r21

000009c6 <__udivmodsi4_ep>:
 9c6:	66 1f       	adc	r22, r22
 9c8:	77 1f       	adc	r23, r23
 9ca:	88 1f       	adc	r24, r24
 9cc:	99 1f       	adc	r25, r25
 9ce:	1a 94       	dec	r1
 9d0:	69 f7       	brne	.-38     	; 0x9ac <__udivmodsi4_loop>
 9d2:	60 95       	com	r22
 9d4:	70 95       	com	r23
 9d6:	80 95       	com	r24
 9d8:	90 95       	com	r25
 9da:	9b 01       	movw	r18, r22
 9dc:	ac 01       	movw	r20, r24
 9de:	bd 01       	movw	r22, r26
 9e0:	cf 01       	movw	r24, r30
 9e2:	08 95       	ret

000009e4 <__umulhisi3>:
 9e4:	a2 9f       	mul	r26, r18
 9e6:	b0 01       	movw	r22, r0
 9e8:	b3 9f       	mul	r27, r19
 9ea:	c0 01       	movw	r24, r0
 9ec:	a3 9f       	mul	r26, r19
 9ee:	70 0d       	add	r23, r0
 9f0:	81 1d       	adc	r24, r1
 9f2:	11 24       	eor	r1, r1
 9f4:	91 1d       	adc	r25, r1
 9f6:	b2 9f       	mul	r27, r18
 9f8:	70 0d       	add	r23, r0
 9fa:	81 1d       	adc	r24, r1
 9fc:	11 24       	eor	r1, r1
 9fe:	91 1d       	adc	r25, r1
 a00:	08 95       	ret

00000a02 <_exit>:
 a02:	f8 94       	cli

00000a04 <__stop_program>:
 a04:	ff cf       	rjmp	.-2      	; 0xa04 <__stop_program>

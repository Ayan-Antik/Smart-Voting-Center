
RFID Module.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001532  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000012c  00800060  00001532  000015c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000012  0080018c  0080018c  000016f2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000016f2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001724  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00001760  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001f29  00000000  00000000  00001848  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000777  00000000  00000000  00003771  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e3a  00000000  00000000  00003ee8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000234  00000000  00000000  00004d24  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000515  00000000  00000000  00004f58  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001907  00000000  00000000  0000546d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  00006d74  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       8:	0c 94 e6 03 	jmp	0x7cc	; 0x7cc <__vector_2>
       c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__stack+0x14f>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <Lcd4_Write_Char+0x12>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <pinChange+0x240>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <pinChange+0x2e>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d8 e0       	ldi	r29, 0x08	; 8
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	11 e0       	ldi	r17, 0x01	; 1
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	e2 e3       	ldi	r30, 0x32	; 50
     162:	f5 e1       	ldi	r31, 0x15	; 21
     164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0
     16a:	ac 38       	cpi	r26, 0x8C	; 140
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
     170:	21 e0       	ldi	r18, 0x01	; 1
     172:	ac e8       	ldi	r26, 0x8C	; 140
     174:	b1 e0       	ldi	r27, 0x01	; 1
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	ae 39       	cpi	r26, 0x9E	; 158
     17c:	b2 07       	cpc	r27, r18
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <main>
     184:	0c 94 97 0a 	jmp	0x152e	; 0x152e <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <pinChange>:
}

void Lcd4_Shift_Right()
{
	Lcd4_Cmd(0x01);
	Lcd4_Cmd(0x0C);
     18c:	67 2b       	or	r22, r23
     18e:	09 f0       	breq	.+2      	; 0x192 <pinChange+0x6>
     190:	df c0       	rjmp	.+446    	; 0x350 <pinChange+0x1c4>
     192:	00 97       	sbiw	r24, 0x00	; 0
     194:	21 f4       	brne	.+8      	; 0x19e <pinChange+0x12>
     196:	8b b3       	in	r24, 0x1b	; 27
     198:	8e 7f       	andi	r24, 0xFE	; 254
     19a:	8b bb       	out	0x1b, r24	; 27
     19c:	08 95       	ret
     19e:	81 30       	cpi	r24, 0x01	; 1
     1a0:	91 05       	cpc	r25, r1
     1a2:	21 f4       	brne	.+8      	; 0x1ac <pinChange+0x20>
     1a4:	8b b3       	in	r24, 0x1b	; 27
     1a6:	8d 7f       	andi	r24, 0xFD	; 253
     1a8:	8b bb       	out	0x1b, r24	; 27
     1aa:	08 95       	ret
     1ac:	82 30       	cpi	r24, 0x02	; 2
     1ae:	91 05       	cpc	r25, r1
     1b0:	21 f4       	brne	.+8      	; 0x1ba <pinChange+0x2e>
     1b2:	8b b3       	in	r24, 0x1b	; 27
     1b4:	8b 7f       	andi	r24, 0xFB	; 251
     1b6:	8b bb       	out	0x1b, r24	; 27
     1b8:	08 95       	ret
     1ba:	83 30       	cpi	r24, 0x03	; 3
     1bc:	91 05       	cpc	r25, r1
     1be:	21 f4       	brne	.+8      	; 0x1c8 <pinChange+0x3c>
     1c0:	8b b3       	in	r24, 0x1b	; 27
     1c2:	87 7f       	andi	r24, 0xF7	; 247
     1c4:	8b bb       	out	0x1b, r24	; 27
     1c6:	08 95       	ret
     1c8:	84 30       	cpi	r24, 0x04	; 4
     1ca:	91 05       	cpc	r25, r1
     1cc:	21 f4       	brne	.+8      	; 0x1d6 <pinChange+0x4a>
     1ce:	8b b3       	in	r24, 0x1b	; 27
     1d0:	8f 7e       	andi	r24, 0xEF	; 239
     1d2:	8b bb       	out	0x1b, r24	; 27
     1d4:	08 95       	ret
     1d6:	85 30       	cpi	r24, 0x05	; 5
     1d8:	91 05       	cpc	r25, r1
     1da:	21 f4       	brne	.+8      	; 0x1e4 <pinChange+0x58>
     1dc:	8b b3       	in	r24, 0x1b	; 27
     1de:	8f 7d       	andi	r24, 0xDF	; 223
     1e0:	8b bb       	out	0x1b, r24	; 27
     1e2:	08 95       	ret
     1e4:	86 30       	cpi	r24, 0x06	; 6
     1e6:	91 05       	cpc	r25, r1
     1e8:	21 f4       	brne	.+8      	; 0x1f2 <pinChange+0x66>
     1ea:	8b b3       	in	r24, 0x1b	; 27
     1ec:	8f 7b       	andi	r24, 0xBF	; 191
     1ee:	8b bb       	out	0x1b, r24	; 27
     1f0:	08 95       	ret
     1f2:	87 30       	cpi	r24, 0x07	; 7
     1f4:	91 05       	cpc	r25, r1
     1f6:	21 f4       	brne	.+8      	; 0x200 <pinChange+0x74>
     1f8:	8b b3       	in	r24, 0x1b	; 27
     1fa:	8f 77       	andi	r24, 0x7F	; 127
     1fc:	8b bb       	out	0x1b, r24	; 27
     1fe:	08 95       	ret
     200:	8a 30       	cpi	r24, 0x0A	; 10
     202:	91 05       	cpc	r25, r1
     204:	21 f4       	brne	.+8      	; 0x20e <pinChange+0x82>
     206:	88 b3       	in	r24, 0x18	; 24
     208:	8e 7f       	andi	r24, 0xFE	; 254
     20a:	88 bb       	out	0x18, r24	; 24
     20c:	08 95       	ret
     20e:	8b 30       	cpi	r24, 0x0B	; 11
     210:	91 05       	cpc	r25, r1
     212:	21 f4       	brne	.+8      	; 0x21c <pinChange+0x90>
     214:	88 b3       	in	r24, 0x18	; 24
     216:	8d 7f       	andi	r24, 0xFD	; 253
     218:	88 bb       	out	0x18, r24	; 24
     21a:	08 95       	ret
     21c:	8c 30       	cpi	r24, 0x0C	; 12
     21e:	91 05       	cpc	r25, r1
     220:	21 f4       	brne	.+8      	; 0x22a <pinChange+0x9e>
     222:	88 b3       	in	r24, 0x18	; 24
     224:	8b 7f       	andi	r24, 0xFB	; 251
     226:	88 bb       	out	0x18, r24	; 24
     228:	08 95       	ret
     22a:	8d 30       	cpi	r24, 0x0D	; 13
     22c:	91 05       	cpc	r25, r1
     22e:	21 f4       	brne	.+8      	; 0x238 <pinChange+0xac>
     230:	88 b3       	in	r24, 0x18	; 24
     232:	87 7f       	andi	r24, 0xF7	; 247
     234:	88 bb       	out	0x18, r24	; 24
     236:	08 95       	ret
     238:	8e 30       	cpi	r24, 0x0E	; 14
     23a:	91 05       	cpc	r25, r1
     23c:	21 f4       	brne	.+8      	; 0x246 <pinChange+0xba>
     23e:	88 b3       	in	r24, 0x18	; 24
     240:	8f 7e       	andi	r24, 0xEF	; 239
     242:	88 bb       	out	0x18, r24	; 24
     244:	08 95       	ret
     246:	8f 30       	cpi	r24, 0x0F	; 15
     248:	91 05       	cpc	r25, r1
     24a:	21 f4       	brne	.+8      	; 0x254 <pinChange+0xc8>
     24c:	88 b3       	in	r24, 0x18	; 24
     24e:	8f 7d       	andi	r24, 0xDF	; 223
     250:	88 bb       	out	0x18, r24	; 24
     252:	08 95       	ret
     254:	80 31       	cpi	r24, 0x10	; 16
     256:	91 05       	cpc	r25, r1
     258:	21 f4       	brne	.+8      	; 0x262 <pinChange+0xd6>
     25a:	88 b3       	in	r24, 0x18	; 24
     25c:	8f 7b       	andi	r24, 0xBF	; 191
     25e:	88 bb       	out	0x18, r24	; 24
     260:	08 95       	ret
     262:	81 31       	cpi	r24, 0x11	; 17
     264:	91 05       	cpc	r25, r1
     266:	21 f4       	brne	.+8      	; 0x270 <pinChange+0xe4>
     268:	88 b3       	in	r24, 0x18	; 24
     26a:	8f 77       	andi	r24, 0x7F	; 127
     26c:	88 bb       	out	0x18, r24	; 24
     26e:	08 95       	ret
     270:	84 31       	cpi	r24, 0x14	; 20
     272:	91 05       	cpc	r25, r1
     274:	21 f4       	brne	.+8      	; 0x27e <pinChange+0xf2>
     276:	85 b3       	in	r24, 0x15	; 21
     278:	8e 7f       	andi	r24, 0xFE	; 254
     27a:	85 bb       	out	0x15, r24	; 21
     27c:	08 95       	ret
     27e:	85 31       	cpi	r24, 0x15	; 21
     280:	91 05       	cpc	r25, r1
     282:	21 f4       	brne	.+8      	; 0x28c <pinChange+0x100>
     284:	85 b3       	in	r24, 0x15	; 21
     286:	8d 7f       	andi	r24, 0xFD	; 253
     288:	85 bb       	out	0x15, r24	; 21
     28a:	08 95       	ret
     28c:	86 31       	cpi	r24, 0x16	; 22
     28e:	91 05       	cpc	r25, r1
     290:	21 f4       	brne	.+8      	; 0x29a <pinChange+0x10e>
     292:	85 b3       	in	r24, 0x15	; 21
     294:	8b 7f       	andi	r24, 0xFB	; 251
     296:	85 bb       	out	0x15, r24	; 21
     298:	08 95       	ret
     29a:	87 31       	cpi	r24, 0x17	; 23
     29c:	91 05       	cpc	r25, r1
     29e:	21 f4       	brne	.+8      	; 0x2a8 <pinChange+0x11c>
     2a0:	85 b3       	in	r24, 0x15	; 21
     2a2:	87 7f       	andi	r24, 0xF7	; 247
     2a4:	85 bb       	out	0x15, r24	; 21
     2a6:	08 95       	ret
     2a8:	88 31       	cpi	r24, 0x18	; 24
     2aa:	91 05       	cpc	r25, r1
     2ac:	21 f4       	brne	.+8      	; 0x2b6 <pinChange+0x12a>
     2ae:	85 b3       	in	r24, 0x15	; 21
     2b0:	8f 7e       	andi	r24, 0xEF	; 239
     2b2:	85 bb       	out	0x15, r24	; 21
     2b4:	08 95       	ret
     2b6:	89 31       	cpi	r24, 0x19	; 25
     2b8:	91 05       	cpc	r25, r1
     2ba:	21 f4       	brne	.+8      	; 0x2c4 <pinChange+0x138>
     2bc:	85 b3       	in	r24, 0x15	; 21
     2be:	8f 7d       	andi	r24, 0xDF	; 223
     2c0:	85 bb       	out	0x15, r24	; 21
     2c2:	08 95       	ret
     2c4:	8a 31       	cpi	r24, 0x1A	; 26
     2c6:	91 05       	cpc	r25, r1
     2c8:	21 f4       	brne	.+8      	; 0x2d2 <pinChange+0x146>
     2ca:	85 b3       	in	r24, 0x15	; 21
     2cc:	8f 7b       	andi	r24, 0xBF	; 191
     2ce:	85 bb       	out	0x15, r24	; 21
     2d0:	08 95       	ret
     2d2:	8b 31       	cpi	r24, 0x1B	; 27
     2d4:	91 05       	cpc	r25, r1
     2d6:	21 f4       	brne	.+8      	; 0x2e0 <pinChange+0x154>
     2d8:	85 b3       	in	r24, 0x15	; 21
     2da:	8f 77       	andi	r24, 0x7F	; 127
     2dc:	85 bb       	out	0x15, r24	; 21
     2de:	08 95       	ret
     2e0:	8e 31       	cpi	r24, 0x1E	; 30
     2e2:	91 05       	cpc	r25, r1
     2e4:	21 f4       	brne	.+8      	; 0x2ee <pinChange+0x162>
     2e6:	82 b3       	in	r24, 0x12	; 18
     2e8:	8e 7f       	andi	r24, 0xFE	; 254
     2ea:	82 bb       	out	0x12, r24	; 18
     2ec:	08 95       	ret
     2ee:	8f 31       	cpi	r24, 0x1F	; 31
     2f0:	91 05       	cpc	r25, r1
     2f2:	21 f4       	brne	.+8      	; 0x2fc <pinChange+0x170>
     2f4:	82 b3       	in	r24, 0x12	; 18
     2f6:	8d 7f       	andi	r24, 0xFD	; 253
     2f8:	82 bb       	out	0x12, r24	; 18
     2fa:	08 95       	ret
     2fc:	80 32       	cpi	r24, 0x20	; 32
     2fe:	91 05       	cpc	r25, r1
     300:	21 f4       	brne	.+8      	; 0x30a <pinChange+0x17e>
     302:	82 b3       	in	r24, 0x12	; 18
     304:	8b 7f       	andi	r24, 0xFB	; 251
     306:	82 bb       	out	0x12, r24	; 18
     308:	08 95       	ret
     30a:	81 32       	cpi	r24, 0x21	; 33
     30c:	91 05       	cpc	r25, r1
     30e:	21 f4       	brne	.+8      	; 0x318 <pinChange+0x18c>
     310:	82 b3       	in	r24, 0x12	; 18
     312:	87 7f       	andi	r24, 0xF7	; 247
     314:	82 bb       	out	0x12, r24	; 18
     316:	08 95       	ret
     318:	82 32       	cpi	r24, 0x22	; 34
     31a:	91 05       	cpc	r25, r1
     31c:	21 f4       	brne	.+8      	; 0x326 <pinChange+0x19a>
     31e:	82 b3       	in	r24, 0x12	; 18
     320:	8f 7e       	andi	r24, 0xEF	; 239
     322:	82 bb       	out	0x12, r24	; 18
     324:	08 95       	ret
     326:	83 32       	cpi	r24, 0x23	; 35
     328:	91 05       	cpc	r25, r1
     32a:	21 f4       	brne	.+8      	; 0x334 <pinChange+0x1a8>
     32c:	82 b3       	in	r24, 0x12	; 18
     32e:	8f 7d       	andi	r24, 0xDF	; 223
     330:	82 bb       	out	0x12, r24	; 18
     332:	08 95       	ret
     334:	84 32       	cpi	r24, 0x24	; 36
     336:	91 05       	cpc	r25, r1
     338:	21 f4       	brne	.+8      	; 0x342 <pinChange+0x1b6>
     33a:	82 b3       	in	r24, 0x12	; 18
     33c:	8f 7b       	andi	r24, 0xBF	; 191
     33e:	82 bb       	out	0x12, r24	; 18
     340:	08 95       	ret
     342:	85 97       	sbiw	r24, 0x25	; 37
     344:	09 f0       	breq	.+2      	; 0x348 <pinChange+0x1bc>
     346:	e1 c0       	rjmp	.+450    	; 0x50a <__EEPROM_REGION_LENGTH__+0x10a>
     348:	82 b3       	in	r24, 0x12	; 18
     34a:	8f 77       	andi	r24, 0x7F	; 127
     34c:	82 bb       	out	0x12, r24	; 18
     34e:	08 95       	ret
     350:	00 97       	sbiw	r24, 0x00	; 0
     352:	21 f4       	brne	.+8      	; 0x35c <pinChange+0x1d0>
     354:	8b b3       	in	r24, 0x1b	; 27
     356:	81 60       	ori	r24, 0x01	; 1
     358:	8b bb       	out	0x1b, r24	; 27
     35a:	08 95       	ret
     35c:	81 30       	cpi	r24, 0x01	; 1
     35e:	91 05       	cpc	r25, r1
     360:	21 f4       	brne	.+8      	; 0x36a <pinChange+0x1de>
     362:	8b b3       	in	r24, 0x1b	; 27
     364:	82 60       	ori	r24, 0x02	; 2
     366:	8b bb       	out	0x1b, r24	; 27
     368:	08 95       	ret
     36a:	82 30       	cpi	r24, 0x02	; 2
     36c:	91 05       	cpc	r25, r1
     36e:	21 f4       	brne	.+8      	; 0x378 <pinChange+0x1ec>
     370:	8b b3       	in	r24, 0x1b	; 27
     372:	84 60       	ori	r24, 0x04	; 4
     374:	8b bb       	out	0x1b, r24	; 27
     376:	08 95       	ret
     378:	83 30       	cpi	r24, 0x03	; 3
     37a:	91 05       	cpc	r25, r1
     37c:	21 f4       	brne	.+8      	; 0x386 <pinChange+0x1fa>
     37e:	8b b3       	in	r24, 0x1b	; 27
     380:	88 60       	ori	r24, 0x08	; 8
     382:	8b bb       	out	0x1b, r24	; 27
     384:	08 95       	ret
     386:	84 30       	cpi	r24, 0x04	; 4
     388:	91 05       	cpc	r25, r1
     38a:	21 f4       	brne	.+8      	; 0x394 <pinChange+0x208>
     38c:	8b b3       	in	r24, 0x1b	; 27
     38e:	80 61       	ori	r24, 0x10	; 16
     390:	8b bb       	out	0x1b, r24	; 27
     392:	08 95       	ret
     394:	85 30       	cpi	r24, 0x05	; 5
     396:	91 05       	cpc	r25, r1
     398:	21 f4       	brne	.+8      	; 0x3a2 <pinChange+0x216>
     39a:	8b b3       	in	r24, 0x1b	; 27
     39c:	80 62       	ori	r24, 0x20	; 32
     39e:	8b bb       	out	0x1b, r24	; 27
     3a0:	08 95       	ret
     3a2:	86 30       	cpi	r24, 0x06	; 6
     3a4:	91 05       	cpc	r25, r1
     3a6:	21 f4       	brne	.+8      	; 0x3b0 <pinChange+0x224>
     3a8:	8b b3       	in	r24, 0x1b	; 27
     3aa:	80 64       	ori	r24, 0x40	; 64
     3ac:	8b bb       	out	0x1b, r24	; 27
     3ae:	08 95       	ret
     3b0:	87 30       	cpi	r24, 0x07	; 7
     3b2:	91 05       	cpc	r25, r1
     3b4:	21 f4       	brne	.+8      	; 0x3be <pinChange+0x232>
     3b6:	8b b3       	in	r24, 0x1b	; 27
     3b8:	80 68       	ori	r24, 0x80	; 128
     3ba:	8b bb       	out	0x1b, r24	; 27
     3bc:	08 95       	ret
     3be:	8a 30       	cpi	r24, 0x0A	; 10
     3c0:	91 05       	cpc	r25, r1
     3c2:	21 f4       	brne	.+8      	; 0x3cc <pinChange+0x240>
     3c4:	88 b3       	in	r24, 0x18	; 24
     3c6:	81 60       	ori	r24, 0x01	; 1
     3c8:	88 bb       	out	0x18, r24	; 24
     3ca:	08 95       	ret
     3cc:	8b 30       	cpi	r24, 0x0B	; 11
     3ce:	91 05       	cpc	r25, r1
     3d0:	21 f4       	brne	.+8      	; 0x3da <pinChange+0x24e>
     3d2:	88 b3       	in	r24, 0x18	; 24
     3d4:	82 60       	ori	r24, 0x02	; 2
     3d6:	88 bb       	out	0x18, r24	; 24
     3d8:	08 95       	ret
     3da:	8c 30       	cpi	r24, 0x0C	; 12
     3dc:	91 05       	cpc	r25, r1
     3de:	21 f4       	brne	.+8      	; 0x3e8 <pinChange+0x25c>
     3e0:	88 b3       	in	r24, 0x18	; 24
     3e2:	84 60       	ori	r24, 0x04	; 4
     3e4:	88 bb       	out	0x18, r24	; 24
     3e6:	08 95       	ret
     3e8:	8d 30       	cpi	r24, 0x0D	; 13
     3ea:	91 05       	cpc	r25, r1
     3ec:	21 f4       	brne	.+8      	; 0x3f6 <pinChange+0x26a>
     3ee:	88 b3       	in	r24, 0x18	; 24
     3f0:	88 60       	ori	r24, 0x08	; 8
     3f2:	88 bb       	out	0x18, r24	; 24
     3f4:	08 95       	ret
     3f6:	8e 30       	cpi	r24, 0x0E	; 14
     3f8:	91 05       	cpc	r25, r1
     3fa:	21 f4       	brne	.+8      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
     3fc:	88 b3       	in	r24, 0x18	; 24
     3fe:	80 61       	ori	r24, 0x10	; 16
     400:	88 bb       	out	0x18, r24	; 24
     402:	08 95       	ret
     404:	8f 30       	cpi	r24, 0x0F	; 15
     406:	91 05       	cpc	r25, r1
     408:	21 f4       	brne	.+8      	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
     40a:	88 b3       	in	r24, 0x18	; 24
     40c:	80 62       	ori	r24, 0x20	; 32
     40e:	88 bb       	out	0x18, r24	; 24
     410:	08 95       	ret
     412:	80 31       	cpi	r24, 0x10	; 16
     414:	91 05       	cpc	r25, r1
     416:	21 f4       	brne	.+8      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
     418:	88 b3       	in	r24, 0x18	; 24
     41a:	80 64       	ori	r24, 0x40	; 64
     41c:	88 bb       	out	0x18, r24	; 24
     41e:	08 95       	ret
     420:	81 31       	cpi	r24, 0x11	; 17
     422:	91 05       	cpc	r25, r1
     424:	21 f4       	brne	.+8      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
     426:	88 b3       	in	r24, 0x18	; 24
     428:	80 68       	ori	r24, 0x80	; 128
     42a:	88 bb       	out	0x18, r24	; 24
     42c:	08 95       	ret
     42e:	84 31       	cpi	r24, 0x14	; 20
     430:	91 05       	cpc	r25, r1
     432:	21 f4       	brne	.+8      	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
     434:	85 b3       	in	r24, 0x15	; 21
     436:	81 60       	ori	r24, 0x01	; 1
     438:	85 bb       	out	0x15, r24	; 21
     43a:	08 95       	ret
     43c:	85 31       	cpi	r24, 0x15	; 21
     43e:	91 05       	cpc	r25, r1
     440:	21 f4       	brne	.+8      	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
     442:	85 b3       	in	r24, 0x15	; 21
     444:	82 60       	ori	r24, 0x02	; 2
     446:	85 bb       	out	0x15, r24	; 21
     448:	08 95       	ret
     44a:	86 31       	cpi	r24, 0x16	; 22
     44c:	91 05       	cpc	r25, r1
     44e:	21 f4       	brne	.+8      	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
     450:	85 b3       	in	r24, 0x15	; 21
     452:	84 60       	ori	r24, 0x04	; 4
     454:	85 bb       	out	0x15, r24	; 21
     456:	08 95       	ret
     458:	87 31       	cpi	r24, 0x17	; 23
     45a:	91 05       	cpc	r25, r1
     45c:	21 f4       	brne	.+8      	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
     45e:	85 b3       	in	r24, 0x15	; 21
     460:	88 60       	ori	r24, 0x08	; 8
     462:	85 bb       	out	0x15, r24	; 21
     464:	08 95       	ret
     466:	88 31       	cpi	r24, 0x18	; 24
     468:	91 05       	cpc	r25, r1
     46a:	21 f4       	brne	.+8      	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
     46c:	85 b3       	in	r24, 0x15	; 21
     46e:	80 61       	ori	r24, 0x10	; 16
     470:	85 bb       	out	0x15, r24	; 21
     472:	08 95       	ret
     474:	89 31       	cpi	r24, 0x19	; 25
     476:	91 05       	cpc	r25, r1
     478:	21 f4       	brne	.+8      	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
     47a:	85 b3       	in	r24, 0x15	; 21
     47c:	80 62       	ori	r24, 0x20	; 32
     47e:	85 bb       	out	0x15, r24	; 21
     480:	08 95       	ret
     482:	8a 31       	cpi	r24, 0x1A	; 26
     484:	91 05       	cpc	r25, r1
     486:	21 f4       	brne	.+8      	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
     488:	85 b3       	in	r24, 0x15	; 21
     48a:	80 64       	ori	r24, 0x40	; 64
     48c:	85 bb       	out	0x15, r24	; 21
     48e:	08 95       	ret
     490:	8b 31       	cpi	r24, 0x1B	; 27
     492:	91 05       	cpc	r25, r1
     494:	21 f4       	brne	.+8      	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
     496:	85 b3       	in	r24, 0x15	; 21
     498:	80 68       	ori	r24, 0x80	; 128
     49a:	85 bb       	out	0x15, r24	; 21
     49c:	08 95       	ret
     49e:	8e 31       	cpi	r24, 0x1E	; 30
     4a0:	91 05       	cpc	r25, r1
     4a2:	21 f4       	brne	.+8      	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
     4a4:	82 b3       	in	r24, 0x12	; 18
     4a6:	81 60       	ori	r24, 0x01	; 1
     4a8:	82 bb       	out	0x12, r24	; 18
     4aa:	08 95       	ret
     4ac:	8f 31       	cpi	r24, 0x1F	; 31
     4ae:	91 05       	cpc	r25, r1
     4b0:	21 f4       	brne	.+8      	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
     4b2:	82 b3       	in	r24, 0x12	; 18
     4b4:	82 60       	ori	r24, 0x02	; 2
     4b6:	82 bb       	out	0x12, r24	; 18
     4b8:	08 95       	ret
     4ba:	80 32       	cpi	r24, 0x20	; 32
     4bc:	91 05       	cpc	r25, r1
     4be:	21 f4       	brne	.+8      	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>
     4c0:	82 b3       	in	r24, 0x12	; 18
     4c2:	84 60       	ori	r24, 0x04	; 4
     4c4:	82 bb       	out	0x12, r24	; 18
     4c6:	08 95       	ret
     4c8:	81 32       	cpi	r24, 0x21	; 33
     4ca:	91 05       	cpc	r25, r1
     4cc:	21 f4       	brne	.+8      	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
     4ce:	82 b3       	in	r24, 0x12	; 18
     4d0:	88 60       	ori	r24, 0x08	; 8
     4d2:	82 bb       	out	0x12, r24	; 18
     4d4:	08 95       	ret
     4d6:	82 32       	cpi	r24, 0x22	; 34
     4d8:	91 05       	cpc	r25, r1
     4da:	21 f4       	brne	.+8      	; 0x4e4 <__EEPROM_REGION_LENGTH__+0xe4>
     4dc:	82 b3       	in	r24, 0x12	; 18
     4de:	80 61       	ori	r24, 0x10	; 16
     4e0:	82 bb       	out	0x12, r24	; 18
     4e2:	08 95       	ret
     4e4:	83 32       	cpi	r24, 0x23	; 35
     4e6:	91 05       	cpc	r25, r1
     4e8:	21 f4       	brne	.+8      	; 0x4f2 <__EEPROM_REGION_LENGTH__+0xf2>
     4ea:	82 b3       	in	r24, 0x12	; 18
     4ec:	80 62       	ori	r24, 0x20	; 32
     4ee:	82 bb       	out	0x12, r24	; 18
     4f0:	08 95       	ret
     4f2:	84 32       	cpi	r24, 0x24	; 36
     4f4:	91 05       	cpc	r25, r1
     4f6:	21 f4       	brne	.+8      	; 0x500 <__EEPROM_REGION_LENGTH__+0x100>
     4f8:	82 b3       	in	r24, 0x12	; 18
     4fa:	80 64       	ori	r24, 0x40	; 64
     4fc:	82 bb       	out	0x12, r24	; 18
     4fe:	08 95       	ret
     500:	85 97       	sbiw	r24, 0x25	; 37
     502:	19 f4       	brne	.+6      	; 0x50a <__EEPROM_REGION_LENGTH__+0x10a>
     504:	82 b3       	in	r24, 0x12	; 18
     506:	80 68       	ori	r24, 0x80	; 128
     508:	82 bb       	out	0x12, r24	; 18
     50a:	08 95       	ret

0000050c <Lcd4_Port>:
     50c:	cf 93       	push	r28
     50e:	c8 2f       	mov	r28, r24
     510:	80 ff       	sbrs	r24, 0
     512:	07 c0       	rjmp	.+14     	; 0x522 <Lcd4_Port+0x16>
     514:	61 e0       	ldi	r22, 0x01	; 1
     516:	70 e0       	ldi	r23, 0x00	; 0
     518:	8e e0       	ldi	r24, 0x0E	; 14
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     520:	06 c0       	rjmp	.+12     	; 0x52e <Lcd4_Port+0x22>
     522:	60 e0       	ldi	r22, 0x00	; 0
     524:	70 e0       	ldi	r23, 0x00	; 0
     526:	8e e0       	ldi	r24, 0x0E	; 14
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     52e:	c1 ff       	sbrs	r28, 1
     530:	07 c0       	rjmp	.+14     	; 0x540 <Lcd4_Port+0x34>
     532:	61 e0       	ldi	r22, 0x01	; 1
     534:	70 e0       	ldi	r23, 0x00	; 0
     536:	8f e0       	ldi	r24, 0x0F	; 15
     538:	90 e0       	ldi	r25, 0x00	; 0
     53a:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     53e:	06 c0       	rjmp	.+12     	; 0x54c <Lcd4_Port+0x40>
     540:	60 e0       	ldi	r22, 0x00	; 0
     542:	70 e0       	ldi	r23, 0x00	; 0
     544:	8f e0       	ldi	r24, 0x0F	; 15
     546:	90 e0       	ldi	r25, 0x00	; 0
     548:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     54c:	c2 ff       	sbrs	r28, 2
     54e:	07 c0       	rjmp	.+14     	; 0x55e <Lcd4_Port+0x52>
     550:	61 e0       	ldi	r22, 0x01	; 1
     552:	70 e0       	ldi	r23, 0x00	; 0
     554:	80 e1       	ldi	r24, 0x10	; 16
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     55c:	06 c0       	rjmp	.+12     	; 0x56a <Lcd4_Port+0x5e>
     55e:	60 e0       	ldi	r22, 0x00	; 0
     560:	70 e0       	ldi	r23, 0x00	; 0
     562:	80 e1       	ldi	r24, 0x10	; 16
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     56a:	c3 ff       	sbrs	r28, 3
     56c:	07 c0       	rjmp	.+14     	; 0x57c <Lcd4_Port+0x70>
     56e:	61 e0       	ldi	r22, 0x01	; 1
     570:	70 e0       	ldi	r23, 0x00	; 0
     572:	81 e1       	ldi	r24, 0x11	; 17
     574:	90 e0       	ldi	r25, 0x00	; 0
     576:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     57a:	06 c0       	rjmp	.+12     	; 0x588 <Lcd4_Port+0x7c>
     57c:	60 e0       	ldi	r22, 0x00	; 0
     57e:	70 e0       	ldi	r23, 0x00	; 0
     580:	81 e1       	ldi	r24, 0x11	; 17
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     588:	cf 91       	pop	r28
     58a:	08 95       	ret

0000058c <Lcd4_Cmd>:
     58c:	cf 93       	push	r28
     58e:	c8 2f       	mov	r28, r24
     590:	60 e0       	ldi	r22, 0x00	; 0
     592:	70 e0       	ldi	r23, 0x00	; 0
     594:	8a e0       	ldi	r24, 0x0A	; 10
     596:	90 e0       	ldi	r25, 0x00	; 0
     598:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     59c:	8c 2f       	mov	r24, r28
     59e:	0e 94 86 02 	call	0x50c	; 0x50c <Lcd4_Port>
     5a2:	61 e0       	ldi	r22, 0x01	; 1
     5a4:	70 e0       	ldi	r23, 0x00	; 0
     5a6:	8b e0       	ldi	r24, 0x0B	; 11
     5a8:	90 e0       	ldi	r25, 0x00	; 0
     5aa:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     5ae:	89 ef       	ldi	r24, 0xF9	; 249
     5b0:	90 e0       	ldi	r25, 0x00	; 0
     5b2:	01 97       	sbiw	r24, 0x01	; 1
     5b4:	f1 f7       	brne	.-4      	; 0x5b2 <Lcd4_Cmd+0x26>
     5b6:	00 c0       	rjmp	.+0      	; 0x5b8 <Lcd4_Cmd+0x2c>
     5b8:	00 00       	nop
     5ba:	60 e0       	ldi	r22, 0x00	; 0
     5bc:	70 e0       	ldi	r23, 0x00	; 0
     5be:	8b e0       	ldi	r24, 0x0B	; 11
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     5c6:	89 ef       	ldi	r24, 0xF9	; 249
     5c8:	90 e0       	ldi	r25, 0x00	; 0
     5ca:	01 97       	sbiw	r24, 0x01	; 1
     5cc:	f1 f7       	brne	.-4      	; 0x5ca <Lcd4_Cmd+0x3e>
     5ce:	00 c0       	rjmp	.+0      	; 0x5d0 <Lcd4_Cmd+0x44>
     5d0:	00 00       	nop
     5d2:	cf 91       	pop	r28
     5d4:	08 95       	ret

000005d6 <Lcd4_Clear>:
     5d6:	80 e0       	ldi	r24, 0x00	; 0
     5d8:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     5dc:	81 e0       	ldi	r24, 0x01	; 1
     5de:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     5e2:	08 95       	ret

000005e4 <Lcd4_Set_Cursor>:
     5e4:	cf 93       	push	r28
     5e6:	81 30       	cpi	r24, 0x01	; 1
     5e8:	61 f4       	brne	.+24     	; 0x602 <Lcd4_Set_Cursor+0x1e>
     5ea:	80 e8       	ldi	r24, 0x80	; 128
     5ec:	86 0f       	add	r24, r22
     5ee:	c6 2f       	mov	r28, r22
     5f0:	cf 70       	andi	r28, 0x0F	; 15
     5f2:	82 95       	swap	r24
     5f4:	8f 70       	andi	r24, 0x0F	; 15
     5f6:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     5fa:	8c 2f       	mov	r24, r28
     5fc:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     600:	0d c0       	rjmp	.+26     	; 0x61c <Lcd4_Set_Cursor+0x38>
     602:	82 30       	cpi	r24, 0x02	; 2
     604:	59 f4       	brne	.+22     	; 0x61c <Lcd4_Set_Cursor+0x38>
     606:	80 ec       	ldi	r24, 0xC0	; 192
     608:	86 0f       	add	r24, r22
     60a:	c6 2f       	mov	r28, r22
     60c:	cf 70       	andi	r28, 0x0F	; 15
     60e:	82 95       	swap	r24
     610:	8f 70       	andi	r24, 0x0F	; 15
     612:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     616:	8c 2f       	mov	r24, r28
     618:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     61c:	cf 91       	pop	r28
     61e:	08 95       	ret

00000620 <Lcd4_Init>:
     620:	80 e0       	ldi	r24, 0x00	; 0
     622:	0e 94 86 02 	call	0x50c	; 0x50c <Lcd4_Port>
     626:	87 e8       	ldi	r24, 0x87	; 135
     628:	93 e1       	ldi	r25, 0x13	; 19
     62a:	01 97       	sbiw	r24, 0x01	; 1
     62c:	f1 f7       	brne	.-4      	; 0x62a <Lcd4_Init+0xa>
     62e:	00 c0       	rjmp	.+0      	; 0x630 <Lcd4_Init+0x10>
     630:	00 00       	nop
     632:	83 e0       	ldi	r24, 0x03	; 3
     634:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     638:	81 ee       	ldi	r24, 0xE1	; 225
     63a:	94 e0       	ldi	r25, 0x04	; 4
     63c:	01 97       	sbiw	r24, 0x01	; 1
     63e:	f1 f7       	brne	.-4      	; 0x63c <Lcd4_Init+0x1c>
     640:	00 c0       	rjmp	.+0      	; 0x642 <Lcd4_Init+0x22>
     642:	00 00       	nop
     644:	83 e0       	ldi	r24, 0x03	; 3
     646:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     64a:	8d eb       	ldi	r24, 0xBD	; 189
     64c:	9a e0       	ldi	r25, 0x0A	; 10
     64e:	01 97       	sbiw	r24, 0x01	; 1
     650:	f1 f7       	brne	.-4      	; 0x64e <Lcd4_Init+0x2e>
     652:	00 c0       	rjmp	.+0      	; 0x654 <Lcd4_Init+0x34>
     654:	00 00       	nop
     656:	83 e0       	ldi	r24, 0x03	; 3
     658:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     65c:	82 e0       	ldi	r24, 0x02	; 2
     65e:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     662:	82 e0       	ldi	r24, 0x02	; 2
     664:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     668:	88 e0       	ldi	r24, 0x08	; 8
     66a:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     66e:	80 e0       	ldi	r24, 0x00	; 0
     670:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     674:	8c e0       	ldi	r24, 0x0C	; 12
     676:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     67a:	80 e0       	ldi	r24, 0x00	; 0
     67c:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     680:	86 e0       	ldi	r24, 0x06	; 6
     682:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     686:	08 95       	ret

00000688 <Lcd4_Write_Char>:
     688:	cf 93       	push	r28
     68a:	df 93       	push	r29
     68c:	d8 2f       	mov	r29, r24
     68e:	df 70       	andi	r29, 0x0F	; 15
     690:	c8 2f       	mov	r28, r24
     692:	c0 7f       	andi	r28, 0xF0	; 240
     694:	61 e0       	ldi	r22, 0x01	; 1
     696:	70 e0       	ldi	r23, 0x00	; 0
     698:	8a e0       	ldi	r24, 0x0A	; 10
     69a:	90 e0       	ldi	r25, 0x00	; 0
     69c:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     6a0:	8c 2f       	mov	r24, r28
     6a2:	82 95       	swap	r24
     6a4:	8f 70       	andi	r24, 0x0F	; 15
     6a6:	0e 94 86 02 	call	0x50c	; 0x50c <Lcd4_Port>
     6aa:	61 e0       	ldi	r22, 0x01	; 1
     6ac:	70 e0       	ldi	r23, 0x00	; 0
     6ae:	8b e0       	ldi	r24, 0x0B	; 11
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     6b6:	89 ef       	ldi	r24, 0xF9	; 249
     6b8:	90 e0       	ldi	r25, 0x00	; 0
     6ba:	01 97       	sbiw	r24, 0x01	; 1
     6bc:	f1 f7       	brne	.-4      	; 0x6ba <Lcd4_Write_Char+0x32>
     6be:	00 c0       	rjmp	.+0      	; 0x6c0 <Lcd4_Write_Char+0x38>
     6c0:	00 00       	nop
     6c2:	60 e0       	ldi	r22, 0x00	; 0
     6c4:	70 e0       	ldi	r23, 0x00	; 0
     6c6:	8b e0       	ldi	r24, 0x0B	; 11
     6c8:	90 e0       	ldi	r25, 0x00	; 0
     6ca:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     6ce:	89 ef       	ldi	r24, 0xF9	; 249
     6d0:	90 e0       	ldi	r25, 0x00	; 0
     6d2:	01 97       	sbiw	r24, 0x01	; 1
     6d4:	f1 f7       	brne	.-4      	; 0x6d2 <Lcd4_Write_Char+0x4a>
     6d6:	00 c0       	rjmp	.+0      	; 0x6d8 <Lcd4_Write_Char+0x50>
     6d8:	00 00       	nop
     6da:	8d 2f       	mov	r24, r29
     6dc:	0e 94 86 02 	call	0x50c	; 0x50c <Lcd4_Port>
     6e0:	61 e0       	ldi	r22, 0x01	; 1
     6e2:	70 e0       	ldi	r23, 0x00	; 0
     6e4:	8b e0       	ldi	r24, 0x0B	; 11
     6e6:	90 e0       	ldi	r25, 0x00	; 0
     6e8:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     6ec:	89 ef       	ldi	r24, 0xF9	; 249
     6ee:	90 e0       	ldi	r25, 0x00	; 0
     6f0:	01 97       	sbiw	r24, 0x01	; 1
     6f2:	f1 f7       	brne	.-4      	; 0x6f0 <Lcd4_Write_Char+0x68>
     6f4:	00 c0       	rjmp	.+0      	; 0x6f6 <Lcd4_Write_Char+0x6e>
     6f6:	00 00       	nop
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	8b e0       	ldi	r24, 0x0B	; 11
     6fe:	90 e0       	ldi	r25, 0x00	; 0
     700:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     704:	89 ef       	ldi	r24, 0xF9	; 249
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	01 97       	sbiw	r24, 0x01	; 1
     70a:	f1 f7       	brne	.-4      	; 0x708 <Lcd4_Write_Char+0x80>
     70c:	00 c0       	rjmp	.+0      	; 0x70e <Lcd4_Write_Char+0x86>
     70e:	00 00       	nop
     710:	df 91       	pop	r29
     712:	cf 91       	pop	r28
     714:	08 95       	ret

00000716 <Lcd4_Write_String>:
     716:	0f 93       	push	r16
     718:	1f 93       	push	r17
     71a:	cf 93       	push	r28
     71c:	df 93       	push	r29
     71e:	8c 01       	movw	r16, r24
     720:	c0 e0       	ldi	r28, 0x00	; 0
     722:	d0 e0       	ldi	r29, 0x00	; 0
     724:	03 c0       	rjmp	.+6      	; 0x72c <Lcd4_Write_String+0x16>
     726:	0e 94 44 03 	call	0x688	; 0x688 <Lcd4_Write_Char>
     72a:	21 96       	adiw	r28, 0x01	; 1
     72c:	f8 01       	movw	r30, r16
     72e:	ec 0f       	add	r30, r28
     730:	fd 1f       	adc	r31, r29
     732:	80 81       	ld	r24, Z
     734:	81 11       	cpse	r24, r1
     736:	f7 cf       	rjmp	.-18     	; 0x726 <Lcd4_Write_String+0x10>
     738:	df 91       	pop	r29
     73a:	cf 91       	pop	r28
     73c:	1f 91       	pop	r17
     73e:	0f 91       	pop	r16
     740:	08 95       	ret

00000742 <Lcd4_Shift_Left>:
}

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
     742:	81 e0       	ldi	r24, 0x01	; 1
     744:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
	Lcd4_Cmd(0x08);
     748:	88 e0       	ldi	r24, 0x08	; 8
     74a:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     74e:	08 95       	ret

00000750 <UART_init>:
uint16_t voteflag = 0;

void UART_init()
{	
	
	UCSRB = 0b00011000;// Turn on the reception and Transmission
     750:	88 e1       	ldi	r24, 0x18	; 24
     752:	8a b9       	out	0x0a, r24	; 10
	UCSRC = 0b10000110;
     754:	86 e8       	ldi	r24, 0x86	; 134
     756:	80 bd       	out	0x20, r24	; 32
	//UCSRC |= (1 << URSEL) | (1 << UCSZ0) | (1 << UCSZ1);// Use 8-bit character sizes
	UCSRA = 0b00000000;
     758:	1b b8       	out	0x0b, r1	; 11
	UCSRA |= (1 << RXC) | (1<<TXC);
     75a:	8b b1       	in	r24, 0x0b	; 11
     75c:	80 6c       	ori	r24, 0xC0	; 192
     75e:	8b b9       	out	0x0b, r24	; 11
	// | (0<<TXC)|(0<<UDRE)|(0<<FE)|(0<<DOR)|(0<UPE)|(0<<U2X)|(0<<MPCM)

	//UBRRL = BAUD_PRESCALE;		// Load lower 8-bits of the baud rate
	//UBRRH = (BAUD_PRESCALE >> 8);	// Load upper 8-bits
	UBRRL = 0x19;
     760:	89 e1       	ldi	r24, 0x19	; 25
     762:	89 b9       	out	0x09, r24	; 9
	UBRRH = 0x00;
     764:	10 bc       	out	0x20, r1	; 32
     766:	08 95       	ret

00000768 <ADC_init>:
}

void ADC_init()
{
	ADMUX = 0b11000000;
     768:	80 ec       	ldi	r24, 0xC0	; 192
     76a:	87 b9       	out	0x07, r24	; 7
	ADCSRA = 0b10000111;
     76c:	87 e8       	ldi	r24, 0x87	; 135
     76e:	86 b9       	out	0x06, r24	; 6
     770:	08 95       	ret

00000772 <ADC_Read>:

float ADC_Read()
{
	float value;
	float volt;
	ADCSRA |= (1 << ADSC);
     772:	86 b1       	in	r24, 0x06	; 6
     774:	80 64       	ori	r24, 0x40	; 64
     776:	86 b9       	out	0x06, r24	; 6
	while( ADCSRA & (1 << ADSC));
     778:	36 99       	sbic	0x06, 6	; 6
     77a:	fe cf       	rjmp	.-4      	; 0x778 <ADC_Read+0x6>
	value = ADCL  | ( 0b00000011 & ADCH) << 8;
     77c:	84 b1       	in	r24, 0x04	; 4
     77e:	65 b1       	in	r22, 0x05	; 5
     780:	63 70       	andi	r22, 0x03	; 3
     782:	70 e0       	ldi	r23, 0x00	; 0
     784:	76 2f       	mov	r23, r22
     786:	66 27       	eor	r22, r22
     788:	68 2b       	or	r22, r24
     78a:	07 2e       	mov	r0, r23
     78c:	00 0c       	add	r0, r0
     78e:	88 0b       	sbc	r24, r24
     790:	99 0b       	sbc	r25, r25
     792:	0e 94 05 06 	call	0xc0a	; 0xc0a <__floatsisf>
	volt = value*2.56/1024; //V
     796:	2a e0       	ldi	r18, 0x0A	; 10
     798:	37 ed       	ldi	r19, 0xD7	; 215
     79a:	43 e2       	ldi	r20, 0x23	; 35
     79c:	50 e4       	ldi	r21, 0x40	; 64
     79e:	0e 94 45 06 	call	0xc8a	; 0xc8a <__mulsf3>
     7a2:	20 e0       	ldi	r18, 0x00	; 0
     7a4:	30 e0       	ldi	r19, 0x00	; 0
     7a6:	40 e8       	ldi	r20, 0x80	; 128
     7a8:	5a e3       	ldi	r21, 0x3A	; 58
     7aa:	0e 94 45 06 	call	0xc8a	; 0xc8a <__mulsf3>
	volt = volt*100; //temp
     7ae:	20 e0       	ldi	r18, 0x00	; 0
     7b0:	30 e0       	ldi	r19, 0x00	; 0
     7b2:	48 ec       	ldi	r20, 0xC8	; 200
     7b4:	52 e4       	ldi	r21, 0x42	; 66
     7b6:	0e 94 45 06 	call	0xc8a	; 0xc8a <__mulsf3>
	return volt;
}
     7ba:	08 95       	ret

000007bc <UART_RxChar>:
unsigned char UART_RxChar()
{
	while ((UCSRA & (1 << RXC)) == 0x00);// Wait till data is received
     7bc:	5f 9b       	sbis	0x0b, 7	; 11
     7be:	fe cf       	rjmp	.-4      	; 0x7bc <UART_RxChar>
	return UDR;		// Return the byte
     7c0:	8c b1       	in	r24, 0x0c	; 12
}
     7c2:	08 95       	ret

000007c4 <UART_TxChar>:

void UART_TxChar(unsigned char data){
	while((UCSRA & (1 << UDRE)) == 0x00);
     7c4:	5d 9b       	sbis	0x0b, 5	; 11
     7c6:	fe cf       	rjmp	.-4      	; 0x7c4 <UART_TxChar>
	UDR = data;
     7c8:	8c b9       	out	0x0c, r24	; 12
     7ca:	08 95       	ret

000007cc <__vector_2>:
	
}

volatile int wait = 0;
ISR(INT1_vect){
     7cc:	1f 92       	push	r1
     7ce:	0f 92       	push	r0
     7d0:	0f b6       	in	r0, 0x3f	; 63
     7d2:	0f 92       	push	r0
     7d4:	11 24       	eor	r1, r1
	
	wait = 0;
     7d6:	10 92 8d 01 	sts	0x018D, r1	; 0x80018d <__data_end+0x1>
     7da:	10 92 8c 01 	sts	0x018C, r1	; 0x80018c <__data_end>

}
     7de:	0f 90       	pop	r0
     7e0:	0f be       	out	0x3f, r0	; 63
     7e2:	0f 90       	pop	r0
     7e4:	1f 90       	pop	r1
     7e6:	18 95       	reti

000007e8 <main>:

int main(void)
{
     7e8:	cf 93       	push	r28
     7ea:	df 93       	push	r29
     7ec:	cd b7       	in	r28, 0x3d	; 61
     7ee:	de b7       	in	r29, 0x3e	; 62
     7f0:	63 97       	sbiw	r28, 0x13	; 19
     7f2:	0f b6       	in	r0, 0x3f	; 63
     7f4:	f8 94       	cli
     7f6:	de bf       	out	0x3e, r29	; 62
     7f8:	0f be       	out	0x3f, r0	; 63
     7fa:	cd bf       	out	0x3d, r28	; 61
   float temp_F;
   char Fahrenheit[5];	
   DDRD = 0b11110110;
     7fc:	86 ef       	ldi	r24, 0xF6	; 246
     7fe:	81 bb       	out	0x11, r24	; 17
   DDRB = 0xFF;
     800:	8f ef       	ldi	r24, 0xFF	; 255
     802:	87 bb       	out	0x17, r24	; 23
   DDRA = 0x00;
     804:	1a ba       	out	0x1a, r1	; 26
   
   //INTERRUPT
   GICR = (1<<INT1); 
     806:	80 e8       	ldi	r24, 0x80	; 128
     808:	8b bf       	out	0x3b, r24	; 59
   MCUCR = MCUCR & 0b11110011;
     80a:	85 b7       	in	r24, 0x35	; 53
     80c:	83 7f       	andi	r24, 0xF3	; 243
     80e:	85 bf       	out	0x35, r24	; 53
   sei();
     810:	78 94       	sei
   
   Lcd4_Init();
     812:	0e 94 10 03 	call	0x620	; 0x620 <Lcd4_Init>
   UART_init();
     816:	0e 94 a8 03 	call	0x750	; 0x750 <UART_init>
   ADC_init();
     81a:	0e 94 b4 03 	call	0x768	; 0x768 <ADC_init>
  
    while (1) 
    {	
		if(wait)
     81e:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <__data_end>
     822:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <__data_end+0x1>
     826:	89 2b       	or	r24, r25
     828:	d1 f7       	brne	.-12     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     82a:	2f ed       	ldi	r18, 0xDF	; 223
     82c:	33 e9       	ldi	r19, 0x93	; 147
     82e:	84 e0       	ldi	r24, 0x04	; 4
     830:	21 50       	subi	r18, 0x01	; 1
     832:	30 40       	sbci	r19, 0x00	; 0
     834:	80 40       	sbci	r24, 0x00	; 0
     836:	e1 f7       	brne	.-8      	; 0x830 <__DATA_REGION_LENGTH__+0x30>
     838:	00 c0       	rjmp	.+0      	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
     83a:	00 00       	nop
			continue;
		
		_delay_ms(1500);
		Lcd4_Clear();
     83c:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
		Lcd4_Write_String("Checking temperature..");
     840:	8e ea       	ldi	r24, 0xAE	; 174
     842:	90 e0       	ldi	r25, 0x00	; 0
     844:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
		for(int i = 0; i < 8; i++){
     848:	00 e0       	ldi	r16, 0x00	; 0
     84a:	10 e0       	ldi	r17, 0x00	; 0
     84c:	0a c0       	rjmp	.+20     	; 0x862 <__stack+0x3>
			Lcd4_Shift_Left();
     84e:	0e 94 a1 03 	call	0x742	; 0x742 <Lcd4_Shift_Left>
     852:	8f e4       	ldi	r24, 0x4F	; 79
     854:	93 ec       	ldi	r25, 0xC3	; 195
     856:	01 97       	sbiw	r24, 0x01	; 1
     858:	f1 f7       	brne	.-4      	; 0x856 <__DATA_REGION_LENGTH__+0x56>
     85a:	00 c0       	rjmp	.+0      	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
     85c:	00 00       	nop
			continue;
		
		_delay_ms(1500);
		Lcd4_Clear();
		Lcd4_Write_String("Checking temperature..");
		for(int i = 0; i < 8; i++){
     85e:	0f 5f       	subi	r16, 0xFF	; 255
     860:	1f 4f       	sbci	r17, 0xFF	; 255
     862:	08 30       	cpi	r16, 0x08	; 8
     864:	11 05       	cpc	r17, r1
     866:	9c f3       	brlt	.-26     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
     868:	9f e3       	ldi	r25, 0x3F	; 63
     86a:	2d e0       	ldi	r18, 0x0D	; 13
     86c:	33 e0       	ldi	r19, 0x03	; 3
     86e:	91 50       	subi	r25, 0x01	; 1
     870:	20 40       	sbci	r18, 0x00	; 0
     872:	30 40       	sbci	r19, 0x00	; 0
     874:	e1 f7       	brne	.-8      	; 0x86e <__stack+0xf>
     876:	00 c0       	rjmp	.+0      	; 0x878 <__stack+0x19>
     878:	00 00       	nop
			Lcd4_Shift_Left();
			_delay_ms(200);
		}
		_delay_ms(1000);
		Lcd4_Clear();
     87a:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
		Lcd4_Write_String("Temperature:");
     87e:	85 ec       	ldi	r24, 0xC5	; 197
     880:	90 e0       	ldi	r25, 0x00	; 0
     882:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     886:	8f e3       	ldi	r24, 0x3F	; 63
     888:	9d e0       	ldi	r25, 0x0D	; 13
     88a:	23 e0       	ldi	r18, 0x03	; 3
     88c:	81 50       	subi	r24, 0x01	; 1
     88e:	90 40       	sbci	r25, 0x00	; 0
     890:	20 40       	sbci	r18, 0x00	; 0
     892:	e1 f7       	brne	.-8      	; 0x88c <__stack+0x2d>
     894:	00 c0       	rjmp	.+0      	; 0x896 <__stack+0x37>
     896:	00 00       	nop
		_delay_ms(1000);
		Lcd4_Set_Cursor(2,0);
     898:	60 e0       	ldi	r22, 0x00	; 0
     89a:	82 e0       	ldi	r24, 0x02	; 2
     89c:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Set_Cursor>
		temp_F = ADC_Read();
     8a0:	0e 94 b9 03 	call	0x772	; 0x772 <ADC_Read>
     8a4:	6b 01       	movw	r12, r22
     8a6:	7c 01       	movw	r14, r24
		dtostrf(temp_F,4,2,Fahrenheit);
     8a8:	8e 01       	movw	r16, r28
     8aa:	0f 5f       	subi	r16, 0xFF	; 255
     8ac:	1f 4f       	sbci	r17, 0xFF	; 255
     8ae:	22 e0       	ldi	r18, 0x02	; 2
     8b0:	44 e0       	ldi	r20, 0x04	; 4
     8b2:	0e 94 4f 07 	call	0xe9e	; 0xe9e <dtostrf>
		Lcd4_Write_String(Fahrenheit);
     8b6:	c8 01       	movw	r24, r16
     8b8:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     8bc:	3f e7       	ldi	r19, 0x7F	; 127
     8be:	8a e1       	ldi	r24, 0x1A	; 26
     8c0:	96 e0       	ldi	r25, 0x06	; 6
     8c2:	31 50       	subi	r19, 0x01	; 1
     8c4:	80 40       	sbci	r24, 0x00	; 0
     8c6:	90 40       	sbci	r25, 0x00	; 0
     8c8:	e1 f7       	brne	.-8      	; 0x8c2 <__stack+0x63>
     8ca:	00 c0       	rjmp	.+0      	; 0x8cc <__stack+0x6d>
     8cc:	00 00       	nop
		_delay_ms(2000);
		if( temp_F >= 99.50){
     8ce:	20 e0       	ldi	r18, 0x00	; 0
     8d0:	30 e0       	ldi	r19, 0x00	; 0
     8d2:	47 ec       	ldi	r20, 0xC7	; 199
     8d4:	52 e4       	ldi	r21, 0x42	; 66
     8d6:	c7 01       	movw	r24, r14
     8d8:	b6 01       	movw	r22, r12
     8da:	0e 94 40 06 	call	0xc80	; 0xc80 <__gesf2>
     8de:	88 23       	and	r24, r24
     8e0:	0c f4       	brge	.+2      	; 0x8e4 <__stack+0x85>
     8e2:	41 c0       	rjmp	.+130    	; 0x966 <__stack+0x107>
			Lcd4_Clear();
     8e4:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
			Lcd4_Write_String("Temperature not normal");
     8e8:	82 ed       	ldi	r24, 0xD2	; 210
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
			
			for(int i = 0; i < 8; i++){
     8f0:	00 e0       	ldi	r16, 0x00	; 0
     8f2:	10 e0       	ldi	r17, 0x00	; 0
     8f4:	0a c0       	rjmp	.+20     	; 0x90a <__stack+0xab>
				Lcd4_Shift_Left();
     8f6:	0e 94 a1 03 	call	0x742	; 0x742 <Lcd4_Shift_Left>
     8fa:	8f e4       	ldi	r24, 0x4F	; 79
     8fc:	93 ec       	ldi	r25, 0xC3	; 195
     8fe:	01 97       	sbiw	r24, 0x01	; 1
     900:	f1 f7       	brne	.-4      	; 0x8fe <__stack+0x9f>
     902:	00 c0       	rjmp	.+0      	; 0x904 <__stack+0xa5>
     904:	00 00       	nop
		_delay_ms(2000);
		if( temp_F >= 99.50){
			Lcd4_Clear();
			Lcd4_Write_String("Temperature not normal");
			
			for(int i = 0; i < 8; i++){
     906:	0f 5f       	subi	r16, 0xFF	; 255
     908:	1f 4f       	sbci	r17, 0xFF	; 255
     90a:	08 30       	cpi	r16, 0x08	; 8
     90c:	11 05       	cpc	r17, r1
     90e:	9c f3       	brlt	.-26     	; 0x8f6 <__stack+0x97>
     910:	9f e3       	ldi	r25, 0x3F	; 63
     912:	2d e0       	ldi	r18, 0x0D	; 13
     914:	33 e0       	ldi	r19, 0x03	; 3
     916:	91 50       	subi	r25, 0x01	; 1
     918:	20 40       	sbci	r18, 0x00	; 0
     91a:	30 40       	sbci	r19, 0x00	; 0
     91c:	e1 f7       	brne	.-8      	; 0x916 <__stack+0xb7>
     91e:	00 c0       	rjmp	.+0      	; 0x920 <__stack+0xc1>
     920:	00 00       	nop
				Lcd4_Shift_Left();
				_delay_ms(200);
			}
			_delay_ms(1000);
			Lcd4_Clear();
     922:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
			Lcd4_Write_String("You can't vote now");
     926:	89 ee       	ldi	r24, 0xE9	; 233
     928:	90 e0       	ldi	r25, 0x00	; 0
     92a:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
			for(int i = 0; i < 8; i++){
     92e:	00 e0       	ldi	r16, 0x00	; 0
     930:	10 e0       	ldi	r17, 0x00	; 0
     932:	0a c0       	rjmp	.+20     	; 0x948 <__stack+0xe9>
				Lcd4_Shift_Left();
     934:	0e 94 a1 03 	call	0x742	; 0x742 <Lcd4_Shift_Left>
     938:	8f e4       	ldi	r24, 0x4F	; 79
     93a:	93 ec       	ldi	r25, 0xC3	; 195
     93c:	01 97       	sbiw	r24, 0x01	; 1
     93e:	f1 f7       	brne	.-4      	; 0x93c <__stack+0xdd>
     940:	00 c0       	rjmp	.+0      	; 0x942 <__stack+0xe3>
     942:	00 00       	nop
				_delay_ms(200);
			}
			_delay_ms(1000);
			Lcd4_Clear();
			Lcd4_Write_String("You can't vote now");
			for(int i = 0; i < 8; i++){
     944:	0f 5f       	subi	r16, 0xFF	; 255
     946:	1f 4f       	sbci	r17, 0xFF	; 255
     948:	08 30       	cpi	r16, 0x08	; 8
     94a:	11 05       	cpc	r17, r1
     94c:	9c f3       	brlt	.-26     	; 0x934 <__stack+0xd5>
				Lcd4_Shift_Left();
				_delay_ms(200);
			}
			Lcd4_Clear();
     94e:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
     952:	9f ef       	ldi	r25, 0xFF	; 255
     954:	24 e3       	ldi	r18, 0x34	; 52
     956:	3c e0       	ldi	r19, 0x0C	; 12
     958:	91 50       	subi	r25, 0x01	; 1
     95a:	20 40       	sbci	r18, 0x00	; 0
     95c:	30 40       	sbci	r19, 0x00	; 0
     95e:	e1 f7       	brne	.-8      	; 0x958 <__stack+0xf9>
     960:	00 c0       	rjmp	.+0      	; 0x962 <__stack+0x103>
     962:	00 00       	nop
			_delay_ms(4000);
			continue;
     964:	5c cf       	rjmp	.-328    	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
			
		}
		unsigned char id[10];
	    int count = 1;
	    Lcd4_Clear();
     966:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
	    Lcd4_Write_String("Waiting for  ");
     96a:	8c ef       	ldi	r24, 0xFC	; 252
     96c:	90 e0       	ldi	r25, 0x00	; 0
     96e:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     972:	8f e9       	ldi	r24, 0x9F	; 159
     974:	96 e8       	ldi	r25, 0x86	; 134
     976:	21 e0       	ldi	r18, 0x01	; 1
     978:	81 50       	subi	r24, 0x01	; 1
     97a:	90 40       	sbci	r25, 0x00	; 0
     97c:	20 40       	sbci	r18, 0x00	; 0
     97e:	e1 f7       	brne	.-8      	; 0x978 <__stack+0x119>
     980:	00 c0       	rjmp	.+0      	; 0x982 <__stack+0x123>
     982:	00 00       	nop
	    _delay_ms(500);
	    Lcd4_Set_Cursor(2, 1);
     984:	61 e0       	ldi	r22, 0x01	; 1
     986:	82 e0       	ldi	r24, 0x02	; 2
     988:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Set_Cursor>
	    Lcd4_Write_String("RFID Tag");
     98c:	8a e0       	ldi	r24, 0x0A	; 10
     98e:	91 e0       	ldi	r25, 0x01	; 1
     990:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     994:	3f e9       	ldi	r19, 0x9F	; 159
     996:	86 e8       	ldi	r24, 0x86	; 134
     998:	91 e0       	ldi	r25, 0x01	; 1
     99a:	31 50       	subi	r19, 0x01	; 1
     99c:	80 40       	sbci	r24, 0x00	; 0
     99e:	90 40       	sbci	r25, 0x00	; 0
     9a0:	e1 f7       	brne	.-8      	; 0x99a <__stack+0x13b>
     9a2:	00 c0       	rjmp	.+0      	; 0x9a4 <__stack+0x145>
     9a4:	00 00       	nop
	    _delay_ms(500);
	    Lcd4_Clear();
     9a6:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
	    
		Lcd4_Write_String("Reading Tag...");
     9aa:	83 e1       	ldi	r24, 0x13	; 19
     9ac:	91 e0       	ldi	r25, 0x01	; 1
     9ae:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
	    Lcd4_Set_Cursor(2, 0);
     9b2:	60 e0       	ldi	r22, 0x00	; 0
     9b4:	82 e0       	ldi	r24, 0x02	; 2
     9b6:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Set_Cursor>
	    
	    int match = 0;
     9ba:	e1 2c       	mov	r14, r1
     9bc:	f1 2c       	mov	r15, r1
			_delay_ms(4000);
			continue;
			
		}
		unsigned char id[10];
	    int count = 1;
     9be:	01 e0       	ldi	r16, 0x01	; 1
     9c0:	10 e0       	ldi	r17, 0x00	; 0
	    Lcd4_Set_Cursor(2, 0);
	    
	    int match = 0;
		
		while(1){
			id[count-1] = UART_RxChar();
     9c2:	0e 94 de 03 	call	0x7bc	; 0x7bc <UART_RxChar>
     9c6:	f8 01       	movw	r30, r16
     9c8:	31 97       	sbiw	r30, 0x01	; 1
     9ca:	26 e0       	ldi	r18, 0x06	; 6
     9cc:	30 e0       	ldi	r19, 0x00	; 0
     9ce:	2c 0f       	add	r18, r28
     9d0:	3d 1f       	adc	r19, r29
     9d2:	e2 0f       	add	r30, r18
     9d4:	f3 1f       	adc	r31, r19
     9d6:	80 83       	st	Z, r24
			Lcd4_Write_Char(id[count-1]);
     9d8:	0e 94 44 03 	call	0x688	; 0x688 <Lcd4_Write_Char>
			if(count < id_len){
     9dc:	60 91 aa 00 	lds	r22, 0x00AA	; 0x8000aa <id_len>
     9e0:	70 91 ab 00 	lds	r23, 0x00AB	; 0x8000ab <id_len+0x1>
     9e4:	06 17       	cp	r16, r22
     9e6:	17 07       	cpc	r17, r23
     9e8:	1c f4       	brge	.+6      	; 0x9f0 <__stack+0x191>
				count++;
     9ea:	0f 5f       	subi	r16, 0xFF	; 255
     9ec:	1f 4f       	sbci	r17, 0xFF	; 255
				continue;
     9ee:	e9 cf       	rjmp	.-46     	; 0x9c2 <__stack+0x163>
			}
			else if(count == id_len){
     9f0:	06 17       	cp	r16, r22
     9f2:	17 07       	cpc	r17, r23
     9f4:	09 f0       	breq	.+2      	; 0x9f8 <__stack+0x199>
     9f6:	54 c0       	rjmp	.+168    	; 0xaa0 <__stack+0x241>
     9f8:	4a c0       	rjmp	.+148    	; 0xa8e <__stack+0x22f>
				int j;
				for(int i = 0; i<total_id; i++){
					for(j = 0; j<id_len; j++){
						if(valid_id[i][j] != id[j]){
     9fa:	ca 01       	movw	r24, r20
     9fc:	88 0f       	add	r24, r24
     9fe:	99 1f       	adc	r25, r25
     a00:	88 0f       	add	r24, r24
     a02:	99 1f       	adc	r25, r25
     a04:	88 0f       	add	r24, r24
     a06:	99 1f       	adc	r25, r25
     a08:	fa 01       	movw	r30, r20
     a0a:	ee 0f       	add	r30, r30
     a0c:	ff 1f       	adc	r31, r31
     a0e:	e8 0f       	add	r30, r24
     a10:	f9 1f       	adc	r31, r25
     a12:	ec 59       	subi	r30, 0x9C	; 156
     a14:	ff 4f       	sbci	r31, 0xFF	; 255
     a16:	e2 0f       	add	r30, r18
     a18:	f3 1f       	adc	r31, r19
     a1a:	90 81       	ld	r25, Z
     a1c:	e6 e0       	ldi	r30, 0x06	; 6
     a1e:	f0 e0       	ldi	r31, 0x00	; 0
     a20:	ec 0f       	add	r30, r28
     a22:	fd 1f       	adc	r31, r29
     a24:	e2 0f       	add	r30, r18
     a26:	f3 1f       	adc	r31, r19
     a28:	80 81       	ld	r24, Z
     a2a:	98 13       	cpse	r25, r24
     a2c:	08 c0       	rjmp	.+16     	; 0xa3e <__stack+0x1df>
				continue;
			}
			else if(count == id_len){
				int j;
				for(int i = 0; i<total_id; i++){
					for(j = 0; j<id_len; j++){
     a2e:	2f 5f       	subi	r18, 0xFF	; 255
     a30:	3f 4f       	sbci	r19, 0xFF	; 255
     a32:	02 c0       	rjmp	.+4      	; 0xa38 <__stack+0x1d9>
     a34:	20 e0       	ldi	r18, 0x00	; 0
     a36:	30 e0       	ldi	r19, 0x00	; 0
     a38:	26 17       	cp	r18, r22
     a3a:	37 07       	cpc	r19, r23
     a3c:	f4 f2       	brlt	.-68     	; 0x9fa <__stack+0x19b>
						if(valid_id[i][j] != id[j]){
							break;
						}
					}
					if(j == id_len){
     a3e:	26 17       	cp	r18, r22
     a40:	37 07       	cpc	r19, r23
     a42:	11 f5       	brne	.+68     	; 0xa88 <__stack+0x229>
						if(!voted[i]){
     a44:	fa 01       	movw	r30, r20
     a46:	ee 0f       	add	r30, r30
     a48:	ff 1f       	adc	r31, r31
     a4a:	e0 57       	subi	r30, 0x70	; 112
     a4c:	fe 4f       	sbci	r31, 0xFE	; 254
     a4e:	80 81       	ld	r24, Z
     a50:	91 81       	ldd	r25, Z+1	; 0x01
     a52:	00 97       	sbiw	r24, 0x00	; 0
     a54:	69 f4       	brne	.+26     	; 0xa70 <__stack+0x211>
							voted[i] = 1;
     a56:	44 0f       	add	r20, r20
     a58:	55 1f       	adc	r21, r21
     a5a:	fa 01       	movw	r30, r20
     a5c:	e0 57       	subi	r30, 0x70	; 112
     a5e:	fe 4f       	sbci	r31, 0xFE	; 254
     a60:	81 e0       	ldi	r24, 0x01	; 1
     a62:	90 e0       	ldi	r25, 0x00	; 0
     a64:	91 83       	std	Z+1, r25	; 0x01
     a66:	80 83       	st	Z, r24
							match = 1;
     a68:	ee 24       	eor	r14, r14
     a6a:	e3 94       	inc	r14
     a6c:	f1 2c       	mov	r15, r1
							break;	
     a6e:	18 c0       	rjmp	.+48     	; 0xaa0 <__stack+0x241>
						}
						else if(voted[i]){
     a70:	89 2b       	or	r24, r25
     a72:	51 f0       	breq	.+20     	; 0xa88 <__stack+0x229>
							match = 1;
							voteflag = 1;
     a74:	81 e0       	ldi	r24, 0x01	; 1
     a76:	90 e0       	ldi	r25, 0x00	; 0
     a78:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <voteflag+0x1>
     a7c:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <voteflag>
							voted[i] = 1;
							match = 1;
							break;	
						}
						else if(voted[i]){
							match = 1;
     a80:	ee 24       	eor	r14, r14
     a82:	e3 94       	inc	r14
     a84:	f1 2c       	mov	r15, r1
							voteflag = 1;
							break;
     a86:	0c c0       	rjmp	.+24     	; 0xaa0 <__stack+0x241>
				count++;
				continue;
			}
			else if(count == id_len){
				int j;
				for(int i = 0; i<total_id; i++){
     a88:	4f 5f       	subi	r20, 0xFF	; 255
     a8a:	5f 4f       	sbci	r21, 0xFF	; 255
     a8c:	02 c0       	rjmp	.+4      	; 0xa92 <__stack+0x233>
     a8e:	40 e0       	ldi	r20, 0x00	; 0
     a90:	50 e0       	ldi	r21, 0x00	; 0
     a92:	80 91 ac 00 	lds	r24, 0x00AC	; 0x8000ac <total_id>
     a96:	90 91 ad 00 	lds	r25, 0x00AD	; 0x8000ad <total_id+0x1>
     a9a:	48 17       	cp	r20, r24
     a9c:	59 07       	cpc	r21, r25
     a9e:	54 f2       	brlt	.-108    	; 0xa34 <__stack+0x1d5>
							break;
						}
					}
				}
			}
			if(match == 0){
     aa0:	e1 14       	cp	r14, r1
     aa2:	f1 04       	cpc	r15, r1
     aa4:	c1 f4       	brne	.+48     	; 0xad6 <__stack+0x277>
				Lcd4_Clear();
     aa6:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
				Lcd4_Write_String("ID match: ");
     aaa:	82 e2       	ldi	r24, 0x22	; 34
     aac:	91 e0       	ldi	r25, 0x01	; 1
     aae:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
				Lcd4_Set_Cursor(2,0);
     ab2:	60 e0       	ldi	r22, 0x00	; 0
     ab4:	82 e0       	ldi	r24, 0x02	; 2
     ab6:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Set_Cursor>
				Lcd4_Write_String("Not found. Reset");
     aba:	8d e2       	ldi	r24, 0x2D	; 45
     abc:	91 e0       	ldi	r25, 0x01	; 1
     abe:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     ac2:	3f e9       	ldi	r19, 0x9F	; 159
     ac4:	86 e8       	ldi	r24, 0x86	; 134
     ac6:	91 e0       	ldi	r25, 0x01	; 1
     ac8:	31 50       	subi	r19, 0x01	; 1
     aca:	80 40       	sbci	r24, 0x00	; 0
     acc:	90 40       	sbci	r25, 0x00	; 0
     ace:	e1 f7       	brne	.-8      	; 0xac8 <__stack+0x269>
     ad0:	00 c0       	rjmp	.+0      	; 0xad2 <__stack+0x273>
     ad2:	00 00       	nop
     ad4:	a4 ce       	rjmp	.-696    	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
				_delay_ms(500);
				break;
			}
			else if(match == 1){
     ad6:	21 e0       	ldi	r18, 0x01	; 1
     ad8:	e2 16       	cp	r14, r18
     ada:	f1 04       	cpc	r15, r1
     adc:	09 f0       	breq	.+2      	; 0xae0 <__stack+0x281>
     ade:	71 cf       	rjmp	.-286    	; 0x9c2 <__stack+0x163>
				Lcd4_Clear();
     ae0:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
				if(voteflag){
     ae4:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <voteflag>
     ae8:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <voteflag+0x1>
     aec:	89 2b       	or	r24, r25
     aee:	29 f1       	breq	.+74     	; 0xb3a <__stack+0x2db>
					Lcd4_Write_String("This Person Has");
     af0:	8e e3       	ldi	r24, 0x3E	; 62
     af2:	91 e0       	ldi	r25, 0x01	; 1
     af4:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     af8:	3f e3       	ldi	r19, 0x3F	; 63
     afa:	8d e0       	ldi	r24, 0x0D	; 13
     afc:	93 e0       	ldi	r25, 0x03	; 3
     afe:	31 50       	subi	r19, 0x01	; 1
     b00:	80 40       	sbci	r24, 0x00	; 0
     b02:	90 40       	sbci	r25, 0x00	; 0
     b04:	e1 f7       	brne	.-8      	; 0xafe <__stack+0x29f>
     b06:	00 c0       	rjmp	.+0      	; 0xb08 <__stack+0x2a9>
     b08:	00 00       	nop
					_delay_ms(1000);
					Lcd4_Set_Cursor(2, 0);
     b0a:	60 e0       	ldi	r22, 0x00	; 0
     b0c:	82 e0       	ldi	r24, 0x02	; 2
     b0e:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Set_Cursor>
					Lcd4_Write_String("Already Voted");
     b12:	8e e4       	ldi	r24, 0x4E	; 78
     b14:	91 e0       	ldi	r25, 0x01	; 1
     b16:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     b1a:	2f e1       	ldi	r18, 0x1F	; 31
     b1c:	31 ea       	ldi	r19, 0xA1	; 161
     b1e:	87 e0       	ldi	r24, 0x07	; 7
     b20:	21 50       	subi	r18, 0x01	; 1
     b22:	30 40       	sbci	r19, 0x00	; 0
     b24:	80 40       	sbci	r24, 0x00	; 0
     b26:	e1 f7       	brne	.-8      	; 0xb20 <__stack+0x2c1>
     b28:	00 c0       	rjmp	.+0      	; 0xb2a <__stack+0x2cb>
     b2a:	00 00       	nop
					_delay_ms(2500);
					Lcd4_Clear();
     b2c:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
					voteflag = 0;
     b30:	10 92 8f 01 	sts	0x018F, r1	; 0x80018f <voteflag+0x1>
     b34:	10 92 8e 01 	sts	0x018E, r1	; 0x80018e <voteflag>
					break;
     b38:	72 ce       	rjmp	.-796    	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
				}
				Lcd4_Write_String("ID match found!");
     b3a:	8c e5       	ldi	r24, 0x5C	; 92
     b3c:	91 e0       	ldi	r25, 0x01	; 1
     b3e:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     b42:	9f e1       	ldi	r25, 0x1F	; 31
     b44:	21 ea       	ldi	r18, 0xA1	; 161
     b46:	37 e0       	ldi	r19, 0x07	; 7
     b48:	91 50       	subi	r25, 0x01	; 1
     b4a:	20 40       	sbci	r18, 0x00	; 0
     b4c:	30 40       	sbci	r19, 0x00	; 0
     b4e:	e1 f7       	brne	.-8      	; 0xb48 <__stack+0x2e9>
     b50:	00 c0       	rjmp	.+0      	; 0xb52 <__stack+0x2f3>
     b52:	00 00       	nop
				_delay_ms(2500);
				Lcd4_Clear();
     b54:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
				//Generating Random Lock Code
				int lock = rand() % (9999 + 1 - 1000) + 1000;
     b58:	0e 94 bb 07 	call	0xf76	; 0xf76 <rand>
     b5c:	68 e2       	ldi	r22, 0x28	; 40
     b5e:	73 e2       	ldi	r23, 0x23	; 35
     b60:	0e 94 27 07 	call	0xe4e	; 0xe4e <__divmodhi4>
     b64:	88 51       	subi	r24, 0x18	; 24
     b66:	9c 4f       	sbci	r25, 0xFC	; 252
				unsigned char locks[4];
				
				int mod = 0;
     b68:	20 e0       	ldi	r18, 0x00	; 0
     b6a:	30 e0       	ldi	r19, 0x00	; 0
				while(lock != 0){
     b6c:	10 c0       	rjmp	.+32     	; 0xb8e <__stack+0x32f>
					locks[mod] = (lock % 10) + '0';
     b6e:	6a e0       	ldi	r22, 0x0A	; 10
     b70:	70 e0       	ldi	r23, 0x00	; 0
     b72:	0e 94 27 07 	call	0xe4e	; 0xe4e <__divmodhi4>
     b76:	e0 e1       	ldi	r30, 0x10	; 16
     b78:	f0 e0       	ldi	r31, 0x00	; 0
     b7a:	ec 0f       	add	r30, r28
     b7c:	fd 1f       	adc	r31, r29
     b7e:	e2 0f       	add	r30, r18
     b80:	f3 1f       	adc	r31, r19
     b82:	80 5d       	subi	r24, 0xD0	; 208
     b84:	80 83       	st	Z, r24
					lock = lock / 10;
     b86:	86 2f       	mov	r24, r22
     b88:	97 2f       	mov	r25, r23
					mod++;
     b8a:	2f 5f       	subi	r18, 0xFF	; 255
     b8c:	3f 4f       	sbci	r19, 0xFF	; 255
				//Generating Random Lock Code
				int lock = rand() % (9999 + 1 - 1000) + 1000;
				unsigned char locks[4];
				
				int mod = 0;
				while(lock != 0){
     b8e:	00 97       	sbiw	r24, 0x00	; 0
     b90:	71 f7       	brne	.-36     	; 0xb6e <__stack+0x30f>
					locks[mod] = (lock % 10) + '0';
					lock = lock / 10;
					mod++;
					
				}
				Lcd4_Write_String("Your Lock Code: ");
     b92:	8c e6       	ldi	r24, 0x6C	; 108
     b94:	91 e0       	ldi	r25, 0x01	; 1
     b96:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
				Lcd4_Set_Cursor(2, 0);
     b9a:	60 e0       	ldi	r22, 0x00	; 0
     b9c:	82 e0       	ldi	r24, 0x02	; 2
     b9e:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Set_Cursor>
				for(int i = 3; i!=-1; i--){
     ba2:	03 e0       	ldi	r16, 0x03	; 3
     ba4:	10 e0       	ldi	r17, 0x00	; 0
     ba6:	15 c0       	rjmp	.+42     	; 0xbd2 <__stack+0x373>
					Lcd4_Write_Char(locks[i]);
     ba8:	e0 e1       	ldi	r30, 0x10	; 16
     baa:	f0 e0       	ldi	r31, 0x00	; 0
     bac:	ec 0f       	add	r30, r28
     bae:	fd 1f       	adc	r31, r29
     bb0:	e0 0f       	add	r30, r16
     bb2:	f1 1f       	adc	r31, r17
     bb4:	f0 80       	ld	r15, Z
     bb6:	8f 2d       	mov	r24, r15
     bb8:	0e 94 44 03 	call	0x688	; 0x688 <Lcd4_Write_Char>
     bbc:	87 ea       	ldi	r24, 0xA7	; 167
     bbe:	91 e6       	ldi	r25, 0x61	; 97
     bc0:	01 97       	sbiw	r24, 0x01	; 1
     bc2:	f1 f7       	brne	.-4      	; 0xbc0 <__stack+0x361>
     bc4:	00 c0       	rjmp	.+0      	; 0xbc6 <__stack+0x367>
     bc6:	00 00       	nop
					_delay_ms(100);
					UART_TxChar(locks[i]);
     bc8:	8f 2d       	mov	r24, r15
     bca:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <UART_TxChar>
					mod++;
					
				}
				Lcd4_Write_String("Your Lock Code: ");
				Lcd4_Set_Cursor(2, 0);
				for(int i = 3; i!=-1; i--){
     bce:	01 50       	subi	r16, 0x01	; 1
     bd0:	11 09       	sbc	r17, r1
     bd2:	0f 3f       	cpi	r16, 0xFF	; 255
     bd4:	9f ef       	ldi	r25, 0xFF	; 255
     bd6:	19 07       	cpc	r17, r25
     bd8:	39 f7       	brne	.-50     	; 0xba8 <__stack+0x349>
     bda:	2f e3       	ldi	r18, 0x3F	; 63
     bdc:	3d e0       	ldi	r19, 0x0D	; 13
     bde:	83 e0       	ldi	r24, 0x03	; 3
     be0:	21 50       	subi	r18, 0x01	; 1
     be2:	30 40       	sbci	r19, 0x00	; 0
     be4:	80 40       	sbci	r24, 0x00	; 0
     be6:	e1 f7       	brne	.-8      	; 0xbe0 <__stack+0x381>
     be8:	00 c0       	rjmp	.+0      	; 0xbea <__stack+0x38b>
     bea:	00 00       	nop
					_delay_ms(100);
					UART_TxChar(locks[i]);
				}
				
				_delay_ms(1000);
				Lcd4_Clear();
     bec:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
				Lcd4_Write_String("Please Wait...");
     bf0:	8d e7       	ldi	r24, 0x7D	; 125
     bf2:	91 e0       	ldi	r25, 0x01	; 1
     bf4:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
				wait = 1;
     bf8:	81 e0       	ldi	r24, 0x01	; 1
     bfa:	90 e0       	ldi	r25, 0x00	; 0
     bfc:	90 93 8d 01 	sts	0x018D, r25	; 0x80018d <__data_end+0x1>
     c00:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <__data_end>
				break;
     c04:	0c ce       	rjmp	.-1000   	; 0x81e <__DATA_REGION_LENGTH__+0x1e>

00000c06 <__floatunsisf>:
     c06:	e8 94       	clt
     c08:	09 c0       	rjmp	.+18     	; 0xc1c <__floatsisf+0x12>

00000c0a <__floatsisf>:
     c0a:	97 fb       	bst	r25, 7
     c0c:	3e f4       	brtc	.+14     	; 0xc1c <__floatsisf+0x12>
     c0e:	90 95       	com	r25
     c10:	80 95       	com	r24
     c12:	70 95       	com	r23
     c14:	61 95       	neg	r22
     c16:	7f 4f       	sbci	r23, 0xFF	; 255
     c18:	8f 4f       	sbci	r24, 0xFF	; 255
     c1a:	9f 4f       	sbci	r25, 0xFF	; 255
     c1c:	99 23       	and	r25, r25
     c1e:	a9 f0       	breq	.+42     	; 0xc4a <__floatsisf+0x40>
     c20:	f9 2f       	mov	r31, r25
     c22:	96 e9       	ldi	r25, 0x96	; 150
     c24:	bb 27       	eor	r27, r27
     c26:	93 95       	inc	r25
     c28:	f6 95       	lsr	r31
     c2a:	87 95       	ror	r24
     c2c:	77 95       	ror	r23
     c2e:	67 95       	ror	r22
     c30:	b7 95       	ror	r27
     c32:	f1 11       	cpse	r31, r1
     c34:	f8 cf       	rjmp	.-16     	; 0xc26 <__floatsisf+0x1c>
     c36:	fa f4       	brpl	.+62     	; 0xc76 <__floatsisf+0x6c>
     c38:	bb 0f       	add	r27, r27
     c3a:	11 f4       	brne	.+4      	; 0xc40 <__floatsisf+0x36>
     c3c:	60 ff       	sbrs	r22, 0
     c3e:	1b c0       	rjmp	.+54     	; 0xc76 <__floatsisf+0x6c>
     c40:	6f 5f       	subi	r22, 0xFF	; 255
     c42:	7f 4f       	sbci	r23, 0xFF	; 255
     c44:	8f 4f       	sbci	r24, 0xFF	; 255
     c46:	9f 4f       	sbci	r25, 0xFF	; 255
     c48:	16 c0       	rjmp	.+44     	; 0xc76 <__floatsisf+0x6c>
     c4a:	88 23       	and	r24, r24
     c4c:	11 f0       	breq	.+4      	; 0xc52 <__floatsisf+0x48>
     c4e:	96 e9       	ldi	r25, 0x96	; 150
     c50:	11 c0       	rjmp	.+34     	; 0xc74 <__floatsisf+0x6a>
     c52:	77 23       	and	r23, r23
     c54:	21 f0       	breq	.+8      	; 0xc5e <__floatsisf+0x54>
     c56:	9e e8       	ldi	r25, 0x8E	; 142
     c58:	87 2f       	mov	r24, r23
     c5a:	76 2f       	mov	r23, r22
     c5c:	05 c0       	rjmp	.+10     	; 0xc68 <__floatsisf+0x5e>
     c5e:	66 23       	and	r22, r22
     c60:	71 f0       	breq	.+28     	; 0xc7e <__floatsisf+0x74>
     c62:	96 e8       	ldi	r25, 0x86	; 134
     c64:	86 2f       	mov	r24, r22
     c66:	70 e0       	ldi	r23, 0x00	; 0
     c68:	60 e0       	ldi	r22, 0x00	; 0
     c6a:	2a f0       	brmi	.+10     	; 0xc76 <__floatsisf+0x6c>
     c6c:	9a 95       	dec	r25
     c6e:	66 0f       	add	r22, r22
     c70:	77 1f       	adc	r23, r23
     c72:	88 1f       	adc	r24, r24
     c74:	da f7       	brpl	.-10     	; 0xc6c <__floatsisf+0x62>
     c76:	88 0f       	add	r24, r24
     c78:	96 95       	lsr	r25
     c7a:	87 95       	ror	r24
     c7c:	97 f9       	bld	r25, 7
     c7e:	08 95       	ret

00000c80 <__gesf2>:
     c80:	0e 94 b2 06 	call	0xd64	; 0xd64 <__fp_cmp>
     c84:	08 f4       	brcc	.+2      	; 0xc88 <__gesf2+0x8>
     c86:	8f ef       	ldi	r24, 0xFF	; 255
     c88:	08 95       	ret

00000c8a <__mulsf3>:
     c8a:	0e 94 58 06 	call	0xcb0	; 0xcb0 <__mulsf3x>
     c8e:	0c 94 ed 06 	jmp	0xdda	; 0xdda <__fp_round>
     c92:	0e 94 df 06 	call	0xdbe	; 0xdbe <__fp_pscA>
     c96:	38 f0       	brcs	.+14     	; 0xca6 <__mulsf3+0x1c>
     c98:	0e 94 e6 06 	call	0xdcc	; 0xdcc <__fp_pscB>
     c9c:	20 f0       	brcs	.+8      	; 0xca6 <__mulsf3+0x1c>
     c9e:	95 23       	and	r25, r21
     ca0:	11 f0       	breq	.+4      	; 0xca6 <__mulsf3+0x1c>
     ca2:	0c 94 d6 06 	jmp	0xdac	; 0xdac <__fp_inf>
     ca6:	0c 94 dc 06 	jmp	0xdb8	; 0xdb8 <__fp_nan>
     caa:	11 24       	eor	r1, r1
     cac:	0c 94 21 07 	jmp	0xe42	; 0xe42 <__fp_szero>

00000cb0 <__mulsf3x>:
     cb0:	0e 94 fe 06 	call	0xdfc	; 0xdfc <__fp_split3>
     cb4:	70 f3       	brcs	.-36     	; 0xc92 <__mulsf3+0x8>

00000cb6 <__mulsf3_pse>:
     cb6:	95 9f       	mul	r25, r21
     cb8:	c1 f3       	breq	.-16     	; 0xcaa <__mulsf3+0x20>
     cba:	95 0f       	add	r25, r21
     cbc:	50 e0       	ldi	r21, 0x00	; 0
     cbe:	55 1f       	adc	r21, r21
     cc0:	62 9f       	mul	r22, r18
     cc2:	f0 01       	movw	r30, r0
     cc4:	72 9f       	mul	r23, r18
     cc6:	bb 27       	eor	r27, r27
     cc8:	f0 0d       	add	r31, r0
     cca:	b1 1d       	adc	r27, r1
     ccc:	63 9f       	mul	r22, r19
     cce:	aa 27       	eor	r26, r26
     cd0:	f0 0d       	add	r31, r0
     cd2:	b1 1d       	adc	r27, r1
     cd4:	aa 1f       	adc	r26, r26
     cd6:	64 9f       	mul	r22, r20
     cd8:	66 27       	eor	r22, r22
     cda:	b0 0d       	add	r27, r0
     cdc:	a1 1d       	adc	r26, r1
     cde:	66 1f       	adc	r22, r22
     ce0:	82 9f       	mul	r24, r18
     ce2:	22 27       	eor	r18, r18
     ce4:	b0 0d       	add	r27, r0
     ce6:	a1 1d       	adc	r26, r1
     ce8:	62 1f       	adc	r22, r18
     cea:	73 9f       	mul	r23, r19
     cec:	b0 0d       	add	r27, r0
     cee:	a1 1d       	adc	r26, r1
     cf0:	62 1f       	adc	r22, r18
     cf2:	83 9f       	mul	r24, r19
     cf4:	a0 0d       	add	r26, r0
     cf6:	61 1d       	adc	r22, r1
     cf8:	22 1f       	adc	r18, r18
     cfa:	74 9f       	mul	r23, r20
     cfc:	33 27       	eor	r19, r19
     cfe:	a0 0d       	add	r26, r0
     d00:	61 1d       	adc	r22, r1
     d02:	23 1f       	adc	r18, r19
     d04:	84 9f       	mul	r24, r20
     d06:	60 0d       	add	r22, r0
     d08:	21 1d       	adc	r18, r1
     d0a:	82 2f       	mov	r24, r18
     d0c:	76 2f       	mov	r23, r22
     d0e:	6a 2f       	mov	r22, r26
     d10:	11 24       	eor	r1, r1
     d12:	9f 57       	subi	r25, 0x7F	; 127
     d14:	50 40       	sbci	r21, 0x00	; 0
     d16:	9a f0       	brmi	.+38     	; 0xd3e <__mulsf3_pse+0x88>
     d18:	f1 f0       	breq	.+60     	; 0xd56 <__mulsf3_pse+0xa0>
     d1a:	88 23       	and	r24, r24
     d1c:	4a f0       	brmi	.+18     	; 0xd30 <__mulsf3_pse+0x7a>
     d1e:	ee 0f       	add	r30, r30
     d20:	ff 1f       	adc	r31, r31
     d22:	bb 1f       	adc	r27, r27
     d24:	66 1f       	adc	r22, r22
     d26:	77 1f       	adc	r23, r23
     d28:	88 1f       	adc	r24, r24
     d2a:	91 50       	subi	r25, 0x01	; 1
     d2c:	50 40       	sbci	r21, 0x00	; 0
     d2e:	a9 f7       	brne	.-22     	; 0xd1a <__mulsf3_pse+0x64>
     d30:	9e 3f       	cpi	r25, 0xFE	; 254
     d32:	51 05       	cpc	r21, r1
     d34:	80 f0       	brcs	.+32     	; 0xd56 <__mulsf3_pse+0xa0>
     d36:	0c 94 d6 06 	jmp	0xdac	; 0xdac <__fp_inf>
     d3a:	0c 94 21 07 	jmp	0xe42	; 0xe42 <__fp_szero>
     d3e:	5f 3f       	cpi	r21, 0xFF	; 255
     d40:	e4 f3       	brlt	.-8      	; 0xd3a <__mulsf3_pse+0x84>
     d42:	98 3e       	cpi	r25, 0xE8	; 232
     d44:	d4 f3       	brlt	.-12     	; 0xd3a <__mulsf3_pse+0x84>
     d46:	86 95       	lsr	r24
     d48:	77 95       	ror	r23
     d4a:	67 95       	ror	r22
     d4c:	b7 95       	ror	r27
     d4e:	f7 95       	ror	r31
     d50:	e7 95       	ror	r30
     d52:	9f 5f       	subi	r25, 0xFF	; 255
     d54:	c1 f7       	brne	.-16     	; 0xd46 <__mulsf3_pse+0x90>
     d56:	fe 2b       	or	r31, r30
     d58:	88 0f       	add	r24, r24
     d5a:	91 1d       	adc	r25, r1
     d5c:	96 95       	lsr	r25
     d5e:	87 95       	ror	r24
     d60:	97 f9       	bld	r25, 7
     d62:	08 95       	ret

00000d64 <__fp_cmp>:
     d64:	99 0f       	add	r25, r25
     d66:	00 08       	sbc	r0, r0
     d68:	55 0f       	add	r21, r21
     d6a:	aa 0b       	sbc	r26, r26
     d6c:	e0 e8       	ldi	r30, 0x80	; 128
     d6e:	fe ef       	ldi	r31, 0xFE	; 254
     d70:	16 16       	cp	r1, r22
     d72:	17 06       	cpc	r1, r23
     d74:	e8 07       	cpc	r30, r24
     d76:	f9 07       	cpc	r31, r25
     d78:	c0 f0       	brcs	.+48     	; 0xdaa <__fp_cmp+0x46>
     d7a:	12 16       	cp	r1, r18
     d7c:	13 06       	cpc	r1, r19
     d7e:	e4 07       	cpc	r30, r20
     d80:	f5 07       	cpc	r31, r21
     d82:	98 f0       	brcs	.+38     	; 0xdaa <__fp_cmp+0x46>
     d84:	62 1b       	sub	r22, r18
     d86:	73 0b       	sbc	r23, r19
     d88:	84 0b       	sbc	r24, r20
     d8a:	95 0b       	sbc	r25, r21
     d8c:	39 f4       	brne	.+14     	; 0xd9c <__fp_cmp+0x38>
     d8e:	0a 26       	eor	r0, r26
     d90:	61 f0       	breq	.+24     	; 0xdaa <__fp_cmp+0x46>
     d92:	23 2b       	or	r18, r19
     d94:	24 2b       	or	r18, r20
     d96:	25 2b       	or	r18, r21
     d98:	21 f4       	brne	.+8      	; 0xda2 <__fp_cmp+0x3e>
     d9a:	08 95       	ret
     d9c:	0a 26       	eor	r0, r26
     d9e:	09 f4       	brne	.+2      	; 0xda2 <__fp_cmp+0x3e>
     da0:	a1 40       	sbci	r26, 0x01	; 1
     da2:	a6 95       	lsr	r26
     da4:	8f ef       	ldi	r24, 0xFF	; 255
     da6:	81 1d       	adc	r24, r1
     da8:	81 1d       	adc	r24, r1
     daa:	08 95       	ret

00000dac <__fp_inf>:
     dac:	97 f9       	bld	r25, 7
     dae:	9f 67       	ori	r25, 0x7F	; 127
     db0:	80 e8       	ldi	r24, 0x80	; 128
     db2:	70 e0       	ldi	r23, 0x00	; 0
     db4:	60 e0       	ldi	r22, 0x00	; 0
     db6:	08 95       	ret

00000db8 <__fp_nan>:
     db8:	9f ef       	ldi	r25, 0xFF	; 255
     dba:	80 ec       	ldi	r24, 0xC0	; 192
     dbc:	08 95       	ret

00000dbe <__fp_pscA>:
     dbe:	00 24       	eor	r0, r0
     dc0:	0a 94       	dec	r0
     dc2:	16 16       	cp	r1, r22
     dc4:	17 06       	cpc	r1, r23
     dc6:	18 06       	cpc	r1, r24
     dc8:	09 06       	cpc	r0, r25
     dca:	08 95       	ret

00000dcc <__fp_pscB>:
     dcc:	00 24       	eor	r0, r0
     dce:	0a 94       	dec	r0
     dd0:	12 16       	cp	r1, r18
     dd2:	13 06       	cpc	r1, r19
     dd4:	14 06       	cpc	r1, r20
     dd6:	05 06       	cpc	r0, r21
     dd8:	08 95       	ret

00000dda <__fp_round>:
     dda:	09 2e       	mov	r0, r25
     ddc:	03 94       	inc	r0
     dde:	00 0c       	add	r0, r0
     de0:	11 f4       	brne	.+4      	; 0xde6 <__fp_round+0xc>
     de2:	88 23       	and	r24, r24
     de4:	52 f0       	brmi	.+20     	; 0xdfa <__fp_round+0x20>
     de6:	bb 0f       	add	r27, r27
     de8:	40 f4       	brcc	.+16     	; 0xdfa <__fp_round+0x20>
     dea:	bf 2b       	or	r27, r31
     dec:	11 f4       	brne	.+4      	; 0xdf2 <__fp_round+0x18>
     dee:	60 ff       	sbrs	r22, 0
     df0:	04 c0       	rjmp	.+8      	; 0xdfa <__fp_round+0x20>
     df2:	6f 5f       	subi	r22, 0xFF	; 255
     df4:	7f 4f       	sbci	r23, 0xFF	; 255
     df6:	8f 4f       	sbci	r24, 0xFF	; 255
     df8:	9f 4f       	sbci	r25, 0xFF	; 255
     dfa:	08 95       	ret

00000dfc <__fp_split3>:
     dfc:	57 fd       	sbrc	r21, 7
     dfe:	90 58       	subi	r25, 0x80	; 128
     e00:	44 0f       	add	r20, r20
     e02:	55 1f       	adc	r21, r21
     e04:	59 f0       	breq	.+22     	; 0xe1c <__fp_splitA+0x10>
     e06:	5f 3f       	cpi	r21, 0xFF	; 255
     e08:	71 f0       	breq	.+28     	; 0xe26 <__fp_splitA+0x1a>
     e0a:	47 95       	ror	r20

00000e0c <__fp_splitA>:
     e0c:	88 0f       	add	r24, r24
     e0e:	97 fb       	bst	r25, 7
     e10:	99 1f       	adc	r25, r25
     e12:	61 f0       	breq	.+24     	; 0xe2c <__fp_splitA+0x20>
     e14:	9f 3f       	cpi	r25, 0xFF	; 255
     e16:	79 f0       	breq	.+30     	; 0xe36 <__fp_splitA+0x2a>
     e18:	87 95       	ror	r24
     e1a:	08 95       	ret
     e1c:	12 16       	cp	r1, r18
     e1e:	13 06       	cpc	r1, r19
     e20:	14 06       	cpc	r1, r20
     e22:	55 1f       	adc	r21, r21
     e24:	f2 cf       	rjmp	.-28     	; 0xe0a <__fp_split3+0xe>
     e26:	46 95       	lsr	r20
     e28:	f1 df       	rcall	.-30     	; 0xe0c <__fp_splitA>
     e2a:	08 c0       	rjmp	.+16     	; 0xe3c <__fp_splitA+0x30>
     e2c:	16 16       	cp	r1, r22
     e2e:	17 06       	cpc	r1, r23
     e30:	18 06       	cpc	r1, r24
     e32:	99 1f       	adc	r25, r25
     e34:	f1 cf       	rjmp	.-30     	; 0xe18 <__fp_splitA+0xc>
     e36:	86 95       	lsr	r24
     e38:	71 05       	cpc	r23, r1
     e3a:	61 05       	cpc	r22, r1
     e3c:	08 94       	sec
     e3e:	08 95       	ret

00000e40 <__fp_zero>:
     e40:	e8 94       	clt

00000e42 <__fp_szero>:
     e42:	bb 27       	eor	r27, r27
     e44:	66 27       	eor	r22, r22
     e46:	77 27       	eor	r23, r23
     e48:	cb 01       	movw	r24, r22
     e4a:	97 f9       	bld	r25, 7
     e4c:	08 95       	ret

00000e4e <__divmodhi4>:
     e4e:	97 fb       	bst	r25, 7
     e50:	07 2e       	mov	r0, r23
     e52:	16 f4       	brtc	.+4      	; 0xe58 <__divmodhi4+0xa>
     e54:	00 94       	com	r0
     e56:	07 d0       	rcall	.+14     	; 0xe66 <__divmodhi4_neg1>
     e58:	77 fd       	sbrc	r23, 7
     e5a:	09 d0       	rcall	.+18     	; 0xe6e <__divmodhi4_neg2>
     e5c:	0e 94 3b 07 	call	0xe76	; 0xe76 <__udivmodhi4>
     e60:	07 fc       	sbrc	r0, 7
     e62:	05 d0       	rcall	.+10     	; 0xe6e <__divmodhi4_neg2>
     e64:	3e f4       	brtc	.+14     	; 0xe74 <__divmodhi4_exit>

00000e66 <__divmodhi4_neg1>:
     e66:	90 95       	com	r25
     e68:	81 95       	neg	r24
     e6a:	9f 4f       	sbci	r25, 0xFF	; 255
     e6c:	08 95       	ret

00000e6e <__divmodhi4_neg2>:
     e6e:	70 95       	com	r23
     e70:	61 95       	neg	r22
     e72:	7f 4f       	sbci	r23, 0xFF	; 255

00000e74 <__divmodhi4_exit>:
     e74:	08 95       	ret

00000e76 <__udivmodhi4>:
     e76:	aa 1b       	sub	r26, r26
     e78:	bb 1b       	sub	r27, r27
     e7a:	51 e1       	ldi	r21, 0x11	; 17
     e7c:	07 c0       	rjmp	.+14     	; 0xe8c <__udivmodhi4_ep>

00000e7e <__udivmodhi4_loop>:
     e7e:	aa 1f       	adc	r26, r26
     e80:	bb 1f       	adc	r27, r27
     e82:	a6 17       	cp	r26, r22
     e84:	b7 07       	cpc	r27, r23
     e86:	10 f0       	brcs	.+4      	; 0xe8c <__udivmodhi4_ep>
     e88:	a6 1b       	sub	r26, r22
     e8a:	b7 0b       	sbc	r27, r23

00000e8c <__udivmodhi4_ep>:
     e8c:	88 1f       	adc	r24, r24
     e8e:	99 1f       	adc	r25, r25
     e90:	5a 95       	dec	r21
     e92:	a9 f7       	brne	.-22     	; 0xe7e <__udivmodhi4_loop>
     e94:	80 95       	com	r24
     e96:	90 95       	com	r25
     e98:	bc 01       	movw	r22, r24
     e9a:	cd 01       	movw	r24, r26
     e9c:	08 95       	ret

00000e9e <dtostrf>:
     e9e:	ef 92       	push	r14
     ea0:	0f 93       	push	r16
     ea2:	1f 93       	push	r17
     ea4:	cf 93       	push	r28
     ea6:	df 93       	push	r29
     ea8:	e8 01       	movw	r28, r16
     eaa:	47 fd       	sbrc	r20, 7
     eac:	02 c0       	rjmp	.+4      	; 0xeb2 <dtostrf+0x14>
     eae:	34 e0       	ldi	r19, 0x04	; 4
     eb0:	01 c0       	rjmp	.+2      	; 0xeb4 <dtostrf+0x16>
     eb2:	34 e1       	ldi	r19, 0x14	; 20
     eb4:	04 2e       	mov	r0, r20
     eb6:	00 0c       	add	r0, r0
     eb8:	55 0b       	sbc	r21, r21
     eba:	57 ff       	sbrs	r21, 7
     ebc:	03 c0       	rjmp	.+6      	; 0xec4 <dtostrf+0x26>
     ebe:	51 95       	neg	r21
     ec0:	41 95       	neg	r20
     ec2:	51 09       	sbc	r21, r1
     ec4:	e3 2e       	mov	r14, r19
     ec6:	02 2f       	mov	r16, r18
     ec8:	24 2f       	mov	r18, r20
     eca:	ae 01       	movw	r20, r28
     ecc:	0e 94 cb 07 	call	0xf96	; 0xf96 <dtoa_prf>
     ed0:	ce 01       	movw	r24, r28
     ed2:	df 91       	pop	r29
     ed4:	cf 91       	pop	r28
     ed6:	1f 91       	pop	r17
     ed8:	0f 91       	pop	r16
     eda:	ef 90       	pop	r14
     edc:	08 95       	ret

00000ede <do_rand>:
     ede:	8f 92       	push	r8
     ee0:	9f 92       	push	r9
     ee2:	af 92       	push	r10
     ee4:	bf 92       	push	r11
     ee6:	cf 92       	push	r12
     ee8:	df 92       	push	r13
     eea:	ef 92       	push	r14
     eec:	ff 92       	push	r15
     eee:	cf 93       	push	r28
     ef0:	df 93       	push	r29
     ef2:	ec 01       	movw	r28, r24
     ef4:	68 81       	ld	r22, Y
     ef6:	79 81       	ldd	r23, Y+1	; 0x01
     ef8:	8a 81       	ldd	r24, Y+2	; 0x02
     efa:	9b 81       	ldd	r25, Y+3	; 0x03
     efc:	61 15       	cp	r22, r1
     efe:	71 05       	cpc	r23, r1
     f00:	81 05       	cpc	r24, r1
     f02:	91 05       	cpc	r25, r1
     f04:	21 f4       	brne	.+8      	; 0xf0e <do_rand+0x30>
     f06:	64 e2       	ldi	r22, 0x24	; 36
     f08:	79 ed       	ldi	r23, 0xD9	; 217
     f0a:	8b e5       	ldi	r24, 0x5B	; 91
     f0c:	97 e0       	ldi	r25, 0x07	; 7
     f0e:	2d e1       	ldi	r18, 0x1D	; 29
     f10:	33 ef       	ldi	r19, 0xF3	; 243
     f12:	41 e0       	ldi	r20, 0x01	; 1
     f14:	50 e0       	ldi	r21, 0x00	; 0
     f16:	0e 94 fd 09 	call	0x13fa	; 0x13fa <__divmodsi4>
     f1a:	49 01       	movw	r8, r18
     f1c:	5a 01       	movw	r10, r20
     f1e:	9b 01       	movw	r18, r22
     f20:	ac 01       	movw	r20, r24
     f22:	a7 ea       	ldi	r26, 0xA7	; 167
     f24:	b1 e4       	ldi	r27, 0x41	; 65
     f26:	0e 94 1c 0a 	call	0x1438	; 0x1438 <__muluhisi3>
     f2a:	6b 01       	movw	r12, r22
     f2c:	7c 01       	movw	r14, r24
     f2e:	ac ee       	ldi	r26, 0xEC	; 236
     f30:	b4 ef       	ldi	r27, 0xF4	; 244
     f32:	a5 01       	movw	r20, r10
     f34:	94 01       	movw	r18, r8
     f36:	0e 94 2a 0a 	call	0x1454	; 0x1454 <__mulohisi3>
     f3a:	dc 01       	movw	r26, r24
     f3c:	cb 01       	movw	r24, r22
     f3e:	8c 0d       	add	r24, r12
     f40:	9d 1d       	adc	r25, r13
     f42:	ae 1d       	adc	r26, r14
     f44:	bf 1d       	adc	r27, r15
     f46:	b7 ff       	sbrs	r27, 7
     f48:	03 c0       	rjmp	.+6      	; 0xf50 <do_rand+0x72>
     f4a:	01 97       	sbiw	r24, 0x01	; 1
     f4c:	a1 09       	sbc	r26, r1
     f4e:	b0 48       	sbci	r27, 0x80	; 128
     f50:	88 83       	st	Y, r24
     f52:	99 83       	std	Y+1, r25	; 0x01
     f54:	aa 83       	std	Y+2, r26	; 0x02
     f56:	bb 83       	std	Y+3, r27	; 0x03
     f58:	9f 77       	andi	r25, 0x7F	; 127
     f5a:	df 91       	pop	r29
     f5c:	cf 91       	pop	r28
     f5e:	ff 90       	pop	r15
     f60:	ef 90       	pop	r14
     f62:	df 90       	pop	r13
     f64:	cf 90       	pop	r12
     f66:	bf 90       	pop	r11
     f68:	af 90       	pop	r10
     f6a:	9f 90       	pop	r9
     f6c:	8f 90       	pop	r8
     f6e:	08 95       	ret

00000f70 <rand_r>:
     f70:	0e 94 6f 07 	call	0xede	; 0xede <do_rand>
     f74:	08 95       	ret

00000f76 <rand>:
     f76:	80 e6       	ldi	r24, 0x60	; 96
     f78:	90 e0       	ldi	r25, 0x00	; 0
     f7a:	0e 94 6f 07 	call	0xede	; 0xede <do_rand>
     f7e:	08 95       	ret

00000f80 <srand>:
     f80:	a0 e0       	ldi	r26, 0x00	; 0
     f82:	b0 e0       	ldi	r27, 0x00	; 0
     f84:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     f88:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     f8c:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     f90:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     f94:	08 95       	ret

00000f96 <dtoa_prf>:
     f96:	a9 e0       	ldi	r26, 0x09	; 9
     f98:	b0 e0       	ldi	r27, 0x00	; 0
     f9a:	e1 ed       	ldi	r30, 0xD1	; 209
     f9c:	f7 e0       	ldi	r31, 0x07	; 7
     f9e:	0c 94 35 0a 	jmp	0x146a	; 0x146a <__prologue_saves__+0xc>
     fa2:	6a 01       	movw	r12, r20
     fa4:	12 2f       	mov	r17, r18
     fa6:	b0 2e       	mov	r11, r16
     fa8:	2b e3       	ldi	r18, 0x3B	; 59
     faa:	20 17       	cp	r18, r16
     fac:	20 f0       	brcs	.+8      	; 0xfb6 <dtoa_prf+0x20>
     fae:	ff 24       	eor	r15, r15
     fb0:	f3 94       	inc	r15
     fb2:	f0 0e       	add	r15, r16
     fb4:	02 c0       	rjmp	.+4      	; 0xfba <dtoa_prf+0x24>
     fb6:	2c e3       	ldi	r18, 0x3C	; 60
     fb8:	f2 2e       	mov	r15, r18
     fba:	0f 2d       	mov	r16, r15
     fbc:	27 e0       	ldi	r18, 0x07	; 7
     fbe:	ae 01       	movw	r20, r28
     fc0:	4f 5f       	subi	r20, 0xFF	; 255
     fc2:	5f 4f       	sbci	r21, 0xFF	; 255
     fc4:	0e 94 25 09 	call	0x124a	; 0x124a <__ftoa_engine>
     fc8:	bc 01       	movw	r22, r24
     fca:	49 81       	ldd	r20, Y+1	; 0x01
     fcc:	84 2f       	mov	r24, r20
     fce:	89 70       	andi	r24, 0x09	; 9
     fd0:	81 30       	cpi	r24, 0x01	; 1
     fd2:	31 f0       	breq	.+12     	; 0xfe0 <dtoa_prf+0x4a>
     fd4:	e1 fc       	sbrc	r14, 1
     fd6:	06 c0       	rjmp	.+12     	; 0xfe4 <dtoa_prf+0x4e>
     fd8:	e0 fe       	sbrs	r14, 0
     fda:	06 c0       	rjmp	.+12     	; 0xfe8 <dtoa_prf+0x52>
     fdc:	90 e2       	ldi	r25, 0x20	; 32
     fde:	05 c0       	rjmp	.+10     	; 0xfea <dtoa_prf+0x54>
     fe0:	9d e2       	ldi	r25, 0x2D	; 45
     fe2:	03 c0       	rjmp	.+6      	; 0xfea <dtoa_prf+0x54>
     fe4:	9b e2       	ldi	r25, 0x2B	; 43
     fe6:	01 c0       	rjmp	.+2      	; 0xfea <dtoa_prf+0x54>
     fe8:	90 e0       	ldi	r25, 0x00	; 0
     fea:	5e 2d       	mov	r21, r14
     fec:	50 71       	andi	r21, 0x10	; 16
     fee:	43 ff       	sbrs	r20, 3
     ff0:	3c c0       	rjmp	.+120    	; 0x106a <dtoa_prf+0xd4>
     ff2:	91 11       	cpse	r25, r1
     ff4:	02 c0       	rjmp	.+4      	; 0xffa <dtoa_prf+0x64>
     ff6:	83 e0       	ldi	r24, 0x03	; 3
     ff8:	01 c0       	rjmp	.+2      	; 0xffc <dtoa_prf+0x66>
     ffa:	84 e0       	ldi	r24, 0x04	; 4
     ffc:	81 17       	cp	r24, r17
     ffe:	18 f4       	brcc	.+6      	; 0x1006 <dtoa_prf+0x70>
    1000:	21 2f       	mov	r18, r17
    1002:	28 1b       	sub	r18, r24
    1004:	01 c0       	rjmp	.+2      	; 0x1008 <dtoa_prf+0x72>
    1006:	20 e0       	ldi	r18, 0x00	; 0
    1008:	51 11       	cpse	r21, r1
    100a:	0b c0       	rjmp	.+22     	; 0x1022 <dtoa_prf+0x8c>
    100c:	f6 01       	movw	r30, r12
    100e:	82 2f       	mov	r24, r18
    1010:	30 e2       	ldi	r19, 0x20	; 32
    1012:	88 23       	and	r24, r24
    1014:	19 f0       	breq	.+6      	; 0x101c <dtoa_prf+0x86>
    1016:	31 93       	st	Z+, r19
    1018:	81 50       	subi	r24, 0x01	; 1
    101a:	fb cf       	rjmp	.-10     	; 0x1012 <dtoa_prf+0x7c>
    101c:	c2 0e       	add	r12, r18
    101e:	d1 1c       	adc	r13, r1
    1020:	20 e0       	ldi	r18, 0x00	; 0
    1022:	99 23       	and	r25, r25
    1024:	29 f0       	breq	.+10     	; 0x1030 <dtoa_prf+0x9a>
    1026:	d6 01       	movw	r26, r12
    1028:	9c 93       	st	X, r25
    102a:	f6 01       	movw	r30, r12
    102c:	31 96       	adiw	r30, 0x01	; 1
    102e:	6f 01       	movw	r12, r30
    1030:	c6 01       	movw	r24, r12
    1032:	03 96       	adiw	r24, 0x03	; 3
    1034:	e2 fe       	sbrs	r14, 2
    1036:	0a c0       	rjmp	.+20     	; 0x104c <dtoa_prf+0xb6>
    1038:	3e e4       	ldi	r19, 0x4E	; 78
    103a:	d6 01       	movw	r26, r12
    103c:	3c 93       	st	X, r19
    103e:	41 e4       	ldi	r20, 0x41	; 65
    1040:	11 96       	adiw	r26, 0x01	; 1
    1042:	4c 93       	st	X, r20
    1044:	11 97       	sbiw	r26, 0x01	; 1
    1046:	12 96       	adiw	r26, 0x02	; 2
    1048:	3c 93       	st	X, r19
    104a:	06 c0       	rjmp	.+12     	; 0x1058 <dtoa_prf+0xc2>
    104c:	3e e6       	ldi	r19, 0x6E	; 110
    104e:	f6 01       	movw	r30, r12
    1050:	30 83       	st	Z, r19
    1052:	41 e6       	ldi	r20, 0x61	; 97
    1054:	41 83       	std	Z+1, r20	; 0x01
    1056:	32 83       	std	Z+2, r19	; 0x02
    1058:	fc 01       	movw	r30, r24
    105a:	32 2f       	mov	r19, r18
    105c:	40 e2       	ldi	r20, 0x20	; 32
    105e:	33 23       	and	r19, r19
    1060:	09 f4       	brne	.+2      	; 0x1064 <dtoa_prf+0xce>
    1062:	42 c0       	rjmp	.+132    	; 0x10e8 <dtoa_prf+0x152>
    1064:	41 93       	st	Z+, r20
    1066:	31 50       	subi	r19, 0x01	; 1
    1068:	fa cf       	rjmp	.-12     	; 0x105e <dtoa_prf+0xc8>
    106a:	42 ff       	sbrs	r20, 2
    106c:	44 c0       	rjmp	.+136    	; 0x10f6 <dtoa_prf+0x160>
    106e:	91 11       	cpse	r25, r1
    1070:	02 c0       	rjmp	.+4      	; 0x1076 <dtoa_prf+0xe0>
    1072:	83 e0       	ldi	r24, 0x03	; 3
    1074:	01 c0       	rjmp	.+2      	; 0x1078 <dtoa_prf+0xe2>
    1076:	84 e0       	ldi	r24, 0x04	; 4
    1078:	81 17       	cp	r24, r17
    107a:	18 f4       	brcc	.+6      	; 0x1082 <dtoa_prf+0xec>
    107c:	21 2f       	mov	r18, r17
    107e:	28 1b       	sub	r18, r24
    1080:	01 c0       	rjmp	.+2      	; 0x1084 <dtoa_prf+0xee>
    1082:	20 e0       	ldi	r18, 0x00	; 0
    1084:	51 11       	cpse	r21, r1
    1086:	0b c0       	rjmp	.+22     	; 0x109e <dtoa_prf+0x108>
    1088:	f6 01       	movw	r30, r12
    108a:	82 2f       	mov	r24, r18
    108c:	30 e2       	ldi	r19, 0x20	; 32
    108e:	88 23       	and	r24, r24
    1090:	19 f0       	breq	.+6      	; 0x1098 <dtoa_prf+0x102>
    1092:	31 93       	st	Z+, r19
    1094:	81 50       	subi	r24, 0x01	; 1
    1096:	fb cf       	rjmp	.-10     	; 0x108e <dtoa_prf+0xf8>
    1098:	c2 0e       	add	r12, r18
    109a:	d1 1c       	adc	r13, r1
    109c:	20 e0       	ldi	r18, 0x00	; 0
    109e:	99 23       	and	r25, r25
    10a0:	29 f0       	breq	.+10     	; 0x10ac <dtoa_prf+0x116>
    10a2:	d6 01       	movw	r26, r12
    10a4:	9c 93       	st	X, r25
    10a6:	f6 01       	movw	r30, r12
    10a8:	31 96       	adiw	r30, 0x01	; 1
    10aa:	6f 01       	movw	r12, r30
    10ac:	c6 01       	movw	r24, r12
    10ae:	03 96       	adiw	r24, 0x03	; 3
    10b0:	e2 fe       	sbrs	r14, 2
    10b2:	0b c0       	rjmp	.+22     	; 0x10ca <dtoa_prf+0x134>
    10b4:	39 e4       	ldi	r19, 0x49	; 73
    10b6:	d6 01       	movw	r26, r12
    10b8:	3c 93       	st	X, r19
    10ba:	3e e4       	ldi	r19, 0x4E	; 78
    10bc:	11 96       	adiw	r26, 0x01	; 1
    10be:	3c 93       	st	X, r19
    10c0:	11 97       	sbiw	r26, 0x01	; 1
    10c2:	36 e4       	ldi	r19, 0x46	; 70
    10c4:	12 96       	adiw	r26, 0x02	; 2
    10c6:	3c 93       	st	X, r19
    10c8:	07 c0       	rjmp	.+14     	; 0x10d8 <dtoa_prf+0x142>
    10ca:	39 e6       	ldi	r19, 0x69	; 105
    10cc:	f6 01       	movw	r30, r12
    10ce:	30 83       	st	Z, r19
    10d0:	3e e6       	ldi	r19, 0x6E	; 110
    10d2:	31 83       	std	Z+1, r19	; 0x01
    10d4:	36 e6       	ldi	r19, 0x66	; 102
    10d6:	32 83       	std	Z+2, r19	; 0x02
    10d8:	fc 01       	movw	r30, r24
    10da:	32 2f       	mov	r19, r18
    10dc:	40 e2       	ldi	r20, 0x20	; 32
    10de:	33 23       	and	r19, r19
    10e0:	19 f0       	breq	.+6      	; 0x10e8 <dtoa_prf+0x152>
    10e2:	41 93       	st	Z+, r20
    10e4:	31 50       	subi	r19, 0x01	; 1
    10e6:	fb cf       	rjmp	.-10     	; 0x10de <dtoa_prf+0x148>
    10e8:	fc 01       	movw	r30, r24
    10ea:	e2 0f       	add	r30, r18
    10ec:	f1 1d       	adc	r31, r1
    10ee:	10 82       	st	Z, r1
    10f0:	8e ef       	ldi	r24, 0xFE	; 254
    10f2:	9f ef       	ldi	r25, 0xFF	; 255
    10f4:	a6 c0       	rjmp	.+332    	; 0x1242 <dtoa_prf+0x2ac>
    10f6:	21 e0       	ldi	r18, 0x01	; 1
    10f8:	30 e0       	ldi	r19, 0x00	; 0
    10fa:	91 11       	cpse	r25, r1
    10fc:	02 c0       	rjmp	.+4      	; 0x1102 <dtoa_prf+0x16c>
    10fe:	20 e0       	ldi	r18, 0x00	; 0
    1100:	30 e0       	ldi	r19, 0x00	; 0
    1102:	16 16       	cp	r1, r22
    1104:	17 06       	cpc	r1, r23
    1106:	1c f4       	brge	.+6      	; 0x110e <dtoa_prf+0x178>
    1108:	fb 01       	movw	r30, r22
    110a:	31 96       	adiw	r30, 0x01	; 1
    110c:	02 c0       	rjmp	.+4      	; 0x1112 <dtoa_prf+0x17c>
    110e:	e1 e0       	ldi	r30, 0x01	; 1
    1110:	f0 e0       	ldi	r31, 0x00	; 0
    1112:	2e 0f       	add	r18, r30
    1114:	3f 1f       	adc	r19, r31
    1116:	bb 20       	and	r11, r11
    1118:	21 f0       	breq	.+8      	; 0x1122 <dtoa_prf+0x18c>
    111a:	eb 2d       	mov	r30, r11
    111c:	f0 e0       	ldi	r31, 0x00	; 0
    111e:	31 96       	adiw	r30, 0x01	; 1
    1120:	02 c0       	rjmp	.+4      	; 0x1126 <dtoa_prf+0x190>
    1122:	e0 e0       	ldi	r30, 0x00	; 0
    1124:	f0 e0       	ldi	r31, 0x00	; 0
    1126:	2e 0f       	add	r18, r30
    1128:	3f 1f       	adc	r19, r31
    112a:	e1 2f       	mov	r30, r17
    112c:	f0 e0       	ldi	r31, 0x00	; 0
    112e:	2e 17       	cp	r18, r30
    1130:	3f 07       	cpc	r19, r31
    1132:	1c f4       	brge	.+6      	; 0x113a <dtoa_prf+0x1a4>
    1134:	12 1b       	sub	r17, r18
    1136:	21 2f       	mov	r18, r17
    1138:	01 c0       	rjmp	.+2      	; 0x113c <dtoa_prf+0x1a6>
    113a:	20 e0       	ldi	r18, 0x00	; 0
    113c:	8e 2d       	mov	r24, r14
    113e:	88 71       	andi	r24, 0x18	; 24
    1140:	59 f4       	brne	.+22     	; 0x1158 <dtoa_prf+0x1c2>
    1142:	f6 01       	movw	r30, r12
    1144:	82 2f       	mov	r24, r18
    1146:	30 e2       	ldi	r19, 0x20	; 32
    1148:	88 23       	and	r24, r24
    114a:	19 f0       	breq	.+6      	; 0x1152 <dtoa_prf+0x1bc>
    114c:	31 93       	st	Z+, r19
    114e:	81 50       	subi	r24, 0x01	; 1
    1150:	fb cf       	rjmp	.-10     	; 0x1148 <dtoa_prf+0x1b2>
    1152:	c2 0e       	add	r12, r18
    1154:	d1 1c       	adc	r13, r1
    1156:	20 e0       	ldi	r18, 0x00	; 0
    1158:	99 23       	and	r25, r25
    115a:	29 f0       	breq	.+10     	; 0x1166 <dtoa_prf+0x1d0>
    115c:	d6 01       	movw	r26, r12
    115e:	9c 93       	st	X, r25
    1160:	f6 01       	movw	r30, r12
    1162:	31 96       	adiw	r30, 0x01	; 1
    1164:	6f 01       	movw	r12, r30
    1166:	51 11       	cpse	r21, r1
    1168:	0b c0       	rjmp	.+22     	; 0x1180 <dtoa_prf+0x1ea>
    116a:	f6 01       	movw	r30, r12
    116c:	82 2f       	mov	r24, r18
    116e:	90 e3       	ldi	r25, 0x30	; 48
    1170:	88 23       	and	r24, r24
    1172:	19 f0       	breq	.+6      	; 0x117a <dtoa_prf+0x1e4>
    1174:	91 93       	st	Z+, r25
    1176:	81 50       	subi	r24, 0x01	; 1
    1178:	fb cf       	rjmp	.-10     	; 0x1170 <dtoa_prf+0x1da>
    117a:	c2 0e       	add	r12, r18
    117c:	d1 1c       	adc	r13, r1
    117e:	20 e0       	ldi	r18, 0x00	; 0
    1180:	0f 2d       	mov	r16, r15
    1182:	06 0f       	add	r16, r22
    1184:	9a 81       	ldd	r25, Y+2	; 0x02
    1186:	34 2f       	mov	r19, r20
    1188:	30 71       	andi	r19, 0x10	; 16
    118a:	44 ff       	sbrs	r20, 4
    118c:	03 c0       	rjmp	.+6      	; 0x1194 <dtoa_prf+0x1fe>
    118e:	91 33       	cpi	r25, 0x31	; 49
    1190:	09 f4       	brne	.+2      	; 0x1194 <dtoa_prf+0x1fe>
    1192:	01 50       	subi	r16, 0x01	; 1
    1194:	10 16       	cp	r1, r16
    1196:	24 f4       	brge	.+8      	; 0x11a0 <dtoa_prf+0x20a>
    1198:	09 30       	cpi	r16, 0x09	; 9
    119a:	18 f0       	brcs	.+6      	; 0x11a2 <dtoa_prf+0x20c>
    119c:	08 e0       	ldi	r16, 0x08	; 8
    119e:	01 c0       	rjmp	.+2      	; 0x11a2 <dtoa_prf+0x20c>
    11a0:	01 e0       	ldi	r16, 0x01	; 1
    11a2:	ab 01       	movw	r20, r22
    11a4:	77 ff       	sbrs	r23, 7
    11a6:	02 c0       	rjmp	.+4      	; 0x11ac <dtoa_prf+0x216>
    11a8:	40 e0       	ldi	r20, 0x00	; 0
    11aa:	50 e0       	ldi	r21, 0x00	; 0
    11ac:	fb 01       	movw	r30, r22
    11ae:	e4 1b       	sub	r30, r20
    11b0:	f5 0b       	sbc	r31, r21
    11b2:	a1 e0       	ldi	r26, 0x01	; 1
    11b4:	b0 e0       	ldi	r27, 0x00	; 0
    11b6:	ac 0f       	add	r26, r28
    11b8:	bd 1f       	adc	r27, r29
    11ba:	ea 0f       	add	r30, r26
    11bc:	fb 1f       	adc	r31, r27
    11be:	8e e2       	ldi	r24, 0x2E	; 46
    11c0:	a8 2e       	mov	r10, r24
    11c2:	4b 01       	movw	r8, r22
    11c4:	80 1a       	sub	r8, r16
    11c6:	91 08       	sbc	r9, r1
    11c8:	0b 2d       	mov	r16, r11
    11ca:	10 e0       	ldi	r17, 0x00	; 0
    11cc:	11 95       	neg	r17
    11ce:	01 95       	neg	r16
    11d0:	11 09       	sbc	r17, r1
    11d2:	4f 3f       	cpi	r20, 0xFF	; 255
    11d4:	bf ef       	ldi	r27, 0xFF	; 255
    11d6:	5b 07       	cpc	r21, r27
    11d8:	21 f4       	brne	.+8      	; 0x11e2 <dtoa_prf+0x24c>
    11da:	d6 01       	movw	r26, r12
    11dc:	ac 92       	st	X, r10
    11de:	11 96       	adiw	r26, 0x01	; 1
    11e0:	6d 01       	movw	r12, r26
    11e2:	64 17       	cp	r22, r20
    11e4:	75 07       	cpc	r23, r21
    11e6:	2c f0       	brlt	.+10     	; 0x11f2 <dtoa_prf+0x25c>
    11e8:	84 16       	cp	r8, r20
    11ea:	95 06       	cpc	r9, r21
    11ec:	14 f4       	brge	.+4      	; 0x11f2 <dtoa_prf+0x25c>
    11ee:	81 81       	ldd	r24, Z+1	; 0x01
    11f0:	01 c0       	rjmp	.+2      	; 0x11f4 <dtoa_prf+0x25e>
    11f2:	80 e3       	ldi	r24, 0x30	; 48
    11f4:	41 50       	subi	r20, 0x01	; 1
    11f6:	51 09       	sbc	r21, r1
    11f8:	31 96       	adiw	r30, 0x01	; 1
    11fa:	d6 01       	movw	r26, r12
    11fc:	11 96       	adiw	r26, 0x01	; 1
    11fe:	7d 01       	movw	r14, r26
    1200:	40 17       	cp	r20, r16
    1202:	51 07       	cpc	r21, r17
    1204:	24 f0       	brlt	.+8      	; 0x120e <dtoa_prf+0x278>
    1206:	d6 01       	movw	r26, r12
    1208:	8c 93       	st	X, r24
    120a:	67 01       	movw	r12, r14
    120c:	e2 cf       	rjmp	.-60     	; 0x11d2 <dtoa_prf+0x23c>
    120e:	64 17       	cp	r22, r20
    1210:	75 07       	cpc	r23, r21
    1212:	39 f4       	brne	.+14     	; 0x1222 <dtoa_prf+0x28c>
    1214:	96 33       	cpi	r25, 0x36	; 54
    1216:	20 f4       	brcc	.+8      	; 0x1220 <dtoa_prf+0x28a>
    1218:	95 33       	cpi	r25, 0x35	; 53
    121a:	19 f4       	brne	.+6      	; 0x1222 <dtoa_prf+0x28c>
    121c:	31 11       	cpse	r19, r1
    121e:	01 c0       	rjmp	.+2      	; 0x1222 <dtoa_prf+0x28c>
    1220:	81 e3       	ldi	r24, 0x31	; 49
    1222:	f6 01       	movw	r30, r12
    1224:	80 83       	st	Z, r24
    1226:	f7 01       	movw	r30, r14
    1228:	82 2f       	mov	r24, r18
    122a:	90 e2       	ldi	r25, 0x20	; 32
    122c:	88 23       	and	r24, r24
    122e:	19 f0       	breq	.+6      	; 0x1236 <dtoa_prf+0x2a0>
    1230:	91 93       	st	Z+, r25
    1232:	81 50       	subi	r24, 0x01	; 1
    1234:	fb cf       	rjmp	.-10     	; 0x122c <dtoa_prf+0x296>
    1236:	f7 01       	movw	r30, r14
    1238:	e2 0f       	add	r30, r18
    123a:	f1 1d       	adc	r31, r1
    123c:	10 82       	st	Z, r1
    123e:	80 e0       	ldi	r24, 0x00	; 0
    1240:	90 e0       	ldi	r25, 0x00	; 0
    1242:	29 96       	adiw	r28, 0x09	; 9
    1244:	ec e0       	ldi	r30, 0x0C	; 12
    1246:	0c 94 51 0a 	jmp	0x14a2	; 0x14a2 <__epilogue_restores__+0xc>

0000124a <__ftoa_engine>:
    124a:	28 30       	cpi	r18, 0x08	; 8
    124c:	08 f0       	brcs	.+2      	; 0x1250 <__ftoa_engine+0x6>
    124e:	27 e0       	ldi	r18, 0x07	; 7
    1250:	33 27       	eor	r19, r19
    1252:	da 01       	movw	r26, r20
    1254:	99 0f       	add	r25, r25
    1256:	31 1d       	adc	r19, r1
    1258:	87 fd       	sbrc	r24, 7
    125a:	91 60       	ori	r25, 0x01	; 1
    125c:	00 96       	adiw	r24, 0x00	; 0
    125e:	61 05       	cpc	r22, r1
    1260:	71 05       	cpc	r23, r1
    1262:	39 f4       	brne	.+14     	; 0x1272 <__ftoa_engine+0x28>
    1264:	32 60       	ori	r19, 0x02	; 2
    1266:	2e 5f       	subi	r18, 0xFE	; 254
    1268:	3d 93       	st	X+, r19
    126a:	30 e3       	ldi	r19, 0x30	; 48
    126c:	2a 95       	dec	r18
    126e:	e1 f7       	brne	.-8      	; 0x1268 <__ftoa_engine+0x1e>
    1270:	08 95       	ret
    1272:	9f 3f       	cpi	r25, 0xFF	; 255
    1274:	30 f0       	brcs	.+12     	; 0x1282 <__ftoa_engine+0x38>
    1276:	80 38       	cpi	r24, 0x80	; 128
    1278:	71 05       	cpc	r23, r1
    127a:	61 05       	cpc	r22, r1
    127c:	09 f0       	breq	.+2      	; 0x1280 <__ftoa_engine+0x36>
    127e:	3c 5f       	subi	r19, 0xFC	; 252
    1280:	3c 5f       	subi	r19, 0xFC	; 252
    1282:	3d 93       	st	X+, r19
    1284:	91 30       	cpi	r25, 0x01	; 1
    1286:	08 f0       	brcs	.+2      	; 0x128a <__ftoa_engine+0x40>
    1288:	80 68       	ori	r24, 0x80	; 128
    128a:	91 1d       	adc	r25, r1
    128c:	df 93       	push	r29
    128e:	cf 93       	push	r28
    1290:	1f 93       	push	r17
    1292:	0f 93       	push	r16
    1294:	ff 92       	push	r15
    1296:	ef 92       	push	r14
    1298:	19 2f       	mov	r17, r25
    129a:	98 7f       	andi	r25, 0xF8	; 248
    129c:	96 95       	lsr	r25
    129e:	e9 2f       	mov	r30, r25
    12a0:	96 95       	lsr	r25
    12a2:	96 95       	lsr	r25
    12a4:	e9 0f       	add	r30, r25
    12a6:	ff 27       	eor	r31, r31
    12a8:	e2 55       	subi	r30, 0x52	; 82
    12aa:	ff 4f       	sbci	r31, 0xFF	; 255
    12ac:	99 27       	eor	r25, r25
    12ae:	33 27       	eor	r19, r19
    12b0:	ee 24       	eor	r14, r14
    12b2:	ff 24       	eor	r15, r15
    12b4:	a7 01       	movw	r20, r14
    12b6:	e7 01       	movw	r28, r14
    12b8:	05 90       	lpm	r0, Z+
    12ba:	08 94       	sec
    12bc:	07 94       	ror	r0
    12be:	28 f4       	brcc	.+10     	; 0x12ca <__ftoa_engine+0x80>
    12c0:	36 0f       	add	r19, r22
    12c2:	e7 1e       	adc	r14, r23
    12c4:	f8 1e       	adc	r15, r24
    12c6:	49 1f       	adc	r20, r25
    12c8:	51 1d       	adc	r21, r1
    12ca:	66 0f       	add	r22, r22
    12cc:	77 1f       	adc	r23, r23
    12ce:	88 1f       	adc	r24, r24
    12d0:	99 1f       	adc	r25, r25
    12d2:	06 94       	lsr	r0
    12d4:	a1 f7       	brne	.-24     	; 0x12be <__ftoa_engine+0x74>
    12d6:	05 90       	lpm	r0, Z+
    12d8:	07 94       	ror	r0
    12da:	28 f4       	brcc	.+10     	; 0x12e6 <__ftoa_engine+0x9c>
    12dc:	e7 0e       	add	r14, r23
    12de:	f8 1e       	adc	r15, r24
    12e0:	49 1f       	adc	r20, r25
    12e2:	56 1f       	adc	r21, r22
    12e4:	c1 1d       	adc	r28, r1
    12e6:	77 0f       	add	r23, r23
    12e8:	88 1f       	adc	r24, r24
    12ea:	99 1f       	adc	r25, r25
    12ec:	66 1f       	adc	r22, r22
    12ee:	06 94       	lsr	r0
    12f0:	a1 f7       	brne	.-24     	; 0x12da <__ftoa_engine+0x90>
    12f2:	05 90       	lpm	r0, Z+
    12f4:	07 94       	ror	r0
    12f6:	28 f4       	brcc	.+10     	; 0x1302 <__ftoa_engine+0xb8>
    12f8:	f8 0e       	add	r15, r24
    12fa:	49 1f       	adc	r20, r25
    12fc:	56 1f       	adc	r21, r22
    12fe:	c7 1f       	adc	r28, r23
    1300:	d1 1d       	adc	r29, r1
    1302:	88 0f       	add	r24, r24
    1304:	99 1f       	adc	r25, r25
    1306:	66 1f       	adc	r22, r22
    1308:	77 1f       	adc	r23, r23
    130a:	06 94       	lsr	r0
    130c:	a1 f7       	brne	.-24     	; 0x12f6 <__ftoa_engine+0xac>
    130e:	05 90       	lpm	r0, Z+
    1310:	07 94       	ror	r0
    1312:	20 f4       	brcc	.+8      	; 0x131c <__ftoa_engine+0xd2>
    1314:	49 0f       	add	r20, r25
    1316:	56 1f       	adc	r21, r22
    1318:	c7 1f       	adc	r28, r23
    131a:	d8 1f       	adc	r29, r24
    131c:	99 0f       	add	r25, r25
    131e:	66 1f       	adc	r22, r22
    1320:	77 1f       	adc	r23, r23
    1322:	88 1f       	adc	r24, r24
    1324:	06 94       	lsr	r0
    1326:	a9 f7       	brne	.-22     	; 0x1312 <__ftoa_engine+0xc8>
    1328:	84 91       	lpm	r24, Z
    132a:	10 95       	com	r17
    132c:	17 70       	andi	r17, 0x07	; 7
    132e:	41 f0       	breq	.+16     	; 0x1340 <__ftoa_engine+0xf6>
    1330:	d6 95       	lsr	r29
    1332:	c7 95       	ror	r28
    1334:	57 95       	ror	r21
    1336:	47 95       	ror	r20
    1338:	f7 94       	ror	r15
    133a:	e7 94       	ror	r14
    133c:	1a 95       	dec	r17
    133e:	c1 f7       	brne	.-16     	; 0x1330 <__ftoa_engine+0xe6>
    1340:	e4 e5       	ldi	r30, 0x54	; 84
    1342:	f0 e0       	ldi	r31, 0x00	; 0
    1344:	68 94       	set
    1346:	15 90       	lpm	r1, Z+
    1348:	15 91       	lpm	r17, Z+
    134a:	35 91       	lpm	r19, Z+
    134c:	65 91       	lpm	r22, Z+
    134e:	95 91       	lpm	r25, Z+
    1350:	05 90       	lpm	r0, Z+
    1352:	7f e2       	ldi	r23, 0x2F	; 47
    1354:	73 95       	inc	r23
    1356:	e1 18       	sub	r14, r1
    1358:	f1 0a       	sbc	r15, r17
    135a:	43 0b       	sbc	r20, r19
    135c:	56 0b       	sbc	r21, r22
    135e:	c9 0b       	sbc	r28, r25
    1360:	d0 09       	sbc	r29, r0
    1362:	c0 f7       	brcc	.-16     	; 0x1354 <__ftoa_engine+0x10a>
    1364:	e1 0c       	add	r14, r1
    1366:	f1 1e       	adc	r15, r17
    1368:	43 1f       	adc	r20, r19
    136a:	56 1f       	adc	r21, r22
    136c:	c9 1f       	adc	r28, r25
    136e:	d0 1d       	adc	r29, r0
    1370:	7e f4       	brtc	.+30     	; 0x1390 <__ftoa_engine+0x146>
    1372:	70 33       	cpi	r23, 0x30	; 48
    1374:	11 f4       	brne	.+4      	; 0x137a <__ftoa_engine+0x130>
    1376:	8a 95       	dec	r24
    1378:	e6 cf       	rjmp	.-52     	; 0x1346 <__ftoa_engine+0xfc>
    137a:	e8 94       	clt
    137c:	01 50       	subi	r16, 0x01	; 1
    137e:	30 f0       	brcs	.+12     	; 0x138c <__ftoa_engine+0x142>
    1380:	08 0f       	add	r16, r24
    1382:	0a f4       	brpl	.+2      	; 0x1386 <__ftoa_engine+0x13c>
    1384:	00 27       	eor	r16, r16
    1386:	02 17       	cp	r16, r18
    1388:	08 f4       	brcc	.+2      	; 0x138c <__ftoa_engine+0x142>
    138a:	20 2f       	mov	r18, r16
    138c:	23 95       	inc	r18
    138e:	02 2f       	mov	r16, r18
    1390:	7a 33       	cpi	r23, 0x3A	; 58
    1392:	28 f0       	brcs	.+10     	; 0x139e <__ftoa_engine+0x154>
    1394:	79 e3       	ldi	r23, 0x39	; 57
    1396:	7d 93       	st	X+, r23
    1398:	2a 95       	dec	r18
    139a:	e9 f7       	brne	.-6      	; 0x1396 <__ftoa_engine+0x14c>
    139c:	10 c0       	rjmp	.+32     	; 0x13be <__ftoa_engine+0x174>
    139e:	7d 93       	st	X+, r23
    13a0:	2a 95       	dec	r18
    13a2:	89 f6       	brne	.-94     	; 0x1346 <__ftoa_engine+0xfc>
    13a4:	06 94       	lsr	r0
    13a6:	97 95       	ror	r25
    13a8:	67 95       	ror	r22
    13aa:	37 95       	ror	r19
    13ac:	17 95       	ror	r17
    13ae:	17 94       	ror	r1
    13b0:	e1 18       	sub	r14, r1
    13b2:	f1 0a       	sbc	r15, r17
    13b4:	43 0b       	sbc	r20, r19
    13b6:	56 0b       	sbc	r21, r22
    13b8:	c9 0b       	sbc	r28, r25
    13ba:	d0 09       	sbc	r29, r0
    13bc:	98 f0       	brcs	.+38     	; 0x13e4 <__ftoa_engine+0x19a>
    13be:	23 95       	inc	r18
    13c0:	7e 91       	ld	r23, -X
    13c2:	73 95       	inc	r23
    13c4:	7a 33       	cpi	r23, 0x3A	; 58
    13c6:	08 f0       	brcs	.+2      	; 0x13ca <__ftoa_engine+0x180>
    13c8:	70 e3       	ldi	r23, 0x30	; 48
    13ca:	7c 93       	st	X, r23
    13cc:	20 13       	cpse	r18, r16
    13ce:	b8 f7       	brcc	.-18     	; 0x13be <__ftoa_engine+0x174>
    13d0:	7e 91       	ld	r23, -X
    13d2:	70 61       	ori	r23, 0x10	; 16
    13d4:	7d 93       	st	X+, r23
    13d6:	30 f0       	brcs	.+12     	; 0x13e4 <__ftoa_engine+0x19a>
    13d8:	83 95       	inc	r24
    13da:	71 e3       	ldi	r23, 0x31	; 49
    13dc:	7d 93       	st	X+, r23
    13de:	70 e3       	ldi	r23, 0x30	; 48
    13e0:	2a 95       	dec	r18
    13e2:	e1 f7       	brne	.-8      	; 0x13dc <__ftoa_engine+0x192>
    13e4:	11 24       	eor	r1, r1
    13e6:	ef 90       	pop	r14
    13e8:	ff 90       	pop	r15
    13ea:	0f 91       	pop	r16
    13ec:	1f 91       	pop	r17
    13ee:	cf 91       	pop	r28
    13f0:	df 91       	pop	r29
    13f2:	99 27       	eor	r25, r25
    13f4:	87 fd       	sbrc	r24, 7
    13f6:	90 95       	com	r25
    13f8:	08 95       	ret

000013fa <__divmodsi4>:
    13fa:	05 2e       	mov	r0, r21
    13fc:	97 fb       	bst	r25, 7
    13fe:	1e f4       	brtc	.+6      	; 0x1406 <__divmodsi4+0xc>
    1400:	00 94       	com	r0
    1402:	0e 94 14 0a 	call	0x1428	; 0x1428 <__negsi2>
    1406:	57 fd       	sbrc	r21, 7
    1408:	07 d0       	rcall	.+14     	; 0x1418 <__divmodsi4_neg2>
    140a:	0e 94 66 0a 	call	0x14cc	; 0x14cc <__udivmodsi4>
    140e:	07 fc       	sbrc	r0, 7
    1410:	03 d0       	rcall	.+6      	; 0x1418 <__divmodsi4_neg2>
    1412:	4e f4       	brtc	.+18     	; 0x1426 <__divmodsi4_exit>
    1414:	0c 94 14 0a 	jmp	0x1428	; 0x1428 <__negsi2>

00001418 <__divmodsi4_neg2>:
    1418:	50 95       	com	r21
    141a:	40 95       	com	r20
    141c:	30 95       	com	r19
    141e:	21 95       	neg	r18
    1420:	3f 4f       	sbci	r19, 0xFF	; 255
    1422:	4f 4f       	sbci	r20, 0xFF	; 255
    1424:	5f 4f       	sbci	r21, 0xFF	; 255

00001426 <__divmodsi4_exit>:
    1426:	08 95       	ret

00001428 <__negsi2>:
    1428:	90 95       	com	r25
    142a:	80 95       	com	r24
    142c:	70 95       	com	r23
    142e:	61 95       	neg	r22
    1430:	7f 4f       	sbci	r23, 0xFF	; 255
    1432:	8f 4f       	sbci	r24, 0xFF	; 255
    1434:	9f 4f       	sbci	r25, 0xFF	; 255
    1436:	08 95       	ret

00001438 <__muluhisi3>:
    1438:	0e 94 88 0a 	call	0x1510	; 0x1510 <__umulhisi3>
    143c:	a5 9f       	mul	r26, r21
    143e:	90 0d       	add	r25, r0
    1440:	b4 9f       	mul	r27, r20
    1442:	90 0d       	add	r25, r0
    1444:	a4 9f       	mul	r26, r20
    1446:	80 0d       	add	r24, r0
    1448:	91 1d       	adc	r25, r1
    144a:	11 24       	eor	r1, r1
    144c:	08 95       	ret

0000144e <__mulshisi3>:
    144e:	b7 ff       	sbrs	r27, 7
    1450:	0c 94 1c 0a 	jmp	0x1438	; 0x1438 <__muluhisi3>

00001454 <__mulohisi3>:
    1454:	0e 94 1c 0a 	call	0x1438	; 0x1438 <__muluhisi3>
    1458:	82 1b       	sub	r24, r18
    145a:	93 0b       	sbc	r25, r19
    145c:	08 95       	ret

0000145e <__prologue_saves__>:
    145e:	2f 92       	push	r2
    1460:	3f 92       	push	r3
    1462:	4f 92       	push	r4
    1464:	5f 92       	push	r5
    1466:	6f 92       	push	r6
    1468:	7f 92       	push	r7
    146a:	8f 92       	push	r8
    146c:	9f 92       	push	r9
    146e:	af 92       	push	r10
    1470:	bf 92       	push	r11
    1472:	cf 92       	push	r12
    1474:	df 92       	push	r13
    1476:	ef 92       	push	r14
    1478:	ff 92       	push	r15
    147a:	0f 93       	push	r16
    147c:	1f 93       	push	r17
    147e:	cf 93       	push	r28
    1480:	df 93       	push	r29
    1482:	cd b7       	in	r28, 0x3d	; 61
    1484:	de b7       	in	r29, 0x3e	; 62
    1486:	ca 1b       	sub	r28, r26
    1488:	db 0b       	sbc	r29, r27
    148a:	0f b6       	in	r0, 0x3f	; 63
    148c:	f8 94       	cli
    148e:	de bf       	out	0x3e, r29	; 62
    1490:	0f be       	out	0x3f, r0	; 63
    1492:	cd bf       	out	0x3d, r28	; 61
    1494:	09 94       	ijmp

00001496 <__epilogue_restores__>:
    1496:	2a 88       	ldd	r2, Y+18	; 0x12
    1498:	39 88       	ldd	r3, Y+17	; 0x11
    149a:	48 88       	ldd	r4, Y+16	; 0x10
    149c:	5f 84       	ldd	r5, Y+15	; 0x0f
    149e:	6e 84       	ldd	r6, Y+14	; 0x0e
    14a0:	7d 84       	ldd	r7, Y+13	; 0x0d
    14a2:	8c 84       	ldd	r8, Y+12	; 0x0c
    14a4:	9b 84       	ldd	r9, Y+11	; 0x0b
    14a6:	aa 84       	ldd	r10, Y+10	; 0x0a
    14a8:	b9 84       	ldd	r11, Y+9	; 0x09
    14aa:	c8 84       	ldd	r12, Y+8	; 0x08
    14ac:	df 80       	ldd	r13, Y+7	; 0x07
    14ae:	ee 80       	ldd	r14, Y+6	; 0x06
    14b0:	fd 80       	ldd	r15, Y+5	; 0x05
    14b2:	0c 81       	ldd	r16, Y+4	; 0x04
    14b4:	1b 81       	ldd	r17, Y+3	; 0x03
    14b6:	aa 81       	ldd	r26, Y+2	; 0x02
    14b8:	b9 81       	ldd	r27, Y+1	; 0x01
    14ba:	ce 0f       	add	r28, r30
    14bc:	d1 1d       	adc	r29, r1
    14be:	0f b6       	in	r0, 0x3f	; 63
    14c0:	f8 94       	cli
    14c2:	de bf       	out	0x3e, r29	; 62
    14c4:	0f be       	out	0x3f, r0	; 63
    14c6:	cd bf       	out	0x3d, r28	; 61
    14c8:	ed 01       	movw	r28, r26
    14ca:	08 95       	ret

000014cc <__udivmodsi4>:
    14cc:	a1 e2       	ldi	r26, 0x21	; 33
    14ce:	1a 2e       	mov	r1, r26
    14d0:	aa 1b       	sub	r26, r26
    14d2:	bb 1b       	sub	r27, r27
    14d4:	fd 01       	movw	r30, r26
    14d6:	0d c0       	rjmp	.+26     	; 0x14f2 <__udivmodsi4_ep>

000014d8 <__udivmodsi4_loop>:
    14d8:	aa 1f       	adc	r26, r26
    14da:	bb 1f       	adc	r27, r27
    14dc:	ee 1f       	adc	r30, r30
    14de:	ff 1f       	adc	r31, r31
    14e0:	a2 17       	cp	r26, r18
    14e2:	b3 07       	cpc	r27, r19
    14e4:	e4 07       	cpc	r30, r20
    14e6:	f5 07       	cpc	r31, r21
    14e8:	20 f0       	brcs	.+8      	; 0x14f2 <__udivmodsi4_ep>
    14ea:	a2 1b       	sub	r26, r18
    14ec:	b3 0b       	sbc	r27, r19
    14ee:	e4 0b       	sbc	r30, r20
    14f0:	f5 0b       	sbc	r31, r21

000014f2 <__udivmodsi4_ep>:
    14f2:	66 1f       	adc	r22, r22
    14f4:	77 1f       	adc	r23, r23
    14f6:	88 1f       	adc	r24, r24
    14f8:	99 1f       	adc	r25, r25
    14fa:	1a 94       	dec	r1
    14fc:	69 f7       	brne	.-38     	; 0x14d8 <__udivmodsi4_loop>
    14fe:	60 95       	com	r22
    1500:	70 95       	com	r23
    1502:	80 95       	com	r24
    1504:	90 95       	com	r25
    1506:	9b 01       	movw	r18, r22
    1508:	ac 01       	movw	r20, r24
    150a:	bd 01       	movw	r22, r26
    150c:	cf 01       	movw	r24, r30
    150e:	08 95       	ret

00001510 <__umulhisi3>:
    1510:	a2 9f       	mul	r26, r18
    1512:	b0 01       	movw	r22, r0
    1514:	b3 9f       	mul	r27, r19
    1516:	c0 01       	movw	r24, r0
    1518:	a3 9f       	mul	r26, r19
    151a:	70 0d       	add	r23, r0
    151c:	81 1d       	adc	r24, r1
    151e:	11 24       	eor	r1, r1
    1520:	91 1d       	adc	r25, r1
    1522:	b2 9f       	mul	r27, r18
    1524:	70 0d       	add	r23, r0
    1526:	81 1d       	adc	r24, r1
    1528:	11 24       	eor	r1, r1
    152a:	91 1d       	adc	r25, r1
    152c:	08 95       	ret

0000152e <_exit>:
    152e:	f8 94       	cli

00001530 <__stop_program>:
    1530:	ff cf       	rjmp	.-2      	; 0x1530 <__stop_program>


RFID Module.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000015ce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000013a  00800060  000015ce  00001662  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000014  0080019a  0080019a  0000179c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000179c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000017cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  00001808  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001feb  00000000  00000000  000018f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000785  00000000  00000000  000038e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e95  00000000  00000000  00004068  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000278  00000000  00000000  00004f00  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000520  00000000  00000000  00005178  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a4c  00000000  00000000  00005698  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  000070e4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 f4 03 	jmp	0x7e8	; 0x7e8 <__vector_1>
       8:	0c 94 e6 03 	jmp	0x7cc	; 0x7cc <__vector_2>
       c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__stack+0x14f>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <Lcd4_Write_Char+0x12>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <pinChange+0x240>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <pinChange+0x2e>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d8 e0       	ldi	r29, 0x08	; 8
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	11 e0       	ldi	r17, 0x01	; 1
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	ee ec       	ldi	r30, 0xCE	; 206
     162:	f5 e1       	ldi	r31, 0x15	; 21
     164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0
     16a:	aa 39       	cpi	r26, 0x9A	; 154
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
     170:	21 e0       	ldi	r18, 0x01	; 1
     172:	aa e9       	ldi	r26, 0x9A	; 154
     174:	b1 e0       	ldi	r27, 0x01	; 1
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	ae 3a       	cpi	r26, 0xAE	; 174
     17c:	b2 07       	cpc	r27, r18
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 08 04 	call	0x810	; 0x810 <main>
     184:	0c 94 e5 0a 	jmp	0x15ca	; 0x15ca <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <pinChange>:
}

void Lcd4_Shift_Right()
{
	Lcd4_Cmd(0x01);
	Lcd4_Cmd(0x0C);
     18c:	67 2b       	or	r22, r23
     18e:	09 f0       	breq	.+2      	; 0x192 <pinChange+0x6>
     190:	df c0       	rjmp	.+446    	; 0x350 <pinChange+0x1c4>
     192:	00 97       	sbiw	r24, 0x00	; 0
     194:	21 f4       	brne	.+8      	; 0x19e <pinChange+0x12>
     196:	8b b3       	in	r24, 0x1b	; 27
     198:	8e 7f       	andi	r24, 0xFE	; 254
     19a:	8b bb       	out	0x1b, r24	; 27
     19c:	08 95       	ret
     19e:	81 30       	cpi	r24, 0x01	; 1
     1a0:	91 05       	cpc	r25, r1
     1a2:	21 f4       	brne	.+8      	; 0x1ac <pinChange+0x20>
     1a4:	8b b3       	in	r24, 0x1b	; 27
     1a6:	8d 7f       	andi	r24, 0xFD	; 253
     1a8:	8b bb       	out	0x1b, r24	; 27
     1aa:	08 95       	ret
     1ac:	82 30       	cpi	r24, 0x02	; 2
     1ae:	91 05       	cpc	r25, r1
     1b0:	21 f4       	brne	.+8      	; 0x1ba <pinChange+0x2e>
     1b2:	8b b3       	in	r24, 0x1b	; 27
     1b4:	8b 7f       	andi	r24, 0xFB	; 251
     1b6:	8b bb       	out	0x1b, r24	; 27
     1b8:	08 95       	ret
     1ba:	83 30       	cpi	r24, 0x03	; 3
     1bc:	91 05       	cpc	r25, r1
     1be:	21 f4       	brne	.+8      	; 0x1c8 <pinChange+0x3c>
     1c0:	8b b3       	in	r24, 0x1b	; 27
     1c2:	87 7f       	andi	r24, 0xF7	; 247
     1c4:	8b bb       	out	0x1b, r24	; 27
     1c6:	08 95       	ret
     1c8:	84 30       	cpi	r24, 0x04	; 4
     1ca:	91 05       	cpc	r25, r1
     1cc:	21 f4       	brne	.+8      	; 0x1d6 <pinChange+0x4a>
     1ce:	8b b3       	in	r24, 0x1b	; 27
     1d0:	8f 7e       	andi	r24, 0xEF	; 239
     1d2:	8b bb       	out	0x1b, r24	; 27
     1d4:	08 95       	ret
     1d6:	85 30       	cpi	r24, 0x05	; 5
     1d8:	91 05       	cpc	r25, r1
     1da:	21 f4       	brne	.+8      	; 0x1e4 <pinChange+0x58>
     1dc:	8b b3       	in	r24, 0x1b	; 27
     1de:	8f 7d       	andi	r24, 0xDF	; 223
     1e0:	8b bb       	out	0x1b, r24	; 27
     1e2:	08 95       	ret
     1e4:	86 30       	cpi	r24, 0x06	; 6
     1e6:	91 05       	cpc	r25, r1
     1e8:	21 f4       	brne	.+8      	; 0x1f2 <pinChange+0x66>
     1ea:	8b b3       	in	r24, 0x1b	; 27
     1ec:	8f 7b       	andi	r24, 0xBF	; 191
     1ee:	8b bb       	out	0x1b, r24	; 27
     1f0:	08 95       	ret
     1f2:	87 30       	cpi	r24, 0x07	; 7
     1f4:	91 05       	cpc	r25, r1
     1f6:	21 f4       	brne	.+8      	; 0x200 <pinChange+0x74>
     1f8:	8b b3       	in	r24, 0x1b	; 27
     1fa:	8f 77       	andi	r24, 0x7F	; 127
     1fc:	8b bb       	out	0x1b, r24	; 27
     1fe:	08 95       	ret
     200:	8a 30       	cpi	r24, 0x0A	; 10
     202:	91 05       	cpc	r25, r1
     204:	21 f4       	brne	.+8      	; 0x20e <pinChange+0x82>
     206:	88 b3       	in	r24, 0x18	; 24
     208:	8e 7f       	andi	r24, 0xFE	; 254
     20a:	88 bb       	out	0x18, r24	; 24
     20c:	08 95       	ret
     20e:	8b 30       	cpi	r24, 0x0B	; 11
     210:	91 05       	cpc	r25, r1
     212:	21 f4       	brne	.+8      	; 0x21c <pinChange+0x90>
     214:	88 b3       	in	r24, 0x18	; 24
     216:	8d 7f       	andi	r24, 0xFD	; 253
     218:	88 bb       	out	0x18, r24	; 24
     21a:	08 95       	ret
     21c:	8c 30       	cpi	r24, 0x0C	; 12
     21e:	91 05       	cpc	r25, r1
     220:	21 f4       	brne	.+8      	; 0x22a <pinChange+0x9e>
     222:	88 b3       	in	r24, 0x18	; 24
     224:	8b 7f       	andi	r24, 0xFB	; 251
     226:	88 bb       	out	0x18, r24	; 24
     228:	08 95       	ret
     22a:	8d 30       	cpi	r24, 0x0D	; 13
     22c:	91 05       	cpc	r25, r1
     22e:	21 f4       	brne	.+8      	; 0x238 <pinChange+0xac>
     230:	88 b3       	in	r24, 0x18	; 24
     232:	87 7f       	andi	r24, 0xF7	; 247
     234:	88 bb       	out	0x18, r24	; 24
     236:	08 95       	ret
     238:	8e 30       	cpi	r24, 0x0E	; 14
     23a:	91 05       	cpc	r25, r1
     23c:	21 f4       	brne	.+8      	; 0x246 <pinChange+0xba>
     23e:	88 b3       	in	r24, 0x18	; 24
     240:	8f 7e       	andi	r24, 0xEF	; 239
     242:	88 bb       	out	0x18, r24	; 24
     244:	08 95       	ret
     246:	8f 30       	cpi	r24, 0x0F	; 15
     248:	91 05       	cpc	r25, r1
     24a:	21 f4       	brne	.+8      	; 0x254 <pinChange+0xc8>
     24c:	88 b3       	in	r24, 0x18	; 24
     24e:	8f 7d       	andi	r24, 0xDF	; 223
     250:	88 bb       	out	0x18, r24	; 24
     252:	08 95       	ret
     254:	80 31       	cpi	r24, 0x10	; 16
     256:	91 05       	cpc	r25, r1
     258:	21 f4       	brne	.+8      	; 0x262 <pinChange+0xd6>
     25a:	88 b3       	in	r24, 0x18	; 24
     25c:	8f 7b       	andi	r24, 0xBF	; 191
     25e:	88 bb       	out	0x18, r24	; 24
     260:	08 95       	ret
     262:	81 31       	cpi	r24, 0x11	; 17
     264:	91 05       	cpc	r25, r1
     266:	21 f4       	brne	.+8      	; 0x270 <pinChange+0xe4>
     268:	88 b3       	in	r24, 0x18	; 24
     26a:	8f 77       	andi	r24, 0x7F	; 127
     26c:	88 bb       	out	0x18, r24	; 24
     26e:	08 95       	ret
     270:	84 31       	cpi	r24, 0x14	; 20
     272:	91 05       	cpc	r25, r1
     274:	21 f4       	brne	.+8      	; 0x27e <pinChange+0xf2>
     276:	85 b3       	in	r24, 0x15	; 21
     278:	8e 7f       	andi	r24, 0xFE	; 254
     27a:	85 bb       	out	0x15, r24	; 21
     27c:	08 95       	ret
     27e:	85 31       	cpi	r24, 0x15	; 21
     280:	91 05       	cpc	r25, r1
     282:	21 f4       	brne	.+8      	; 0x28c <pinChange+0x100>
     284:	85 b3       	in	r24, 0x15	; 21
     286:	8d 7f       	andi	r24, 0xFD	; 253
     288:	85 bb       	out	0x15, r24	; 21
     28a:	08 95       	ret
     28c:	86 31       	cpi	r24, 0x16	; 22
     28e:	91 05       	cpc	r25, r1
     290:	21 f4       	brne	.+8      	; 0x29a <pinChange+0x10e>
     292:	85 b3       	in	r24, 0x15	; 21
     294:	8b 7f       	andi	r24, 0xFB	; 251
     296:	85 bb       	out	0x15, r24	; 21
     298:	08 95       	ret
     29a:	87 31       	cpi	r24, 0x17	; 23
     29c:	91 05       	cpc	r25, r1
     29e:	21 f4       	brne	.+8      	; 0x2a8 <pinChange+0x11c>
     2a0:	85 b3       	in	r24, 0x15	; 21
     2a2:	87 7f       	andi	r24, 0xF7	; 247
     2a4:	85 bb       	out	0x15, r24	; 21
     2a6:	08 95       	ret
     2a8:	88 31       	cpi	r24, 0x18	; 24
     2aa:	91 05       	cpc	r25, r1
     2ac:	21 f4       	brne	.+8      	; 0x2b6 <pinChange+0x12a>
     2ae:	85 b3       	in	r24, 0x15	; 21
     2b0:	8f 7e       	andi	r24, 0xEF	; 239
     2b2:	85 bb       	out	0x15, r24	; 21
     2b4:	08 95       	ret
     2b6:	89 31       	cpi	r24, 0x19	; 25
     2b8:	91 05       	cpc	r25, r1
     2ba:	21 f4       	brne	.+8      	; 0x2c4 <pinChange+0x138>
     2bc:	85 b3       	in	r24, 0x15	; 21
     2be:	8f 7d       	andi	r24, 0xDF	; 223
     2c0:	85 bb       	out	0x15, r24	; 21
     2c2:	08 95       	ret
     2c4:	8a 31       	cpi	r24, 0x1A	; 26
     2c6:	91 05       	cpc	r25, r1
     2c8:	21 f4       	brne	.+8      	; 0x2d2 <pinChange+0x146>
     2ca:	85 b3       	in	r24, 0x15	; 21
     2cc:	8f 7b       	andi	r24, 0xBF	; 191
     2ce:	85 bb       	out	0x15, r24	; 21
     2d0:	08 95       	ret
     2d2:	8b 31       	cpi	r24, 0x1B	; 27
     2d4:	91 05       	cpc	r25, r1
     2d6:	21 f4       	brne	.+8      	; 0x2e0 <pinChange+0x154>
     2d8:	85 b3       	in	r24, 0x15	; 21
     2da:	8f 77       	andi	r24, 0x7F	; 127
     2dc:	85 bb       	out	0x15, r24	; 21
     2de:	08 95       	ret
     2e0:	8e 31       	cpi	r24, 0x1E	; 30
     2e2:	91 05       	cpc	r25, r1
     2e4:	21 f4       	brne	.+8      	; 0x2ee <pinChange+0x162>
     2e6:	82 b3       	in	r24, 0x12	; 18
     2e8:	8e 7f       	andi	r24, 0xFE	; 254
     2ea:	82 bb       	out	0x12, r24	; 18
     2ec:	08 95       	ret
     2ee:	8f 31       	cpi	r24, 0x1F	; 31
     2f0:	91 05       	cpc	r25, r1
     2f2:	21 f4       	brne	.+8      	; 0x2fc <pinChange+0x170>
     2f4:	82 b3       	in	r24, 0x12	; 18
     2f6:	8d 7f       	andi	r24, 0xFD	; 253
     2f8:	82 bb       	out	0x12, r24	; 18
     2fa:	08 95       	ret
     2fc:	80 32       	cpi	r24, 0x20	; 32
     2fe:	91 05       	cpc	r25, r1
     300:	21 f4       	brne	.+8      	; 0x30a <pinChange+0x17e>
     302:	82 b3       	in	r24, 0x12	; 18
     304:	8b 7f       	andi	r24, 0xFB	; 251
     306:	82 bb       	out	0x12, r24	; 18
     308:	08 95       	ret
     30a:	81 32       	cpi	r24, 0x21	; 33
     30c:	91 05       	cpc	r25, r1
     30e:	21 f4       	brne	.+8      	; 0x318 <pinChange+0x18c>
     310:	82 b3       	in	r24, 0x12	; 18
     312:	87 7f       	andi	r24, 0xF7	; 247
     314:	82 bb       	out	0x12, r24	; 18
     316:	08 95       	ret
     318:	82 32       	cpi	r24, 0x22	; 34
     31a:	91 05       	cpc	r25, r1
     31c:	21 f4       	brne	.+8      	; 0x326 <pinChange+0x19a>
     31e:	82 b3       	in	r24, 0x12	; 18
     320:	8f 7e       	andi	r24, 0xEF	; 239
     322:	82 bb       	out	0x12, r24	; 18
     324:	08 95       	ret
     326:	83 32       	cpi	r24, 0x23	; 35
     328:	91 05       	cpc	r25, r1
     32a:	21 f4       	brne	.+8      	; 0x334 <pinChange+0x1a8>
     32c:	82 b3       	in	r24, 0x12	; 18
     32e:	8f 7d       	andi	r24, 0xDF	; 223
     330:	82 bb       	out	0x12, r24	; 18
     332:	08 95       	ret
     334:	84 32       	cpi	r24, 0x24	; 36
     336:	91 05       	cpc	r25, r1
     338:	21 f4       	brne	.+8      	; 0x342 <pinChange+0x1b6>
     33a:	82 b3       	in	r24, 0x12	; 18
     33c:	8f 7b       	andi	r24, 0xBF	; 191
     33e:	82 bb       	out	0x12, r24	; 18
     340:	08 95       	ret
     342:	85 97       	sbiw	r24, 0x25	; 37
     344:	09 f0       	breq	.+2      	; 0x348 <pinChange+0x1bc>
     346:	e1 c0       	rjmp	.+450    	; 0x50a <__EEPROM_REGION_LENGTH__+0x10a>
     348:	82 b3       	in	r24, 0x12	; 18
     34a:	8f 77       	andi	r24, 0x7F	; 127
     34c:	82 bb       	out	0x12, r24	; 18
     34e:	08 95       	ret
     350:	00 97       	sbiw	r24, 0x00	; 0
     352:	21 f4       	brne	.+8      	; 0x35c <pinChange+0x1d0>
     354:	8b b3       	in	r24, 0x1b	; 27
     356:	81 60       	ori	r24, 0x01	; 1
     358:	8b bb       	out	0x1b, r24	; 27
     35a:	08 95       	ret
     35c:	81 30       	cpi	r24, 0x01	; 1
     35e:	91 05       	cpc	r25, r1
     360:	21 f4       	brne	.+8      	; 0x36a <pinChange+0x1de>
     362:	8b b3       	in	r24, 0x1b	; 27
     364:	82 60       	ori	r24, 0x02	; 2
     366:	8b bb       	out	0x1b, r24	; 27
     368:	08 95       	ret
     36a:	82 30       	cpi	r24, 0x02	; 2
     36c:	91 05       	cpc	r25, r1
     36e:	21 f4       	brne	.+8      	; 0x378 <pinChange+0x1ec>
     370:	8b b3       	in	r24, 0x1b	; 27
     372:	84 60       	ori	r24, 0x04	; 4
     374:	8b bb       	out	0x1b, r24	; 27
     376:	08 95       	ret
     378:	83 30       	cpi	r24, 0x03	; 3
     37a:	91 05       	cpc	r25, r1
     37c:	21 f4       	brne	.+8      	; 0x386 <pinChange+0x1fa>
     37e:	8b b3       	in	r24, 0x1b	; 27
     380:	88 60       	ori	r24, 0x08	; 8
     382:	8b bb       	out	0x1b, r24	; 27
     384:	08 95       	ret
     386:	84 30       	cpi	r24, 0x04	; 4
     388:	91 05       	cpc	r25, r1
     38a:	21 f4       	brne	.+8      	; 0x394 <pinChange+0x208>
     38c:	8b b3       	in	r24, 0x1b	; 27
     38e:	80 61       	ori	r24, 0x10	; 16
     390:	8b bb       	out	0x1b, r24	; 27
     392:	08 95       	ret
     394:	85 30       	cpi	r24, 0x05	; 5
     396:	91 05       	cpc	r25, r1
     398:	21 f4       	brne	.+8      	; 0x3a2 <pinChange+0x216>
     39a:	8b b3       	in	r24, 0x1b	; 27
     39c:	80 62       	ori	r24, 0x20	; 32
     39e:	8b bb       	out	0x1b, r24	; 27
     3a0:	08 95       	ret
     3a2:	86 30       	cpi	r24, 0x06	; 6
     3a4:	91 05       	cpc	r25, r1
     3a6:	21 f4       	brne	.+8      	; 0x3b0 <pinChange+0x224>
     3a8:	8b b3       	in	r24, 0x1b	; 27
     3aa:	80 64       	ori	r24, 0x40	; 64
     3ac:	8b bb       	out	0x1b, r24	; 27
     3ae:	08 95       	ret
     3b0:	87 30       	cpi	r24, 0x07	; 7
     3b2:	91 05       	cpc	r25, r1
     3b4:	21 f4       	brne	.+8      	; 0x3be <pinChange+0x232>
     3b6:	8b b3       	in	r24, 0x1b	; 27
     3b8:	80 68       	ori	r24, 0x80	; 128
     3ba:	8b bb       	out	0x1b, r24	; 27
     3bc:	08 95       	ret
     3be:	8a 30       	cpi	r24, 0x0A	; 10
     3c0:	91 05       	cpc	r25, r1
     3c2:	21 f4       	brne	.+8      	; 0x3cc <pinChange+0x240>
     3c4:	88 b3       	in	r24, 0x18	; 24
     3c6:	81 60       	ori	r24, 0x01	; 1
     3c8:	88 bb       	out	0x18, r24	; 24
     3ca:	08 95       	ret
     3cc:	8b 30       	cpi	r24, 0x0B	; 11
     3ce:	91 05       	cpc	r25, r1
     3d0:	21 f4       	brne	.+8      	; 0x3da <pinChange+0x24e>
     3d2:	88 b3       	in	r24, 0x18	; 24
     3d4:	82 60       	ori	r24, 0x02	; 2
     3d6:	88 bb       	out	0x18, r24	; 24
     3d8:	08 95       	ret
     3da:	8c 30       	cpi	r24, 0x0C	; 12
     3dc:	91 05       	cpc	r25, r1
     3de:	21 f4       	brne	.+8      	; 0x3e8 <pinChange+0x25c>
     3e0:	88 b3       	in	r24, 0x18	; 24
     3e2:	84 60       	ori	r24, 0x04	; 4
     3e4:	88 bb       	out	0x18, r24	; 24
     3e6:	08 95       	ret
     3e8:	8d 30       	cpi	r24, 0x0D	; 13
     3ea:	91 05       	cpc	r25, r1
     3ec:	21 f4       	brne	.+8      	; 0x3f6 <pinChange+0x26a>
     3ee:	88 b3       	in	r24, 0x18	; 24
     3f0:	88 60       	ori	r24, 0x08	; 8
     3f2:	88 bb       	out	0x18, r24	; 24
     3f4:	08 95       	ret
     3f6:	8e 30       	cpi	r24, 0x0E	; 14
     3f8:	91 05       	cpc	r25, r1
     3fa:	21 f4       	brne	.+8      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
     3fc:	88 b3       	in	r24, 0x18	; 24
     3fe:	80 61       	ori	r24, 0x10	; 16
     400:	88 bb       	out	0x18, r24	; 24
     402:	08 95       	ret
     404:	8f 30       	cpi	r24, 0x0F	; 15
     406:	91 05       	cpc	r25, r1
     408:	21 f4       	brne	.+8      	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
     40a:	88 b3       	in	r24, 0x18	; 24
     40c:	80 62       	ori	r24, 0x20	; 32
     40e:	88 bb       	out	0x18, r24	; 24
     410:	08 95       	ret
     412:	80 31       	cpi	r24, 0x10	; 16
     414:	91 05       	cpc	r25, r1
     416:	21 f4       	brne	.+8      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
     418:	88 b3       	in	r24, 0x18	; 24
     41a:	80 64       	ori	r24, 0x40	; 64
     41c:	88 bb       	out	0x18, r24	; 24
     41e:	08 95       	ret
     420:	81 31       	cpi	r24, 0x11	; 17
     422:	91 05       	cpc	r25, r1
     424:	21 f4       	brne	.+8      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
     426:	88 b3       	in	r24, 0x18	; 24
     428:	80 68       	ori	r24, 0x80	; 128
     42a:	88 bb       	out	0x18, r24	; 24
     42c:	08 95       	ret
     42e:	84 31       	cpi	r24, 0x14	; 20
     430:	91 05       	cpc	r25, r1
     432:	21 f4       	brne	.+8      	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
     434:	85 b3       	in	r24, 0x15	; 21
     436:	81 60       	ori	r24, 0x01	; 1
     438:	85 bb       	out	0x15, r24	; 21
     43a:	08 95       	ret
     43c:	85 31       	cpi	r24, 0x15	; 21
     43e:	91 05       	cpc	r25, r1
     440:	21 f4       	brne	.+8      	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
     442:	85 b3       	in	r24, 0x15	; 21
     444:	82 60       	ori	r24, 0x02	; 2
     446:	85 bb       	out	0x15, r24	; 21
     448:	08 95       	ret
     44a:	86 31       	cpi	r24, 0x16	; 22
     44c:	91 05       	cpc	r25, r1
     44e:	21 f4       	brne	.+8      	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
     450:	85 b3       	in	r24, 0x15	; 21
     452:	84 60       	ori	r24, 0x04	; 4
     454:	85 bb       	out	0x15, r24	; 21
     456:	08 95       	ret
     458:	87 31       	cpi	r24, 0x17	; 23
     45a:	91 05       	cpc	r25, r1
     45c:	21 f4       	brne	.+8      	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
     45e:	85 b3       	in	r24, 0x15	; 21
     460:	88 60       	ori	r24, 0x08	; 8
     462:	85 bb       	out	0x15, r24	; 21
     464:	08 95       	ret
     466:	88 31       	cpi	r24, 0x18	; 24
     468:	91 05       	cpc	r25, r1
     46a:	21 f4       	brne	.+8      	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
     46c:	85 b3       	in	r24, 0x15	; 21
     46e:	80 61       	ori	r24, 0x10	; 16
     470:	85 bb       	out	0x15, r24	; 21
     472:	08 95       	ret
     474:	89 31       	cpi	r24, 0x19	; 25
     476:	91 05       	cpc	r25, r1
     478:	21 f4       	brne	.+8      	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
     47a:	85 b3       	in	r24, 0x15	; 21
     47c:	80 62       	ori	r24, 0x20	; 32
     47e:	85 bb       	out	0x15, r24	; 21
     480:	08 95       	ret
     482:	8a 31       	cpi	r24, 0x1A	; 26
     484:	91 05       	cpc	r25, r1
     486:	21 f4       	brne	.+8      	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
     488:	85 b3       	in	r24, 0x15	; 21
     48a:	80 64       	ori	r24, 0x40	; 64
     48c:	85 bb       	out	0x15, r24	; 21
     48e:	08 95       	ret
     490:	8b 31       	cpi	r24, 0x1B	; 27
     492:	91 05       	cpc	r25, r1
     494:	21 f4       	brne	.+8      	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
     496:	85 b3       	in	r24, 0x15	; 21
     498:	80 68       	ori	r24, 0x80	; 128
     49a:	85 bb       	out	0x15, r24	; 21
     49c:	08 95       	ret
     49e:	8e 31       	cpi	r24, 0x1E	; 30
     4a0:	91 05       	cpc	r25, r1
     4a2:	21 f4       	brne	.+8      	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
     4a4:	82 b3       	in	r24, 0x12	; 18
     4a6:	81 60       	ori	r24, 0x01	; 1
     4a8:	82 bb       	out	0x12, r24	; 18
     4aa:	08 95       	ret
     4ac:	8f 31       	cpi	r24, 0x1F	; 31
     4ae:	91 05       	cpc	r25, r1
     4b0:	21 f4       	brne	.+8      	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
     4b2:	82 b3       	in	r24, 0x12	; 18
     4b4:	82 60       	ori	r24, 0x02	; 2
     4b6:	82 bb       	out	0x12, r24	; 18
     4b8:	08 95       	ret
     4ba:	80 32       	cpi	r24, 0x20	; 32
     4bc:	91 05       	cpc	r25, r1
     4be:	21 f4       	brne	.+8      	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>
     4c0:	82 b3       	in	r24, 0x12	; 18
     4c2:	84 60       	ori	r24, 0x04	; 4
     4c4:	82 bb       	out	0x12, r24	; 18
     4c6:	08 95       	ret
     4c8:	81 32       	cpi	r24, 0x21	; 33
     4ca:	91 05       	cpc	r25, r1
     4cc:	21 f4       	brne	.+8      	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
     4ce:	82 b3       	in	r24, 0x12	; 18
     4d0:	88 60       	ori	r24, 0x08	; 8
     4d2:	82 bb       	out	0x12, r24	; 18
     4d4:	08 95       	ret
     4d6:	82 32       	cpi	r24, 0x22	; 34
     4d8:	91 05       	cpc	r25, r1
     4da:	21 f4       	brne	.+8      	; 0x4e4 <__EEPROM_REGION_LENGTH__+0xe4>
     4dc:	82 b3       	in	r24, 0x12	; 18
     4de:	80 61       	ori	r24, 0x10	; 16
     4e0:	82 bb       	out	0x12, r24	; 18
     4e2:	08 95       	ret
     4e4:	83 32       	cpi	r24, 0x23	; 35
     4e6:	91 05       	cpc	r25, r1
     4e8:	21 f4       	brne	.+8      	; 0x4f2 <__EEPROM_REGION_LENGTH__+0xf2>
     4ea:	82 b3       	in	r24, 0x12	; 18
     4ec:	80 62       	ori	r24, 0x20	; 32
     4ee:	82 bb       	out	0x12, r24	; 18
     4f0:	08 95       	ret
     4f2:	84 32       	cpi	r24, 0x24	; 36
     4f4:	91 05       	cpc	r25, r1
     4f6:	21 f4       	brne	.+8      	; 0x500 <__EEPROM_REGION_LENGTH__+0x100>
     4f8:	82 b3       	in	r24, 0x12	; 18
     4fa:	80 64       	ori	r24, 0x40	; 64
     4fc:	82 bb       	out	0x12, r24	; 18
     4fe:	08 95       	ret
     500:	85 97       	sbiw	r24, 0x25	; 37
     502:	19 f4       	brne	.+6      	; 0x50a <__EEPROM_REGION_LENGTH__+0x10a>
     504:	82 b3       	in	r24, 0x12	; 18
     506:	80 68       	ori	r24, 0x80	; 128
     508:	82 bb       	out	0x12, r24	; 18
     50a:	08 95       	ret

0000050c <Lcd4_Port>:
     50c:	cf 93       	push	r28
     50e:	c8 2f       	mov	r28, r24
     510:	80 ff       	sbrs	r24, 0
     512:	07 c0       	rjmp	.+14     	; 0x522 <Lcd4_Port+0x16>
     514:	61 e0       	ldi	r22, 0x01	; 1
     516:	70 e0       	ldi	r23, 0x00	; 0
     518:	8e e0       	ldi	r24, 0x0E	; 14
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     520:	06 c0       	rjmp	.+12     	; 0x52e <Lcd4_Port+0x22>
     522:	60 e0       	ldi	r22, 0x00	; 0
     524:	70 e0       	ldi	r23, 0x00	; 0
     526:	8e e0       	ldi	r24, 0x0E	; 14
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     52e:	c1 ff       	sbrs	r28, 1
     530:	07 c0       	rjmp	.+14     	; 0x540 <Lcd4_Port+0x34>
     532:	61 e0       	ldi	r22, 0x01	; 1
     534:	70 e0       	ldi	r23, 0x00	; 0
     536:	8f e0       	ldi	r24, 0x0F	; 15
     538:	90 e0       	ldi	r25, 0x00	; 0
     53a:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     53e:	06 c0       	rjmp	.+12     	; 0x54c <Lcd4_Port+0x40>
     540:	60 e0       	ldi	r22, 0x00	; 0
     542:	70 e0       	ldi	r23, 0x00	; 0
     544:	8f e0       	ldi	r24, 0x0F	; 15
     546:	90 e0       	ldi	r25, 0x00	; 0
     548:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     54c:	c2 ff       	sbrs	r28, 2
     54e:	07 c0       	rjmp	.+14     	; 0x55e <Lcd4_Port+0x52>
     550:	61 e0       	ldi	r22, 0x01	; 1
     552:	70 e0       	ldi	r23, 0x00	; 0
     554:	80 e1       	ldi	r24, 0x10	; 16
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     55c:	06 c0       	rjmp	.+12     	; 0x56a <Lcd4_Port+0x5e>
     55e:	60 e0       	ldi	r22, 0x00	; 0
     560:	70 e0       	ldi	r23, 0x00	; 0
     562:	80 e1       	ldi	r24, 0x10	; 16
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     56a:	c3 ff       	sbrs	r28, 3
     56c:	07 c0       	rjmp	.+14     	; 0x57c <Lcd4_Port+0x70>
     56e:	61 e0       	ldi	r22, 0x01	; 1
     570:	70 e0       	ldi	r23, 0x00	; 0
     572:	81 e1       	ldi	r24, 0x11	; 17
     574:	90 e0       	ldi	r25, 0x00	; 0
     576:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     57a:	06 c0       	rjmp	.+12     	; 0x588 <Lcd4_Port+0x7c>
     57c:	60 e0       	ldi	r22, 0x00	; 0
     57e:	70 e0       	ldi	r23, 0x00	; 0
     580:	81 e1       	ldi	r24, 0x11	; 17
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     588:	cf 91       	pop	r28
     58a:	08 95       	ret

0000058c <Lcd4_Cmd>:
     58c:	cf 93       	push	r28
     58e:	c8 2f       	mov	r28, r24
     590:	60 e0       	ldi	r22, 0x00	; 0
     592:	70 e0       	ldi	r23, 0x00	; 0
     594:	8a e0       	ldi	r24, 0x0A	; 10
     596:	90 e0       	ldi	r25, 0x00	; 0
     598:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     59c:	8c 2f       	mov	r24, r28
     59e:	0e 94 86 02 	call	0x50c	; 0x50c <Lcd4_Port>
     5a2:	61 e0       	ldi	r22, 0x01	; 1
     5a4:	70 e0       	ldi	r23, 0x00	; 0
     5a6:	8b e0       	ldi	r24, 0x0B	; 11
     5a8:	90 e0       	ldi	r25, 0x00	; 0
     5aa:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     5ae:	89 ef       	ldi	r24, 0xF9	; 249
     5b0:	90 e0       	ldi	r25, 0x00	; 0
     5b2:	01 97       	sbiw	r24, 0x01	; 1
     5b4:	f1 f7       	brne	.-4      	; 0x5b2 <Lcd4_Cmd+0x26>
     5b6:	00 c0       	rjmp	.+0      	; 0x5b8 <Lcd4_Cmd+0x2c>
     5b8:	00 00       	nop
     5ba:	60 e0       	ldi	r22, 0x00	; 0
     5bc:	70 e0       	ldi	r23, 0x00	; 0
     5be:	8b e0       	ldi	r24, 0x0B	; 11
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     5c6:	89 ef       	ldi	r24, 0xF9	; 249
     5c8:	90 e0       	ldi	r25, 0x00	; 0
     5ca:	01 97       	sbiw	r24, 0x01	; 1
     5cc:	f1 f7       	brne	.-4      	; 0x5ca <Lcd4_Cmd+0x3e>
     5ce:	00 c0       	rjmp	.+0      	; 0x5d0 <Lcd4_Cmd+0x44>
     5d0:	00 00       	nop
     5d2:	cf 91       	pop	r28
     5d4:	08 95       	ret

000005d6 <Lcd4_Clear>:
     5d6:	80 e0       	ldi	r24, 0x00	; 0
     5d8:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     5dc:	81 e0       	ldi	r24, 0x01	; 1
     5de:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     5e2:	08 95       	ret

000005e4 <Lcd4_Set_Cursor>:
     5e4:	cf 93       	push	r28
     5e6:	81 30       	cpi	r24, 0x01	; 1
     5e8:	61 f4       	brne	.+24     	; 0x602 <Lcd4_Set_Cursor+0x1e>
     5ea:	80 e8       	ldi	r24, 0x80	; 128
     5ec:	86 0f       	add	r24, r22
     5ee:	c6 2f       	mov	r28, r22
     5f0:	cf 70       	andi	r28, 0x0F	; 15
     5f2:	82 95       	swap	r24
     5f4:	8f 70       	andi	r24, 0x0F	; 15
     5f6:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     5fa:	8c 2f       	mov	r24, r28
     5fc:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     600:	0d c0       	rjmp	.+26     	; 0x61c <Lcd4_Set_Cursor+0x38>
     602:	82 30       	cpi	r24, 0x02	; 2
     604:	59 f4       	brne	.+22     	; 0x61c <Lcd4_Set_Cursor+0x38>
     606:	80 ec       	ldi	r24, 0xC0	; 192
     608:	86 0f       	add	r24, r22
     60a:	c6 2f       	mov	r28, r22
     60c:	cf 70       	andi	r28, 0x0F	; 15
     60e:	82 95       	swap	r24
     610:	8f 70       	andi	r24, 0x0F	; 15
     612:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     616:	8c 2f       	mov	r24, r28
     618:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     61c:	cf 91       	pop	r28
     61e:	08 95       	ret

00000620 <Lcd4_Init>:
     620:	80 e0       	ldi	r24, 0x00	; 0
     622:	0e 94 86 02 	call	0x50c	; 0x50c <Lcd4_Port>
     626:	87 e8       	ldi	r24, 0x87	; 135
     628:	93 e1       	ldi	r25, 0x13	; 19
     62a:	01 97       	sbiw	r24, 0x01	; 1
     62c:	f1 f7       	brne	.-4      	; 0x62a <Lcd4_Init+0xa>
     62e:	00 c0       	rjmp	.+0      	; 0x630 <Lcd4_Init+0x10>
     630:	00 00       	nop
     632:	83 e0       	ldi	r24, 0x03	; 3
     634:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     638:	81 ee       	ldi	r24, 0xE1	; 225
     63a:	94 e0       	ldi	r25, 0x04	; 4
     63c:	01 97       	sbiw	r24, 0x01	; 1
     63e:	f1 f7       	brne	.-4      	; 0x63c <Lcd4_Init+0x1c>
     640:	00 c0       	rjmp	.+0      	; 0x642 <Lcd4_Init+0x22>
     642:	00 00       	nop
     644:	83 e0       	ldi	r24, 0x03	; 3
     646:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     64a:	8d eb       	ldi	r24, 0xBD	; 189
     64c:	9a e0       	ldi	r25, 0x0A	; 10
     64e:	01 97       	sbiw	r24, 0x01	; 1
     650:	f1 f7       	brne	.-4      	; 0x64e <Lcd4_Init+0x2e>
     652:	00 c0       	rjmp	.+0      	; 0x654 <Lcd4_Init+0x34>
     654:	00 00       	nop
     656:	83 e0       	ldi	r24, 0x03	; 3
     658:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     65c:	82 e0       	ldi	r24, 0x02	; 2
     65e:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     662:	82 e0       	ldi	r24, 0x02	; 2
     664:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     668:	88 e0       	ldi	r24, 0x08	; 8
     66a:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     66e:	80 e0       	ldi	r24, 0x00	; 0
     670:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     674:	8c e0       	ldi	r24, 0x0C	; 12
     676:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     67a:	80 e0       	ldi	r24, 0x00	; 0
     67c:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     680:	86 e0       	ldi	r24, 0x06	; 6
     682:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     686:	08 95       	ret

00000688 <Lcd4_Write_Char>:
     688:	cf 93       	push	r28
     68a:	df 93       	push	r29
     68c:	d8 2f       	mov	r29, r24
     68e:	df 70       	andi	r29, 0x0F	; 15
     690:	c8 2f       	mov	r28, r24
     692:	c0 7f       	andi	r28, 0xF0	; 240
     694:	61 e0       	ldi	r22, 0x01	; 1
     696:	70 e0       	ldi	r23, 0x00	; 0
     698:	8a e0       	ldi	r24, 0x0A	; 10
     69a:	90 e0       	ldi	r25, 0x00	; 0
     69c:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     6a0:	8c 2f       	mov	r24, r28
     6a2:	82 95       	swap	r24
     6a4:	8f 70       	andi	r24, 0x0F	; 15
     6a6:	0e 94 86 02 	call	0x50c	; 0x50c <Lcd4_Port>
     6aa:	61 e0       	ldi	r22, 0x01	; 1
     6ac:	70 e0       	ldi	r23, 0x00	; 0
     6ae:	8b e0       	ldi	r24, 0x0B	; 11
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     6b6:	89 ef       	ldi	r24, 0xF9	; 249
     6b8:	90 e0       	ldi	r25, 0x00	; 0
     6ba:	01 97       	sbiw	r24, 0x01	; 1
     6bc:	f1 f7       	brne	.-4      	; 0x6ba <Lcd4_Write_Char+0x32>
     6be:	00 c0       	rjmp	.+0      	; 0x6c0 <Lcd4_Write_Char+0x38>
     6c0:	00 00       	nop
     6c2:	60 e0       	ldi	r22, 0x00	; 0
     6c4:	70 e0       	ldi	r23, 0x00	; 0
     6c6:	8b e0       	ldi	r24, 0x0B	; 11
     6c8:	90 e0       	ldi	r25, 0x00	; 0
     6ca:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     6ce:	89 ef       	ldi	r24, 0xF9	; 249
     6d0:	90 e0       	ldi	r25, 0x00	; 0
     6d2:	01 97       	sbiw	r24, 0x01	; 1
     6d4:	f1 f7       	brne	.-4      	; 0x6d2 <Lcd4_Write_Char+0x4a>
     6d6:	00 c0       	rjmp	.+0      	; 0x6d8 <Lcd4_Write_Char+0x50>
     6d8:	00 00       	nop
     6da:	8d 2f       	mov	r24, r29
     6dc:	0e 94 86 02 	call	0x50c	; 0x50c <Lcd4_Port>
     6e0:	61 e0       	ldi	r22, 0x01	; 1
     6e2:	70 e0       	ldi	r23, 0x00	; 0
     6e4:	8b e0       	ldi	r24, 0x0B	; 11
     6e6:	90 e0       	ldi	r25, 0x00	; 0
     6e8:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     6ec:	89 ef       	ldi	r24, 0xF9	; 249
     6ee:	90 e0       	ldi	r25, 0x00	; 0
     6f0:	01 97       	sbiw	r24, 0x01	; 1
     6f2:	f1 f7       	brne	.-4      	; 0x6f0 <Lcd4_Write_Char+0x68>
     6f4:	00 c0       	rjmp	.+0      	; 0x6f6 <Lcd4_Write_Char+0x6e>
     6f6:	00 00       	nop
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	8b e0       	ldi	r24, 0x0B	; 11
     6fe:	90 e0       	ldi	r25, 0x00	; 0
     700:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     704:	89 ef       	ldi	r24, 0xF9	; 249
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	01 97       	sbiw	r24, 0x01	; 1
     70a:	f1 f7       	brne	.-4      	; 0x708 <Lcd4_Write_Char+0x80>
     70c:	00 c0       	rjmp	.+0      	; 0x70e <Lcd4_Write_Char+0x86>
     70e:	00 00       	nop
     710:	df 91       	pop	r29
     712:	cf 91       	pop	r28
     714:	08 95       	ret

00000716 <Lcd4_Write_String>:
     716:	0f 93       	push	r16
     718:	1f 93       	push	r17
     71a:	cf 93       	push	r28
     71c:	df 93       	push	r29
     71e:	8c 01       	movw	r16, r24
     720:	c0 e0       	ldi	r28, 0x00	; 0
     722:	d0 e0       	ldi	r29, 0x00	; 0
     724:	03 c0       	rjmp	.+6      	; 0x72c <Lcd4_Write_String+0x16>
     726:	0e 94 44 03 	call	0x688	; 0x688 <Lcd4_Write_Char>
     72a:	21 96       	adiw	r28, 0x01	; 1
     72c:	f8 01       	movw	r30, r16
     72e:	ec 0f       	add	r30, r28
     730:	fd 1f       	adc	r31, r29
     732:	80 81       	ld	r24, Z
     734:	81 11       	cpse	r24, r1
     736:	f7 cf       	rjmp	.-18     	; 0x726 <Lcd4_Write_String+0x10>
     738:	df 91       	pop	r29
     73a:	cf 91       	pop	r28
     73c:	1f 91       	pop	r17
     73e:	0f 91       	pop	r16
     740:	08 95       	ret

00000742 <Lcd4_Shift_Left>:
}

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
     742:	81 e0       	ldi	r24, 0x01	; 1
     744:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
	Lcd4_Cmd(0x08);
     748:	88 e0       	ldi	r24, 0x08	; 8
     74a:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     74e:	08 95       	ret

00000750 <UART_init>:
uint16_t voteflag = 0;

void UART_init()
{	
	
	UCSRB = 0b00011000;// Turn on the reception and Transmission
     750:	88 e1       	ldi	r24, 0x18	; 24
     752:	8a b9       	out	0x0a, r24	; 10
	UCSRC = 0b10000110;
     754:	86 e8       	ldi	r24, 0x86	; 134
     756:	80 bd       	out	0x20, r24	; 32
	//UCSRC |= (1 << URSEL) | (1 << UCSZ0) | (1 << UCSZ1);// Use 8-bit character sizes
	UCSRA = 0b00000000;
     758:	1b b8       	out	0x0b, r1	; 11
	UCSRA |= (1 << RXC) | (1<<TXC);
     75a:	8b b1       	in	r24, 0x0b	; 11
     75c:	80 6c       	ori	r24, 0xC0	; 192
     75e:	8b b9       	out	0x0b, r24	; 11
	// | (0<<TXC)|(0<<UDRE)|(0<<FE)|(0<<DOR)|(0<UPE)|(0<<U2X)|(0<<MPCM)

	//UBRRL = BAUD_PRESCALE;		// Load lower 8-bits of the baud rate
	//UBRRH = (BAUD_PRESCALE >> 8);	// Load upper 8-bits
	UBRRL = 0x19;
     760:	89 e1       	ldi	r24, 0x19	; 25
     762:	89 b9       	out	0x09, r24	; 9
	UBRRH = 0x00;
     764:	10 bc       	out	0x20, r1	; 32
     766:	08 95       	ret

00000768 <ADC_init>:
}

void ADC_init()
{
	ADMUX = 0b11000000;
     768:	80 ec       	ldi	r24, 0xC0	; 192
     76a:	87 b9       	out	0x07, r24	; 7
	ADCSRA = 0b10000111;
     76c:	87 e8       	ldi	r24, 0x87	; 135
     76e:	86 b9       	out	0x06, r24	; 6
     770:	08 95       	ret

00000772 <ADC_Read>:

float ADC_Read()
{
	float value;
	float volt;
	ADCSRA |= (1 << ADSC);
     772:	86 b1       	in	r24, 0x06	; 6
     774:	80 64       	ori	r24, 0x40	; 64
     776:	86 b9       	out	0x06, r24	; 6
	while( ADCSRA & (1 << ADSC));
     778:	36 99       	sbic	0x06, 6	; 6
     77a:	fe cf       	rjmp	.-4      	; 0x778 <ADC_Read+0x6>
	value = ADCL  | ( 0b00000011 & ADCH) << 8;
     77c:	84 b1       	in	r24, 0x04	; 4
     77e:	65 b1       	in	r22, 0x05	; 5
     780:	63 70       	andi	r22, 0x03	; 3
     782:	70 e0       	ldi	r23, 0x00	; 0
     784:	76 2f       	mov	r23, r22
     786:	66 27       	eor	r22, r22
     788:	68 2b       	or	r22, r24
     78a:	07 2e       	mov	r0, r23
     78c:	00 0c       	add	r0, r0
     78e:	88 0b       	sbc	r24, r24
     790:	99 0b       	sbc	r25, r25
     792:	0e 94 53 06 	call	0xca6	; 0xca6 <__floatsisf>
	volt = value*2.56/1024; //V
     796:	2a e0       	ldi	r18, 0x0A	; 10
     798:	37 ed       	ldi	r19, 0xD7	; 215
     79a:	43 e2       	ldi	r20, 0x23	; 35
     79c:	50 e4       	ldi	r21, 0x40	; 64
     79e:	0e 94 93 06 	call	0xd26	; 0xd26 <__mulsf3>
     7a2:	20 e0       	ldi	r18, 0x00	; 0
     7a4:	30 e0       	ldi	r19, 0x00	; 0
     7a6:	40 e8       	ldi	r20, 0x80	; 128
     7a8:	5a e3       	ldi	r21, 0x3A	; 58
     7aa:	0e 94 93 06 	call	0xd26	; 0xd26 <__mulsf3>
	volt = volt*100; //temp
     7ae:	20 e0       	ldi	r18, 0x00	; 0
     7b0:	30 e0       	ldi	r19, 0x00	; 0
     7b2:	48 ec       	ldi	r20, 0xC8	; 200
     7b4:	52 e4       	ldi	r21, 0x42	; 66
     7b6:	0e 94 93 06 	call	0xd26	; 0xd26 <__mulsf3>
	return volt;
}
     7ba:	08 95       	ret

000007bc <UART_RxChar>:
unsigned char UART_RxChar()
{
	while ((UCSRA & (1 << RXC)) == 0x00);// Wait till data is received
     7bc:	5f 9b       	sbis	0x0b, 7	; 11
     7be:	fe cf       	rjmp	.-4      	; 0x7bc <UART_RxChar>
	return UDR;		// Return the byte
     7c0:	8c b1       	in	r24, 0x0c	; 12
}
     7c2:	08 95       	ret

000007c4 <UART_TxChar>:

void UART_TxChar(unsigned char data){
	while((UCSRA & (1 << UDRE)) == 0x00);
     7c4:	5d 9b       	sbis	0x0b, 5	; 11
     7c6:	fe cf       	rjmp	.-4      	; 0x7c4 <UART_TxChar>
	UDR = data;
     7c8:	8c b9       	out	0x0c, r24	; 12
     7ca:	08 95       	ret

000007cc <__vector_2>:
	
}

volatile int wait = 0;
ISR(INT1_vect){
     7cc:	1f 92       	push	r1
     7ce:	0f 92       	push	r0
     7d0:	0f b6       	in	r0, 0x3f	; 63
     7d2:	0f 92       	push	r0
     7d4:	11 24       	eor	r1, r1
	
	wait = 0;
     7d6:	10 92 9d 01 	sts	0x019D, r1	; 0x80019d <wait+0x1>
     7da:	10 92 9c 01 	sts	0x019C, r1	; 0x80019c <wait>

}
     7de:	0f 90       	pop	r0
     7e0:	0f be       	out	0x3f, r0	; 63
     7e2:	0f 90       	pop	r0
     7e4:	1f 90       	pop	r1
     7e6:	18 95       	reti

000007e8 <__vector_1>:

volatile int end = 0;
ISR(INT0_vect){
     7e8:	1f 92       	push	r1
     7ea:	0f 92       	push	r0
     7ec:	0f b6       	in	r0, 0x3f	; 63
     7ee:	0f 92       	push	r0
     7f0:	11 24       	eor	r1, r1
     7f2:	8f 93       	push	r24
     7f4:	9f 93       	push	r25
	end = 1;
     7f6:	81 e0       	ldi	r24, 0x01	; 1
     7f8:	90 e0       	ldi	r25, 0x00	; 0
     7fa:	90 93 9b 01 	sts	0x019B, r25	; 0x80019b <__data_end+0x1>
     7fe:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <__data_end>
}
     802:	9f 91       	pop	r25
     804:	8f 91       	pop	r24
     806:	0f 90       	pop	r0
     808:	0f be       	out	0x3f, r0	; 63
     80a:	0f 90       	pop	r0
     80c:	1f 90       	pop	r1
     80e:	18 95       	reti

00000810 <main>:
int main(void)
{
     810:	cf 92       	push	r12
     812:	df 92       	push	r13
     814:	ef 92       	push	r14
     816:	ff 92       	push	r15
     818:	0f 93       	push	r16
     81a:	1f 93       	push	r17
     81c:	cf 93       	push	r28
     81e:	df 93       	push	r29
     820:	cd b7       	in	r28, 0x3d	; 61
     822:	de b7       	in	r29, 0x3e	; 62
     824:	63 97       	sbiw	r28, 0x13	; 19
     826:	0f b6       	in	r0, 0x3f	; 63
     828:	f8 94       	cli
     82a:	de bf       	out	0x3e, r29	; 62
     82c:	0f be       	out	0x3f, r0	; 63
     82e:	cd bf       	out	0x3d, r28	; 61
   float temp_F;
   char Fahrenheit[5];	
   DDRD = 0b11110010;
     830:	82 ef       	ldi	r24, 0xF2	; 242
     832:	81 bb       	out	0x11, r24	; 17
   DDRB = 0xFF;
     834:	8f ef       	ldi	r24, 0xFF	; 255
     836:	87 bb       	out	0x17, r24	; 23
   DDRA = 0x00;
     838:	1a ba       	out	0x1a, r1	; 26
   
   //INTERRUPT
   GICR = (1<<INT1); 
     83a:	80 e8       	ldi	r24, 0x80	; 128
     83c:	8b bf       	out	0x3b, r24	; 59
   MCUCR = MCUCR & 0b11110011;
     83e:	85 b7       	in	r24, 0x35	; 53
     840:	83 7f       	andi	r24, 0xF3	; 243
     842:	85 bf       	out	0x35, r24	; 53
   
   GICR = (1<<INT0);
     844:	80 e4       	ldi	r24, 0x40	; 64
     846:	8b bf       	out	0x3b, r24	; 59
   MCUCR = MCUCR & 0b11111100;
     848:	85 b7       	in	r24, 0x35	; 53
     84a:	8c 7f       	andi	r24, 0xFC	; 252
     84c:	85 bf       	out	0x35, r24	; 53
   sei();
     84e:	78 94       	sei
   
   Lcd4_Init();
     850:	0e 94 10 03 	call	0x620	; 0x620 <Lcd4_Init>
   UART_init();
     854:	0e 94 a8 03 	call	0x750	; 0x750 <UART_init>
   ADC_init();
     858:	0e 94 b4 03 	call	0x768	; 0x768 <ADC_init>
  
    while (1) 
    {	
		if(wait){
     85c:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <wait>
     860:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <wait+0x1>
     864:	89 2b       	or	r24, r25
     866:	39 f0       	breq	.+14     	; 0x876 <__stack+0x17>
			if(end == 0)
     868:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <__data_end>
     86c:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <__data_end+0x1>
     870:	89 2b       	or	r24, r25
     872:	a1 f3       	breq	.-24     	; 0x85c <main+0x4c>
     874:	ee c1       	rjmp	.+988    	; 0xc52 <__stack+0x3f3>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     876:	8f ed       	ldi	r24, 0xDF	; 223
     878:	93 e9       	ldi	r25, 0x93	; 147
     87a:	24 e0       	ldi	r18, 0x04	; 4
     87c:	81 50       	subi	r24, 0x01	; 1
     87e:	90 40       	sbci	r25, 0x00	; 0
     880:	20 40       	sbci	r18, 0x00	; 0
     882:	e1 f7       	brne	.-8      	; 0x87c <__stack+0x1d>
     884:	00 c0       	rjmp	.+0      	; 0x886 <__stack+0x27>
     886:	00 00       	nop
				break;
			}
		}
		
		_delay_ms(1500);
		Lcd4_Clear();
     888:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
		Lcd4_Write_String("Checking temperature..");
     88c:	8b eb       	ldi	r24, 0xBB	; 187
     88e:	90 e0       	ldi	r25, 0x00	; 0
     890:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
		for(int i = 0; i < 8; i++){
     894:	00 e0       	ldi	r16, 0x00	; 0
     896:	10 e0       	ldi	r17, 0x00	; 0
     898:	0a c0       	rjmp	.+20     	; 0x8ae <__stack+0x4f>
			Lcd4_Shift_Left();
     89a:	0e 94 a1 03 	call	0x742	; 0x742 <Lcd4_Shift_Left>
     89e:	8f e4       	ldi	r24, 0x4F	; 79
     8a0:	93 ec       	ldi	r25, 0xC3	; 195
     8a2:	01 97       	sbiw	r24, 0x01	; 1
     8a4:	f1 f7       	brne	.-4      	; 0x8a2 <__stack+0x43>
     8a6:	00 c0       	rjmp	.+0      	; 0x8a8 <__stack+0x49>
     8a8:	00 00       	nop
		}
		
		_delay_ms(1500);
		Lcd4_Clear();
		Lcd4_Write_String("Checking temperature..");
		for(int i = 0; i < 8; i++){
     8aa:	0f 5f       	subi	r16, 0xFF	; 255
     8ac:	1f 4f       	sbci	r17, 0xFF	; 255
     8ae:	08 30       	cpi	r16, 0x08	; 8
     8b0:	11 05       	cpc	r17, r1
     8b2:	9c f3       	brlt	.-26     	; 0x89a <__stack+0x3b>
     8b4:	9f e3       	ldi	r25, 0x3F	; 63
     8b6:	2d e0       	ldi	r18, 0x0D	; 13
     8b8:	33 e0       	ldi	r19, 0x03	; 3
     8ba:	91 50       	subi	r25, 0x01	; 1
     8bc:	20 40       	sbci	r18, 0x00	; 0
     8be:	30 40       	sbci	r19, 0x00	; 0
     8c0:	e1 f7       	brne	.-8      	; 0x8ba <__stack+0x5b>
     8c2:	00 c0       	rjmp	.+0      	; 0x8c4 <__stack+0x65>
     8c4:	00 00       	nop
			Lcd4_Shift_Left();
			_delay_ms(200);
		}
		_delay_ms(1000);
		Lcd4_Clear();
     8c6:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
		Lcd4_Write_String("Temperature:");
     8ca:	82 ed       	ldi	r24, 0xD2	; 210
     8cc:	90 e0       	ldi	r25, 0x00	; 0
     8ce:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     8d2:	8f e3       	ldi	r24, 0x3F	; 63
     8d4:	9d e0       	ldi	r25, 0x0D	; 13
     8d6:	23 e0       	ldi	r18, 0x03	; 3
     8d8:	81 50       	subi	r24, 0x01	; 1
     8da:	90 40       	sbci	r25, 0x00	; 0
     8dc:	20 40       	sbci	r18, 0x00	; 0
     8de:	e1 f7       	brne	.-8      	; 0x8d8 <__stack+0x79>
     8e0:	00 c0       	rjmp	.+0      	; 0x8e2 <__stack+0x83>
     8e2:	00 00       	nop
		_delay_ms(1000);
		Lcd4_Set_Cursor(2,0);
     8e4:	60 e0       	ldi	r22, 0x00	; 0
     8e6:	82 e0       	ldi	r24, 0x02	; 2
     8e8:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Set_Cursor>
		temp_F = ADC_Read();
     8ec:	0e 94 b9 03 	call	0x772	; 0x772 <ADC_Read>
     8f0:	6b 01       	movw	r12, r22
     8f2:	7c 01       	movw	r14, r24
		dtostrf(temp_F,4,2,Fahrenheit);
     8f4:	8e 01       	movw	r16, r28
     8f6:	0f 5f       	subi	r16, 0xFF	; 255
     8f8:	1f 4f       	sbci	r17, 0xFF	; 255
     8fa:	22 e0       	ldi	r18, 0x02	; 2
     8fc:	44 e0       	ldi	r20, 0x04	; 4
     8fe:	0e 94 9d 07 	call	0xf3a	; 0xf3a <dtostrf>
		Lcd4_Write_String(Fahrenheit);
     902:	c8 01       	movw	r24, r16
     904:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     908:	3f e7       	ldi	r19, 0x7F	; 127
     90a:	8a e1       	ldi	r24, 0x1A	; 26
     90c:	96 e0       	ldi	r25, 0x06	; 6
     90e:	31 50       	subi	r19, 0x01	; 1
     910:	80 40       	sbci	r24, 0x00	; 0
     912:	90 40       	sbci	r25, 0x00	; 0
     914:	e1 f7       	brne	.-8      	; 0x90e <__stack+0xaf>
     916:	00 c0       	rjmp	.+0      	; 0x918 <__stack+0xb9>
     918:	00 00       	nop
		_delay_ms(2000);
		if( temp_F >= 99.50){
     91a:	20 e0       	ldi	r18, 0x00	; 0
     91c:	30 e0       	ldi	r19, 0x00	; 0
     91e:	47 ec       	ldi	r20, 0xC7	; 199
     920:	52 e4       	ldi	r21, 0x42	; 66
     922:	c7 01       	movw	r24, r14
     924:	b6 01       	movw	r22, r12
     926:	0e 94 8e 06 	call	0xd1c	; 0xd1c <__gesf2>
     92a:	88 23       	and	r24, r24
     92c:	0c f4       	brge	.+2      	; 0x930 <__stack+0xd1>
     92e:	41 c0       	rjmp	.+130    	; 0x9b2 <__stack+0x153>
			Lcd4_Clear();
     930:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
			Lcd4_Write_String("Temperature not normal");
     934:	8f ed       	ldi	r24, 0xDF	; 223
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
			
			for(int i = 0; i < 8; i++){
     93c:	00 e0       	ldi	r16, 0x00	; 0
     93e:	10 e0       	ldi	r17, 0x00	; 0
     940:	0a c0       	rjmp	.+20     	; 0x956 <__stack+0xf7>
				Lcd4_Shift_Left();
     942:	0e 94 a1 03 	call	0x742	; 0x742 <Lcd4_Shift_Left>
     946:	8f e4       	ldi	r24, 0x4F	; 79
     948:	93 ec       	ldi	r25, 0xC3	; 195
     94a:	01 97       	sbiw	r24, 0x01	; 1
     94c:	f1 f7       	brne	.-4      	; 0x94a <__stack+0xeb>
     94e:	00 c0       	rjmp	.+0      	; 0x950 <__stack+0xf1>
     950:	00 00       	nop
		_delay_ms(2000);
		if( temp_F >= 99.50){
			Lcd4_Clear();
			Lcd4_Write_String("Temperature not normal");
			
			for(int i = 0; i < 8; i++){
     952:	0f 5f       	subi	r16, 0xFF	; 255
     954:	1f 4f       	sbci	r17, 0xFF	; 255
     956:	08 30       	cpi	r16, 0x08	; 8
     958:	11 05       	cpc	r17, r1
     95a:	9c f3       	brlt	.-26     	; 0x942 <__stack+0xe3>
     95c:	9f e3       	ldi	r25, 0x3F	; 63
     95e:	2d e0       	ldi	r18, 0x0D	; 13
     960:	33 e0       	ldi	r19, 0x03	; 3
     962:	91 50       	subi	r25, 0x01	; 1
     964:	20 40       	sbci	r18, 0x00	; 0
     966:	30 40       	sbci	r19, 0x00	; 0
     968:	e1 f7       	brne	.-8      	; 0x962 <__stack+0x103>
     96a:	00 c0       	rjmp	.+0      	; 0x96c <__stack+0x10d>
     96c:	00 00       	nop
				Lcd4_Shift_Left();
				_delay_ms(200);
			}
			_delay_ms(1000);
			Lcd4_Clear();
     96e:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
			Lcd4_Write_String("You can't vote now");
     972:	86 ef       	ldi	r24, 0xF6	; 246
     974:	90 e0       	ldi	r25, 0x00	; 0
     976:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
			for(int i = 0; i < 8; i++){
     97a:	00 e0       	ldi	r16, 0x00	; 0
     97c:	10 e0       	ldi	r17, 0x00	; 0
     97e:	0a c0       	rjmp	.+20     	; 0x994 <__stack+0x135>
				Lcd4_Shift_Left();
     980:	0e 94 a1 03 	call	0x742	; 0x742 <Lcd4_Shift_Left>
     984:	8f e4       	ldi	r24, 0x4F	; 79
     986:	93 ec       	ldi	r25, 0xC3	; 195
     988:	01 97       	sbiw	r24, 0x01	; 1
     98a:	f1 f7       	brne	.-4      	; 0x988 <__stack+0x129>
     98c:	00 c0       	rjmp	.+0      	; 0x98e <__stack+0x12f>
     98e:	00 00       	nop
				_delay_ms(200);
			}
			_delay_ms(1000);
			Lcd4_Clear();
			Lcd4_Write_String("You can't vote now");
			for(int i = 0; i < 8; i++){
     990:	0f 5f       	subi	r16, 0xFF	; 255
     992:	1f 4f       	sbci	r17, 0xFF	; 255
     994:	08 30       	cpi	r16, 0x08	; 8
     996:	11 05       	cpc	r17, r1
     998:	9c f3       	brlt	.-26     	; 0x980 <__stack+0x121>
				Lcd4_Shift_Left();
				_delay_ms(200);
			}
			Lcd4_Clear();
     99a:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
     99e:	9f ef       	ldi	r25, 0xFF	; 255
     9a0:	24 e3       	ldi	r18, 0x34	; 52
     9a2:	3c e0       	ldi	r19, 0x0C	; 12
     9a4:	91 50       	subi	r25, 0x01	; 1
     9a6:	20 40       	sbci	r18, 0x00	; 0
     9a8:	30 40       	sbci	r19, 0x00	; 0
     9aa:	e1 f7       	brne	.-8      	; 0x9a4 <__stack+0x145>
     9ac:	00 c0       	rjmp	.+0      	; 0x9ae <__stack+0x14f>
     9ae:	00 00       	nop
			_delay_ms(4000);
			continue;
     9b0:	55 cf       	rjmp	.-342    	; 0x85c <main+0x4c>
			
		}
		unsigned char id[10];
	    int count = 1;
	    Lcd4_Clear();
     9b2:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
	    Lcd4_Write_String("Waiting for  ");
     9b6:	89 e0       	ldi	r24, 0x09	; 9
     9b8:	91 e0       	ldi	r25, 0x01	; 1
     9ba:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     9be:	8f e9       	ldi	r24, 0x9F	; 159
     9c0:	96 e8       	ldi	r25, 0x86	; 134
     9c2:	21 e0       	ldi	r18, 0x01	; 1
     9c4:	81 50       	subi	r24, 0x01	; 1
     9c6:	90 40       	sbci	r25, 0x00	; 0
     9c8:	20 40       	sbci	r18, 0x00	; 0
     9ca:	e1 f7       	brne	.-8      	; 0x9c4 <__stack+0x165>
     9cc:	00 c0       	rjmp	.+0      	; 0x9ce <__stack+0x16f>
     9ce:	00 00       	nop
	    _delay_ms(500);
	    Lcd4_Set_Cursor(2, 1);
     9d0:	61 e0       	ldi	r22, 0x01	; 1
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Set_Cursor>
	    Lcd4_Write_String("RFID Tag");
     9d8:	87 e1       	ldi	r24, 0x17	; 23
     9da:	91 e0       	ldi	r25, 0x01	; 1
     9dc:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     9e0:	3f e9       	ldi	r19, 0x9F	; 159
     9e2:	86 e8       	ldi	r24, 0x86	; 134
     9e4:	91 e0       	ldi	r25, 0x01	; 1
     9e6:	31 50       	subi	r19, 0x01	; 1
     9e8:	80 40       	sbci	r24, 0x00	; 0
     9ea:	90 40       	sbci	r25, 0x00	; 0
     9ec:	e1 f7       	brne	.-8      	; 0x9e6 <__stack+0x187>
     9ee:	00 c0       	rjmp	.+0      	; 0x9f0 <__stack+0x191>
     9f0:	00 00       	nop
	    _delay_ms(500);
	    Lcd4_Clear();
     9f2:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
	    
		Lcd4_Write_String("Reading Tag...");
     9f6:	80 e2       	ldi	r24, 0x20	; 32
     9f8:	91 e0       	ldi	r25, 0x01	; 1
     9fa:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
	    Lcd4_Set_Cursor(2, 0);
     9fe:	60 e0       	ldi	r22, 0x00	; 0
     a00:	82 e0       	ldi	r24, 0x02	; 2
     a02:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Set_Cursor>
	    
	    int match = 0;
     a06:	e1 2c       	mov	r14, r1
     a08:	f1 2c       	mov	r15, r1
			_delay_ms(4000);
			continue;
			
		}
		unsigned char id[10];
	    int count = 1;
     a0a:	01 e0       	ldi	r16, 0x01	; 1
     a0c:	10 e0       	ldi	r17, 0x00	; 0
	    Lcd4_Set_Cursor(2, 0);
	    
	    int match = 0;
		
		while(1){
			id[count-1] = UART_RxChar();
     a0e:	0e 94 de 03 	call	0x7bc	; 0x7bc <UART_RxChar>
     a12:	f8 01       	movw	r30, r16
     a14:	31 97       	sbiw	r30, 0x01	; 1
     a16:	26 e0       	ldi	r18, 0x06	; 6
     a18:	30 e0       	ldi	r19, 0x00	; 0
     a1a:	2c 0f       	add	r18, r28
     a1c:	3d 1f       	adc	r19, r29
     a1e:	e2 0f       	add	r30, r18
     a20:	f3 1f       	adc	r31, r19
     a22:	80 83       	st	Z, r24
			Lcd4_Write_Char(id[count-1]);
     a24:	0e 94 44 03 	call	0x688	; 0x688 <Lcd4_Write_Char>
			if(count < id_len){
     a28:	60 91 aa 00 	lds	r22, 0x00AA	; 0x8000aa <id_len>
     a2c:	70 91 ab 00 	lds	r23, 0x00AB	; 0x8000ab <id_len+0x1>
     a30:	06 17       	cp	r16, r22
     a32:	17 07       	cpc	r17, r23
     a34:	1c f4       	brge	.+6      	; 0xa3c <__stack+0x1dd>
				count++;
     a36:	0f 5f       	subi	r16, 0xFF	; 255
     a38:	1f 4f       	sbci	r17, 0xFF	; 255
				continue;
     a3a:	e9 cf       	rjmp	.-46     	; 0xa0e <__stack+0x1af>
			}
			else if(count == id_len){
     a3c:	06 17       	cp	r16, r22
     a3e:	17 07       	cpc	r17, r23
     a40:	09 f0       	breq	.+2      	; 0xa44 <__stack+0x1e5>
     a42:	54 c0       	rjmp	.+168    	; 0xaec <__stack+0x28d>
     a44:	4a c0       	rjmp	.+148    	; 0xada <__stack+0x27b>
				int j;
				for(int i = 0; i<total_id; i++){
					for(j = 0; j<id_len; j++){
						if(valid_id[i][j] != id[j]){
     a46:	ca 01       	movw	r24, r20
     a48:	88 0f       	add	r24, r24
     a4a:	99 1f       	adc	r25, r25
     a4c:	88 0f       	add	r24, r24
     a4e:	99 1f       	adc	r25, r25
     a50:	88 0f       	add	r24, r24
     a52:	99 1f       	adc	r25, r25
     a54:	fa 01       	movw	r30, r20
     a56:	ee 0f       	add	r30, r30
     a58:	ff 1f       	adc	r31, r31
     a5a:	e8 0f       	add	r30, r24
     a5c:	f9 1f       	adc	r31, r25
     a5e:	ec 59       	subi	r30, 0x9C	; 156
     a60:	ff 4f       	sbci	r31, 0xFF	; 255
     a62:	e2 0f       	add	r30, r18
     a64:	f3 1f       	adc	r31, r19
     a66:	90 81       	ld	r25, Z
     a68:	e6 e0       	ldi	r30, 0x06	; 6
     a6a:	f0 e0       	ldi	r31, 0x00	; 0
     a6c:	ec 0f       	add	r30, r28
     a6e:	fd 1f       	adc	r31, r29
     a70:	e2 0f       	add	r30, r18
     a72:	f3 1f       	adc	r31, r19
     a74:	80 81       	ld	r24, Z
     a76:	98 13       	cpse	r25, r24
     a78:	08 c0       	rjmp	.+16     	; 0xa8a <__stack+0x22b>
				continue;
			}
			else if(count == id_len){
				int j;
				for(int i = 0; i<total_id; i++){
					for(j = 0; j<id_len; j++){
     a7a:	2f 5f       	subi	r18, 0xFF	; 255
     a7c:	3f 4f       	sbci	r19, 0xFF	; 255
     a7e:	02 c0       	rjmp	.+4      	; 0xa84 <__stack+0x225>
     a80:	20 e0       	ldi	r18, 0x00	; 0
     a82:	30 e0       	ldi	r19, 0x00	; 0
     a84:	26 17       	cp	r18, r22
     a86:	37 07       	cpc	r19, r23
     a88:	f4 f2       	brlt	.-68     	; 0xa46 <__stack+0x1e7>
						if(valid_id[i][j] != id[j]){
							break;
						}
					}
					if(j == id_len){
     a8a:	26 17       	cp	r18, r22
     a8c:	37 07       	cpc	r19, r23
     a8e:	11 f5       	brne	.+68     	; 0xad4 <__stack+0x275>
						if(!voted[i]){
     a90:	fa 01       	movw	r30, r20
     a92:	ee 0f       	add	r30, r30
     a94:	ff 1f       	adc	r31, r31
     a96:	e0 56       	subi	r30, 0x60	; 96
     a98:	fe 4f       	sbci	r31, 0xFE	; 254
     a9a:	80 81       	ld	r24, Z
     a9c:	91 81       	ldd	r25, Z+1	; 0x01
     a9e:	00 97       	sbiw	r24, 0x00	; 0
     aa0:	69 f4       	brne	.+26     	; 0xabc <__stack+0x25d>
							voted[i] = 1;
     aa2:	44 0f       	add	r20, r20
     aa4:	55 1f       	adc	r21, r21
     aa6:	fa 01       	movw	r30, r20
     aa8:	e0 56       	subi	r30, 0x60	; 96
     aaa:	fe 4f       	sbci	r31, 0xFE	; 254
     aac:	81 e0       	ldi	r24, 0x01	; 1
     aae:	90 e0       	ldi	r25, 0x00	; 0
     ab0:	91 83       	std	Z+1, r25	; 0x01
     ab2:	80 83       	st	Z, r24
							match = 1;
     ab4:	ee 24       	eor	r14, r14
     ab6:	e3 94       	inc	r14
     ab8:	f1 2c       	mov	r15, r1
							break;	
     aba:	18 c0       	rjmp	.+48     	; 0xaec <__stack+0x28d>
						}
						else if(voted[i]){
     abc:	89 2b       	or	r24, r25
     abe:	51 f0       	breq	.+20     	; 0xad4 <__stack+0x275>
							match = 1;
							voteflag = 1;
     ac0:	81 e0       	ldi	r24, 0x01	; 1
     ac2:	90 e0       	ldi	r25, 0x00	; 0
     ac4:	90 93 9f 01 	sts	0x019F, r25	; 0x80019f <voteflag+0x1>
     ac8:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <voteflag>
							voted[i] = 1;
							match = 1;
							break;	
						}
						else if(voted[i]){
							match = 1;
     acc:	ee 24       	eor	r14, r14
     ace:	e3 94       	inc	r14
     ad0:	f1 2c       	mov	r15, r1
							voteflag = 1;
							break;
     ad2:	0c c0       	rjmp	.+24     	; 0xaec <__stack+0x28d>
				count++;
				continue;
			}
			else if(count == id_len){
				int j;
				for(int i = 0; i<total_id; i++){
     ad4:	4f 5f       	subi	r20, 0xFF	; 255
     ad6:	5f 4f       	sbci	r21, 0xFF	; 255
     ad8:	02 c0       	rjmp	.+4      	; 0xade <__stack+0x27f>
     ada:	40 e0       	ldi	r20, 0x00	; 0
     adc:	50 e0       	ldi	r21, 0x00	; 0
     ade:	80 91 ac 00 	lds	r24, 0x00AC	; 0x8000ac <total_id>
     ae2:	90 91 ad 00 	lds	r25, 0x00AD	; 0x8000ad <total_id+0x1>
     ae6:	48 17       	cp	r20, r24
     ae8:	59 07       	cpc	r21, r25
     aea:	54 f2       	brlt	.-108    	; 0xa80 <__stack+0x221>
							break;
						}
					}
				}
			}
			if(match == 0){
     aec:	e1 14       	cp	r14, r1
     aee:	f1 04       	cpc	r15, r1
     af0:	c1 f4       	brne	.+48     	; 0xb22 <__stack+0x2c3>
				Lcd4_Clear();
     af2:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
				Lcd4_Write_String("ID match: ");
     af6:	8f e2       	ldi	r24, 0x2F	; 47
     af8:	91 e0       	ldi	r25, 0x01	; 1
     afa:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
				Lcd4_Set_Cursor(2,0);
     afe:	60 e0       	ldi	r22, 0x00	; 0
     b00:	82 e0       	ldi	r24, 0x02	; 2
     b02:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Set_Cursor>
				Lcd4_Write_String("Not found. Reset");
     b06:	8a e3       	ldi	r24, 0x3A	; 58
     b08:	91 e0       	ldi	r25, 0x01	; 1
     b0a:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     b0e:	3f e9       	ldi	r19, 0x9F	; 159
     b10:	86 e8       	ldi	r24, 0x86	; 134
     b12:	91 e0       	ldi	r25, 0x01	; 1
     b14:	31 50       	subi	r19, 0x01	; 1
     b16:	80 40       	sbci	r24, 0x00	; 0
     b18:	90 40       	sbci	r25, 0x00	; 0
     b1a:	e1 f7       	brne	.-8      	; 0xb14 <__stack+0x2b5>
     b1c:	00 c0       	rjmp	.+0      	; 0xb1e <__stack+0x2bf>
     b1e:	00 00       	nop
     b20:	9d ce       	rjmp	.-710    	; 0x85c <main+0x4c>
				_delay_ms(500);
				break;
			}
			else if(match == 1){
     b22:	21 e0       	ldi	r18, 0x01	; 1
     b24:	e2 16       	cp	r14, r18
     b26:	f1 04       	cpc	r15, r1
     b28:	09 f0       	breq	.+2      	; 0xb2c <__stack+0x2cd>
     b2a:	71 cf       	rjmp	.-286    	; 0xa0e <__stack+0x1af>
				Lcd4_Clear();
     b2c:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
				if(voteflag){
     b30:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <voteflag>
     b34:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <voteflag+0x1>
     b38:	89 2b       	or	r24, r25
     b3a:	29 f1       	breq	.+74     	; 0xb86 <__stack+0x327>
					Lcd4_Write_String("This Person Has");
     b3c:	8b e4       	ldi	r24, 0x4B	; 75
     b3e:	91 e0       	ldi	r25, 0x01	; 1
     b40:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     b44:	3f e3       	ldi	r19, 0x3F	; 63
     b46:	8d e0       	ldi	r24, 0x0D	; 13
     b48:	93 e0       	ldi	r25, 0x03	; 3
     b4a:	31 50       	subi	r19, 0x01	; 1
     b4c:	80 40       	sbci	r24, 0x00	; 0
     b4e:	90 40       	sbci	r25, 0x00	; 0
     b50:	e1 f7       	brne	.-8      	; 0xb4a <__stack+0x2eb>
     b52:	00 c0       	rjmp	.+0      	; 0xb54 <__stack+0x2f5>
     b54:	00 00       	nop
					_delay_ms(1000);
					Lcd4_Set_Cursor(2, 0);
     b56:	60 e0       	ldi	r22, 0x00	; 0
     b58:	82 e0       	ldi	r24, 0x02	; 2
     b5a:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Set_Cursor>
					Lcd4_Write_String("Already Voted");
     b5e:	8b e5       	ldi	r24, 0x5B	; 91
     b60:	91 e0       	ldi	r25, 0x01	; 1
     b62:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     b66:	2f e1       	ldi	r18, 0x1F	; 31
     b68:	31 ea       	ldi	r19, 0xA1	; 161
     b6a:	87 e0       	ldi	r24, 0x07	; 7
     b6c:	21 50       	subi	r18, 0x01	; 1
     b6e:	30 40       	sbci	r19, 0x00	; 0
     b70:	80 40       	sbci	r24, 0x00	; 0
     b72:	e1 f7       	brne	.-8      	; 0xb6c <__stack+0x30d>
     b74:	00 c0       	rjmp	.+0      	; 0xb76 <__stack+0x317>
     b76:	00 00       	nop
					_delay_ms(2500);
					Lcd4_Clear();
     b78:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
					voteflag = 0;
     b7c:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <voteflag+0x1>
     b80:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <voteflag>
					break;
     b84:	6b ce       	rjmp	.-810    	; 0x85c <main+0x4c>
				}
				Lcd4_Write_String("ID match found!");
     b86:	89 e6       	ldi	r24, 0x69	; 105
     b88:	91 e0       	ldi	r25, 0x01	; 1
     b8a:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     b8e:	9f e1       	ldi	r25, 0x1F	; 31
     b90:	21 ea       	ldi	r18, 0xA1	; 161
     b92:	37 e0       	ldi	r19, 0x07	; 7
     b94:	91 50       	subi	r25, 0x01	; 1
     b96:	20 40       	sbci	r18, 0x00	; 0
     b98:	30 40       	sbci	r19, 0x00	; 0
     b9a:	e1 f7       	brne	.-8      	; 0xb94 <__stack+0x335>
     b9c:	00 c0       	rjmp	.+0      	; 0xb9e <__stack+0x33f>
     b9e:	00 00       	nop
				_delay_ms(2500);
				Lcd4_Clear();
     ba0:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
				//Generating Random Lock Code
				int lock = rand() % (9999 + 1 - 1000) + 1000;
     ba4:	0e 94 09 08 	call	0x1012	; 0x1012 <rand>
     ba8:	68 e2       	ldi	r22, 0x28	; 40
     baa:	73 e2       	ldi	r23, 0x23	; 35
     bac:	0e 94 75 07 	call	0xeea	; 0xeea <__divmodhi4>
     bb0:	88 51       	subi	r24, 0x18	; 24
     bb2:	9c 4f       	sbci	r25, 0xFC	; 252
				unsigned char locks[4];
				
				int mod = 0;
     bb4:	20 e0       	ldi	r18, 0x00	; 0
     bb6:	30 e0       	ldi	r19, 0x00	; 0
				while(lock != 0){
     bb8:	10 c0       	rjmp	.+32     	; 0xbda <__stack+0x37b>
					locks[mod] = (lock % 10) + '0';
     bba:	6a e0       	ldi	r22, 0x0A	; 10
     bbc:	70 e0       	ldi	r23, 0x00	; 0
     bbe:	0e 94 75 07 	call	0xeea	; 0xeea <__divmodhi4>
     bc2:	e0 e1       	ldi	r30, 0x10	; 16
     bc4:	f0 e0       	ldi	r31, 0x00	; 0
     bc6:	ec 0f       	add	r30, r28
     bc8:	fd 1f       	adc	r31, r29
     bca:	e2 0f       	add	r30, r18
     bcc:	f3 1f       	adc	r31, r19
     bce:	80 5d       	subi	r24, 0xD0	; 208
     bd0:	80 83       	st	Z, r24
					lock = lock / 10;
     bd2:	86 2f       	mov	r24, r22
     bd4:	97 2f       	mov	r25, r23
					mod++;
     bd6:	2f 5f       	subi	r18, 0xFF	; 255
     bd8:	3f 4f       	sbci	r19, 0xFF	; 255
				//Generating Random Lock Code
				int lock = rand() % (9999 + 1 - 1000) + 1000;
				unsigned char locks[4];
				
				int mod = 0;
				while(lock != 0){
     bda:	00 97       	sbiw	r24, 0x00	; 0
     bdc:	71 f7       	brne	.-36     	; 0xbba <__stack+0x35b>
					locks[mod] = (lock % 10) + '0';
					lock = lock / 10;
					mod++;
					
				}
				Lcd4_Write_String("Your Lock Code: ");
     bde:	89 e7       	ldi	r24, 0x79	; 121
     be0:	91 e0       	ldi	r25, 0x01	; 1
     be2:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
				Lcd4_Set_Cursor(2, 0);
     be6:	60 e0       	ldi	r22, 0x00	; 0
     be8:	82 e0       	ldi	r24, 0x02	; 2
     bea:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Set_Cursor>
				for(int i = 3; i!=-1; i--){
     bee:	03 e0       	ldi	r16, 0x03	; 3
     bf0:	10 e0       	ldi	r17, 0x00	; 0
     bf2:	15 c0       	rjmp	.+42     	; 0xc1e <__stack+0x3bf>
					Lcd4_Write_Char(locks[i]);
     bf4:	e0 e1       	ldi	r30, 0x10	; 16
     bf6:	f0 e0       	ldi	r31, 0x00	; 0
     bf8:	ec 0f       	add	r30, r28
     bfa:	fd 1f       	adc	r31, r29
     bfc:	e0 0f       	add	r30, r16
     bfe:	f1 1f       	adc	r31, r17
     c00:	f0 80       	ld	r15, Z
     c02:	8f 2d       	mov	r24, r15
     c04:	0e 94 44 03 	call	0x688	; 0x688 <Lcd4_Write_Char>
     c08:	87 ea       	ldi	r24, 0xA7	; 167
     c0a:	91 e6       	ldi	r25, 0x61	; 97
     c0c:	01 97       	sbiw	r24, 0x01	; 1
     c0e:	f1 f7       	brne	.-4      	; 0xc0c <__stack+0x3ad>
     c10:	00 c0       	rjmp	.+0      	; 0xc12 <__stack+0x3b3>
     c12:	00 00       	nop
					_delay_ms(100);
					UART_TxChar(locks[i]);
     c14:	8f 2d       	mov	r24, r15
     c16:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <UART_TxChar>
					mod++;
					
				}
				Lcd4_Write_String("Your Lock Code: ");
				Lcd4_Set_Cursor(2, 0);
				for(int i = 3; i!=-1; i--){
     c1a:	01 50       	subi	r16, 0x01	; 1
     c1c:	11 09       	sbc	r17, r1
     c1e:	0f 3f       	cpi	r16, 0xFF	; 255
     c20:	9f ef       	ldi	r25, 0xFF	; 255
     c22:	19 07       	cpc	r17, r25
     c24:	39 f7       	brne	.-50     	; 0xbf4 <__stack+0x395>
     c26:	2f e3       	ldi	r18, 0x3F	; 63
     c28:	3d e0       	ldi	r19, 0x0D	; 13
     c2a:	83 e0       	ldi	r24, 0x03	; 3
     c2c:	21 50       	subi	r18, 0x01	; 1
     c2e:	30 40       	sbci	r19, 0x00	; 0
     c30:	80 40       	sbci	r24, 0x00	; 0
     c32:	e1 f7       	brne	.-8      	; 0xc2c <__stack+0x3cd>
     c34:	00 c0       	rjmp	.+0      	; 0xc36 <__stack+0x3d7>
     c36:	00 00       	nop
					_delay_ms(100);
					UART_TxChar(locks[i]);
				}
				
				_delay_ms(1000);
				Lcd4_Clear();
     c38:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
				Lcd4_Write_String("Please Wait...");
     c3c:	8a e8       	ldi	r24, 0x8A	; 138
     c3e:	91 e0       	ldi	r25, 0x01	; 1
     c40:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
				wait = 1;
     c44:	81 e0       	ldi	r24, 0x01	; 1
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <wait+0x1>
     c4c:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <wait>
				break;
     c50:	05 ce       	rjmp	.-1014   	; 0x85c <main+0x4c>
     c52:	8f e4       	ldi	r24, 0x4F	; 79
     c54:	93 ec       	ldi	r25, 0xC3	; 195
     c56:	01 97       	sbiw	r24, 0x01	; 1
     c58:	f1 f7       	brne	.-4      	; 0xc56 <__stack+0x3f7>
     c5a:	00 c0       	rjmp	.+0      	; 0xc5c <__stack+0x3fd>
     c5c:	00 00       	nop
		if(wait){
			if(end == 0)
				continue;
			else{
				_delay_ms(200);
				Lcd4_Clear();
     c5e:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
				Lcd4_Write_String("Voting Ended");
     c62:	8e ea       	ldi	r24, 0xAE	; 174
     c64:	90 e0       	ldi	r25, 0x00	; 0
     c66:	0e 94 8b 03 	call	0x716	; 0x716 <Lcd4_Write_String>
     c6a:	9f ef       	ldi	r25, 0xFF	; 255
     c6c:	20 e7       	ldi	r18, 0x70	; 112
     c6e:	32 e0       	ldi	r19, 0x02	; 2
     c70:	91 50       	subi	r25, 0x01	; 1
     c72:	20 40       	sbci	r18, 0x00	; 0
     c74:	30 40       	sbci	r19, 0x00	; 0
     c76:	e1 f7       	brne	.-8      	; 0xc70 <__stack+0x411>
     c78:	00 c0       	rjmp	.+0      	; 0xc7a <__stack+0x41b>
     c7a:	00 00       	nop
				_delay_ms(800);
				Lcd4_Clear();
     c7c:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Clear>
				
			}
		}
		
	}
}
     c80:	80 e0       	ldi	r24, 0x00	; 0
     c82:	90 e0       	ldi	r25, 0x00	; 0
     c84:	63 96       	adiw	r28, 0x13	; 19
     c86:	0f b6       	in	r0, 0x3f	; 63
     c88:	f8 94       	cli
     c8a:	de bf       	out	0x3e, r29	; 62
     c8c:	0f be       	out	0x3f, r0	; 63
     c8e:	cd bf       	out	0x3d, r28	; 61
     c90:	df 91       	pop	r29
     c92:	cf 91       	pop	r28
     c94:	1f 91       	pop	r17
     c96:	0f 91       	pop	r16
     c98:	ff 90       	pop	r15
     c9a:	ef 90       	pop	r14
     c9c:	df 90       	pop	r13
     c9e:	cf 90       	pop	r12
     ca0:	08 95       	ret

00000ca2 <__floatunsisf>:
     ca2:	e8 94       	clt
     ca4:	09 c0       	rjmp	.+18     	; 0xcb8 <__floatsisf+0x12>

00000ca6 <__floatsisf>:
     ca6:	97 fb       	bst	r25, 7
     ca8:	3e f4       	brtc	.+14     	; 0xcb8 <__floatsisf+0x12>
     caa:	90 95       	com	r25
     cac:	80 95       	com	r24
     cae:	70 95       	com	r23
     cb0:	61 95       	neg	r22
     cb2:	7f 4f       	sbci	r23, 0xFF	; 255
     cb4:	8f 4f       	sbci	r24, 0xFF	; 255
     cb6:	9f 4f       	sbci	r25, 0xFF	; 255
     cb8:	99 23       	and	r25, r25
     cba:	a9 f0       	breq	.+42     	; 0xce6 <__floatsisf+0x40>
     cbc:	f9 2f       	mov	r31, r25
     cbe:	96 e9       	ldi	r25, 0x96	; 150
     cc0:	bb 27       	eor	r27, r27
     cc2:	93 95       	inc	r25
     cc4:	f6 95       	lsr	r31
     cc6:	87 95       	ror	r24
     cc8:	77 95       	ror	r23
     cca:	67 95       	ror	r22
     ccc:	b7 95       	ror	r27
     cce:	f1 11       	cpse	r31, r1
     cd0:	f8 cf       	rjmp	.-16     	; 0xcc2 <__floatsisf+0x1c>
     cd2:	fa f4       	brpl	.+62     	; 0xd12 <__floatsisf+0x6c>
     cd4:	bb 0f       	add	r27, r27
     cd6:	11 f4       	brne	.+4      	; 0xcdc <__floatsisf+0x36>
     cd8:	60 ff       	sbrs	r22, 0
     cda:	1b c0       	rjmp	.+54     	; 0xd12 <__floatsisf+0x6c>
     cdc:	6f 5f       	subi	r22, 0xFF	; 255
     cde:	7f 4f       	sbci	r23, 0xFF	; 255
     ce0:	8f 4f       	sbci	r24, 0xFF	; 255
     ce2:	9f 4f       	sbci	r25, 0xFF	; 255
     ce4:	16 c0       	rjmp	.+44     	; 0xd12 <__floatsisf+0x6c>
     ce6:	88 23       	and	r24, r24
     ce8:	11 f0       	breq	.+4      	; 0xcee <__floatsisf+0x48>
     cea:	96 e9       	ldi	r25, 0x96	; 150
     cec:	11 c0       	rjmp	.+34     	; 0xd10 <__floatsisf+0x6a>
     cee:	77 23       	and	r23, r23
     cf0:	21 f0       	breq	.+8      	; 0xcfa <__floatsisf+0x54>
     cf2:	9e e8       	ldi	r25, 0x8E	; 142
     cf4:	87 2f       	mov	r24, r23
     cf6:	76 2f       	mov	r23, r22
     cf8:	05 c0       	rjmp	.+10     	; 0xd04 <__floatsisf+0x5e>
     cfa:	66 23       	and	r22, r22
     cfc:	71 f0       	breq	.+28     	; 0xd1a <__floatsisf+0x74>
     cfe:	96 e8       	ldi	r25, 0x86	; 134
     d00:	86 2f       	mov	r24, r22
     d02:	70 e0       	ldi	r23, 0x00	; 0
     d04:	60 e0       	ldi	r22, 0x00	; 0
     d06:	2a f0       	brmi	.+10     	; 0xd12 <__floatsisf+0x6c>
     d08:	9a 95       	dec	r25
     d0a:	66 0f       	add	r22, r22
     d0c:	77 1f       	adc	r23, r23
     d0e:	88 1f       	adc	r24, r24
     d10:	da f7       	brpl	.-10     	; 0xd08 <__floatsisf+0x62>
     d12:	88 0f       	add	r24, r24
     d14:	96 95       	lsr	r25
     d16:	87 95       	ror	r24
     d18:	97 f9       	bld	r25, 7
     d1a:	08 95       	ret

00000d1c <__gesf2>:
     d1c:	0e 94 00 07 	call	0xe00	; 0xe00 <__fp_cmp>
     d20:	08 f4       	brcc	.+2      	; 0xd24 <__gesf2+0x8>
     d22:	8f ef       	ldi	r24, 0xFF	; 255
     d24:	08 95       	ret

00000d26 <__mulsf3>:
     d26:	0e 94 a6 06 	call	0xd4c	; 0xd4c <__mulsf3x>
     d2a:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__fp_round>
     d2e:	0e 94 2d 07 	call	0xe5a	; 0xe5a <__fp_pscA>
     d32:	38 f0       	brcs	.+14     	; 0xd42 <__mulsf3+0x1c>
     d34:	0e 94 34 07 	call	0xe68	; 0xe68 <__fp_pscB>
     d38:	20 f0       	brcs	.+8      	; 0xd42 <__mulsf3+0x1c>
     d3a:	95 23       	and	r25, r21
     d3c:	11 f0       	breq	.+4      	; 0xd42 <__mulsf3+0x1c>
     d3e:	0c 94 24 07 	jmp	0xe48	; 0xe48 <__fp_inf>
     d42:	0c 94 2a 07 	jmp	0xe54	; 0xe54 <__fp_nan>
     d46:	11 24       	eor	r1, r1
     d48:	0c 94 6f 07 	jmp	0xede	; 0xede <__fp_szero>

00000d4c <__mulsf3x>:
     d4c:	0e 94 4c 07 	call	0xe98	; 0xe98 <__fp_split3>
     d50:	70 f3       	brcs	.-36     	; 0xd2e <__mulsf3+0x8>

00000d52 <__mulsf3_pse>:
     d52:	95 9f       	mul	r25, r21
     d54:	c1 f3       	breq	.-16     	; 0xd46 <__mulsf3+0x20>
     d56:	95 0f       	add	r25, r21
     d58:	50 e0       	ldi	r21, 0x00	; 0
     d5a:	55 1f       	adc	r21, r21
     d5c:	62 9f       	mul	r22, r18
     d5e:	f0 01       	movw	r30, r0
     d60:	72 9f       	mul	r23, r18
     d62:	bb 27       	eor	r27, r27
     d64:	f0 0d       	add	r31, r0
     d66:	b1 1d       	adc	r27, r1
     d68:	63 9f       	mul	r22, r19
     d6a:	aa 27       	eor	r26, r26
     d6c:	f0 0d       	add	r31, r0
     d6e:	b1 1d       	adc	r27, r1
     d70:	aa 1f       	adc	r26, r26
     d72:	64 9f       	mul	r22, r20
     d74:	66 27       	eor	r22, r22
     d76:	b0 0d       	add	r27, r0
     d78:	a1 1d       	adc	r26, r1
     d7a:	66 1f       	adc	r22, r22
     d7c:	82 9f       	mul	r24, r18
     d7e:	22 27       	eor	r18, r18
     d80:	b0 0d       	add	r27, r0
     d82:	a1 1d       	adc	r26, r1
     d84:	62 1f       	adc	r22, r18
     d86:	73 9f       	mul	r23, r19
     d88:	b0 0d       	add	r27, r0
     d8a:	a1 1d       	adc	r26, r1
     d8c:	62 1f       	adc	r22, r18
     d8e:	83 9f       	mul	r24, r19
     d90:	a0 0d       	add	r26, r0
     d92:	61 1d       	adc	r22, r1
     d94:	22 1f       	adc	r18, r18
     d96:	74 9f       	mul	r23, r20
     d98:	33 27       	eor	r19, r19
     d9a:	a0 0d       	add	r26, r0
     d9c:	61 1d       	adc	r22, r1
     d9e:	23 1f       	adc	r18, r19
     da0:	84 9f       	mul	r24, r20
     da2:	60 0d       	add	r22, r0
     da4:	21 1d       	adc	r18, r1
     da6:	82 2f       	mov	r24, r18
     da8:	76 2f       	mov	r23, r22
     daa:	6a 2f       	mov	r22, r26
     dac:	11 24       	eor	r1, r1
     dae:	9f 57       	subi	r25, 0x7F	; 127
     db0:	50 40       	sbci	r21, 0x00	; 0
     db2:	9a f0       	brmi	.+38     	; 0xdda <__mulsf3_pse+0x88>
     db4:	f1 f0       	breq	.+60     	; 0xdf2 <__mulsf3_pse+0xa0>
     db6:	88 23       	and	r24, r24
     db8:	4a f0       	brmi	.+18     	; 0xdcc <__mulsf3_pse+0x7a>
     dba:	ee 0f       	add	r30, r30
     dbc:	ff 1f       	adc	r31, r31
     dbe:	bb 1f       	adc	r27, r27
     dc0:	66 1f       	adc	r22, r22
     dc2:	77 1f       	adc	r23, r23
     dc4:	88 1f       	adc	r24, r24
     dc6:	91 50       	subi	r25, 0x01	; 1
     dc8:	50 40       	sbci	r21, 0x00	; 0
     dca:	a9 f7       	brne	.-22     	; 0xdb6 <__mulsf3_pse+0x64>
     dcc:	9e 3f       	cpi	r25, 0xFE	; 254
     dce:	51 05       	cpc	r21, r1
     dd0:	80 f0       	brcs	.+32     	; 0xdf2 <__mulsf3_pse+0xa0>
     dd2:	0c 94 24 07 	jmp	0xe48	; 0xe48 <__fp_inf>
     dd6:	0c 94 6f 07 	jmp	0xede	; 0xede <__fp_szero>
     dda:	5f 3f       	cpi	r21, 0xFF	; 255
     ddc:	e4 f3       	brlt	.-8      	; 0xdd6 <__mulsf3_pse+0x84>
     dde:	98 3e       	cpi	r25, 0xE8	; 232
     de0:	d4 f3       	brlt	.-12     	; 0xdd6 <__mulsf3_pse+0x84>
     de2:	86 95       	lsr	r24
     de4:	77 95       	ror	r23
     de6:	67 95       	ror	r22
     de8:	b7 95       	ror	r27
     dea:	f7 95       	ror	r31
     dec:	e7 95       	ror	r30
     dee:	9f 5f       	subi	r25, 0xFF	; 255
     df0:	c1 f7       	brne	.-16     	; 0xde2 <__mulsf3_pse+0x90>
     df2:	fe 2b       	or	r31, r30
     df4:	88 0f       	add	r24, r24
     df6:	91 1d       	adc	r25, r1
     df8:	96 95       	lsr	r25
     dfa:	87 95       	ror	r24
     dfc:	97 f9       	bld	r25, 7
     dfe:	08 95       	ret

00000e00 <__fp_cmp>:
     e00:	99 0f       	add	r25, r25
     e02:	00 08       	sbc	r0, r0
     e04:	55 0f       	add	r21, r21
     e06:	aa 0b       	sbc	r26, r26
     e08:	e0 e8       	ldi	r30, 0x80	; 128
     e0a:	fe ef       	ldi	r31, 0xFE	; 254
     e0c:	16 16       	cp	r1, r22
     e0e:	17 06       	cpc	r1, r23
     e10:	e8 07       	cpc	r30, r24
     e12:	f9 07       	cpc	r31, r25
     e14:	c0 f0       	brcs	.+48     	; 0xe46 <__fp_cmp+0x46>
     e16:	12 16       	cp	r1, r18
     e18:	13 06       	cpc	r1, r19
     e1a:	e4 07       	cpc	r30, r20
     e1c:	f5 07       	cpc	r31, r21
     e1e:	98 f0       	brcs	.+38     	; 0xe46 <__fp_cmp+0x46>
     e20:	62 1b       	sub	r22, r18
     e22:	73 0b       	sbc	r23, r19
     e24:	84 0b       	sbc	r24, r20
     e26:	95 0b       	sbc	r25, r21
     e28:	39 f4       	brne	.+14     	; 0xe38 <__fp_cmp+0x38>
     e2a:	0a 26       	eor	r0, r26
     e2c:	61 f0       	breq	.+24     	; 0xe46 <__fp_cmp+0x46>
     e2e:	23 2b       	or	r18, r19
     e30:	24 2b       	or	r18, r20
     e32:	25 2b       	or	r18, r21
     e34:	21 f4       	brne	.+8      	; 0xe3e <__fp_cmp+0x3e>
     e36:	08 95       	ret
     e38:	0a 26       	eor	r0, r26
     e3a:	09 f4       	brne	.+2      	; 0xe3e <__fp_cmp+0x3e>
     e3c:	a1 40       	sbci	r26, 0x01	; 1
     e3e:	a6 95       	lsr	r26
     e40:	8f ef       	ldi	r24, 0xFF	; 255
     e42:	81 1d       	adc	r24, r1
     e44:	81 1d       	adc	r24, r1
     e46:	08 95       	ret

00000e48 <__fp_inf>:
     e48:	97 f9       	bld	r25, 7
     e4a:	9f 67       	ori	r25, 0x7F	; 127
     e4c:	80 e8       	ldi	r24, 0x80	; 128
     e4e:	70 e0       	ldi	r23, 0x00	; 0
     e50:	60 e0       	ldi	r22, 0x00	; 0
     e52:	08 95       	ret

00000e54 <__fp_nan>:
     e54:	9f ef       	ldi	r25, 0xFF	; 255
     e56:	80 ec       	ldi	r24, 0xC0	; 192
     e58:	08 95       	ret

00000e5a <__fp_pscA>:
     e5a:	00 24       	eor	r0, r0
     e5c:	0a 94       	dec	r0
     e5e:	16 16       	cp	r1, r22
     e60:	17 06       	cpc	r1, r23
     e62:	18 06       	cpc	r1, r24
     e64:	09 06       	cpc	r0, r25
     e66:	08 95       	ret

00000e68 <__fp_pscB>:
     e68:	00 24       	eor	r0, r0
     e6a:	0a 94       	dec	r0
     e6c:	12 16       	cp	r1, r18
     e6e:	13 06       	cpc	r1, r19
     e70:	14 06       	cpc	r1, r20
     e72:	05 06       	cpc	r0, r21
     e74:	08 95       	ret

00000e76 <__fp_round>:
     e76:	09 2e       	mov	r0, r25
     e78:	03 94       	inc	r0
     e7a:	00 0c       	add	r0, r0
     e7c:	11 f4       	brne	.+4      	; 0xe82 <__fp_round+0xc>
     e7e:	88 23       	and	r24, r24
     e80:	52 f0       	brmi	.+20     	; 0xe96 <__fp_round+0x20>
     e82:	bb 0f       	add	r27, r27
     e84:	40 f4       	brcc	.+16     	; 0xe96 <__fp_round+0x20>
     e86:	bf 2b       	or	r27, r31
     e88:	11 f4       	brne	.+4      	; 0xe8e <__fp_round+0x18>
     e8a:	60 ff       	sbrs	r22, 0
     e8c:	04 c0       	rjmp	.+8      	; 0xe96 <__fp_round+0x20>
     e8e:	6f 5f       	subi	r22, 0xFF	; 255
     e90:	7f 4f       	sbci	r23, 0xFF	; 255
     e92:	8f 4f       	sbci	r24, 0xFF	; 255
     e94:	9f 4f       	sbci	r25, 0xFF	; 255
     e96:	08 95       	ret

00000e98 <__fp_split3>:
     e98:	57 fd       	sbrc	r21, 7
     e9a:	90 58       	subi	r25, 0x80	; 128
     e9c:	44 0f       	add	r20, r20
     e9e:	55 1f       	adc	r21, r21
     ea0:	59 f0       	breq	.+22     	; 0xeb8 <__fp_splitA+0x10>
     ea2:	5f 3f       	cpi	r21, 0xFF	; 255
     ea4:	71 f0       	breq	.+28     	; 0xec2 <__fp_splitA+0x1a>
     ea6:	47 95       	ror	r20

00000ea8 <__fp_splitA>:
     ea8:	88 0f       	add	r24, r24
     eaa:	97 fb       	bst	r25, 7
     eac:	99 1f       	adc	r25, r25
     eae:	61 f0       	breq	.+24     	; 0xec8 <__fp_splitA+0x20>
     eb0:	9f 3f       	cpi	r25, 0xFF	; 255
     eb2:	79 f0       	breq	.+30     	; 0xed2 <__fp_splitA+0x2a>
     eb4:	87 95       	ror	r24
     eb6:	08 95       	ret
     eb8:	12 16       	cp	r1, r18
     eba:	13 06       	cpc	r1, r19
     ebc:	14 06       	cpc	r1, r20
     ebe:	55 1f       	adc	r21, r21
     ec0:	f2 cf       	rjmp	.-28     	; 0xea6 <__fp_split3+0xe>
     ec2:	46 95       	lsr	r20
     ec4:	f1 df       	rcall	.-30     	; 0xea8 <__fp_splitA>
     ec6:	08 c0       	rjmp	.+16     	; 0xed8 <__fp_splitA+0x30>
     ec8:	16 16       	cp	r1, r22
     eca:	17 06       	cpc	r1, r23
     ecc:	18 06       	cpc	r1, r24
     ece:	99 1f       	adc	r25, r25
     ed0:	f1 cf       	rjmp	.-30     	; 0xeb4 <__fp_splitA+0xc>
     ed2:	86 95       	lsr	r24
     ed4:	71 05       	cpc	r23, r1
     ed6:	61 05       	cpc	r22, r1
     ed8:	08 94       	sec
     eda:	08 95       	ret

00000edc <__fp_zero>:
     edc:	e8 94       	clt

00000ede <__fp_szero>:
     ede:	bb 27       	eor	r27, r27
     ee0:	66 27       	eor	r22, r22
     ee2:	77 27       	eor	r23, r23
     ee4:	cb 01       	movw	r24, r22
     ee6:	97 f9       	bld	r25, 7
     ee8:	08 95       	ret

00000eea <__divmodhi4>:
     eea:	97 fb       	bst	r25, 7
     eec:	07 2e       	mov	r0, r23
     eee:	16 f4       	brtc	.+4      	; 0xef4 <__divmodhi4+0xa>
     ef0:	00 94       	com	r0
     ef2:	07 d0       	rcall	.+14     	; 0xf02 <__divmodhi4_neg1>
     ef4:	77 fd       	sbrc	r23, 7
     ef6:	09 d0       	rcall	.+18     	; 0xf0a <__divmodhi4_neg2>
     ef8:	0e 94 89 07 	call	0xf12	; 0xf12 <__udivmodhi4>
     efc:	07 fc       	sbrc	r0, 7
     efe:	05 d0       	rcall	.+10     	; 0xf0a <__divmodhi4_neg2>
     f00:	3e f4       	brtc	.+14     	; 0xf10 <__divmodhi4_exit>

00000f02 <__divmodhi4_neg1>:
     f02:	90 95       	com	r25
     f04:	81 95       	neg	r24
     f06:	9f 4f       	sbci	r25, 0xFF	; 255
     f08:	08 95       	ret

00000f0a <__divmodhi4_neg2>:
     f0a:	70 95       	com	r23
     f0c:	61 95       	neg	r22
     f0e:	7f 4f       	sbci	r23, 0xFF	; 255

00000f10 <__divmodhi4_exit>:
     f10:	08 95       	ret

00000f12 <__udivmodhi4>:
     f12:	aa 1b       	sub	r26, r26
     f14:	bb 1b       	sub	r27, r27
     f16:	51 e1       	ldi	r21, 0x11	; 17
     f18:	07 c0       	rjmp	.+14     	; 0xf28 <__udivmodhi4_ep>

00000f1a <__udivmodhi4_loop>:
     f1a:	aa 1f       	adc	r26, r26
     f1c:	bb 1f       	adc	r27, r27
     f1e:	a6 17       	cp	r26, r22
     f20:	b7 07       	cpc	r27, r23
     f22:	10 f0       	brcs	.+4      	; 0xf28 <__udivmodhi4_ep>
     f24:	a6 1b       	sub	r26, r22
     f26:	b7 0b       	sbc	r27, r23

00000f28 <__udivmodhi4_ep>:
     f28:	88 1f       	adc	r24, r24
     f2a:	99 1f       	adc	r25, r25
     f2c:	5a 95       	dec	r21
     f2e:	a9 f7       	brne	.-22     	; 0xf1a <__udivmodhi4_loop>
     f30:	80 95       	com	r24
     f32:	90 95       	com	r25
     f34:	bc 01       	movw	r22, r24
     f36:	cd 01       	movw	r24, r26
     f38:	08 95       	ret

00000f3a <dtostrf>:
     f3a:	ef 92       	push	r14
     f3c:	0f 93       	push	r16
     f3e:	1f 93       	push	r17
     f40:	cf 93       	push	r28
     f42:	df 93       	push	r29
     f44:	e8 01       	movw	r28, r16
     f46:	47 fd       	sbrc	r20, 7
     f48:	02 c0       	rjmp	.+4      	; 0xf4e <dtostrf+0x14>
     f4a:	34 e0       	ldi	r19, 0x04	; 4
     f4c:	01 c0       	rjmp	.+2      	; 0xf50 <dtostrf+0x16>
     f4e:	34 e1       	ldi	r19, 0x14	; 20
     f50:	04 2e       	mov	r0, r20
     f52:	00 0c       	add	r0, r0
     f54:	55 0b       	sbc	r21, r21
     f56:	57 ff       	sbrs	r21, 7
     f58:	03 c0       	rjmp	.+6      	; 0xf60 <dtostrf+0x26>
     f5a:	51 95       	neg	r21
     f5c:	41 95       	neg	r20
     f5e:	51 09       	sbc	r21, r1
     f60:	e3 2e       	mov	r14, r19
     f62:	02 2f       	mov	r16, r18
     f64:	24 2f       	mov	r18, r20
     f66:	ae 01       	movw	r20, r28
     f68:	0e 94 19 08 	call	0x1032	; 0x1032 <dtoa_prf>
     f6c:	ce 01       	movw	r24, r28
     f6e:	df 91       	pop	r29
     f70:	cf 91       	pop	r28
     f72:	1f 91       	pop	r17
     f74:	0f 91       	pop	r16
     f76:	ef 90       	pop	r14
     f78:	08 95       	ret

00000f7a <do_rand>:
     f7a:	8f 92       	push	r8
     f7c:	9f 92       	push	r9
     f7e:	af 92       	push	r10
     f80:	bf 92       	push	r11
     f82:	cf 92       	push	r12
     f84:	df 92       	push	r13
     f86:	ef 92       	push	r14
     f88:	ff 92       	push	r15
     f8a:	cf 93       	push	r28
     f8c:	df 93       	push	r29
     f8e:	ec 01       	movw	r28, r24
     f90:	68 81       	ld	r22, Y
     f92:	79 81       	ldd	r23, Y+1	; 0x01
     f94:	8a 81       	ldd	r24, Y+2	; 0x02
     f96:	9b 81       	ldd	r25, Y+3	; 0x03
     f98:	61 15       	cp	r22, r1
     f9a:	71 05       	cpc	r23, r1
     f9c:	81 05       	cpc	r24, r1
     f9e:	91 05       	cpc	r25, r1
     fa0:	21 f4       	brne	.+8      	; 0xfaa <do_rand+0x30>
     fa2:	64 e2       	ldi	r22, 0x24	; 36
     fa4:	79 ed       	ldi	r23, 0xD9	; 217
     fa6:	8b e5       	ldi	r24, 0x5B	; 91
     fa8:	97 e0       	ldi	r25, 0x07	; 7
     faa:	2d e1       	ldi	r18, 0x1D	; 29
     fac:	33 ef       	ldi	r19, 0xF3	; 243
     fae:	41 e0       	ldi	r20, 0x01	; 1
     fb0:	50 e0       	ldi	r21, 0x00	; 0
     fb2:	0e 94 4b 0a 	call	0x1496	; 0x1496 <__divmodsi4>
     fb6:	49 01       	movw	r8, r18
     fb8:	5a 01       	movw	r10, r20
     fba:	9b 01       	movw	r18, r22
     fbc:	ac 01       	movw	r20, r24
     fbe:	a7 ea       	ldi	r26, 0xA7	; 167
     fc0:	b1 e4       	ldi	r27, 0x41	; 65
     fc2:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <__muluhisi3>
     fc6:	6b 01       	movw	r12, r22
     fc8:	7c 01       	movw	r14, r24
     fca:	ac ee       	ldi	r26, 0xEC	; 236
     fcc:	b4 ef       	ldi	r27, 0xF4	; 244
     fce:	a5 01       	movw	r20, r10
     fd0:	94 01       	movw	r18, r8
     fd2:	0e 94 78 0a 	call	0x14f0	; 0x14f0 <__mulohisi3>
     fd6:	dc 01       	movw	r26, r24
     fd8:	cb 01       	movw	r24, r22
     fda:	8c 0d       	add	r24, r12
     fdc:	9d 1d       	adc	r25, r13
     fde:	ae 1d       	adc	r26, r14
     fe0:	bf 1d       	adc	r27, r15
     fe2:	b7 ff       	sbrs	r27, 7
     fe4:	03 c0       	rjmp	.+6      	; 0xfec <do_rand+0x72>
     fe6:	01 97       	sbiw	r24, 0x01	; 1
     fe8:	a1 09       	sbc	r26, r1
     fea:	b0 48       	sbci	r27, 0x80	; 128
     fec:	88 83       	st	Y, r24
     fee:	99 83       	std	Y+1, r25	; 0x01
     ff0:	aa 83       	std	Y+2, r26	; 0x02
     ff2:	bb 83       	std	Y+3, r27	; 0x03
     ff4:	9f 77       	andi	r25, 0x7F	; 127
     ff6:	df 91       	pop	r29
     ff8:	cf 91       	pop	r28
     ffa:	ff 90       	pop	r15
     ffc:	ef 90       	pop	r14
     ffe:	df 90       	pop	r13
    1000:	cf 90       	pop	r12
    1002:	bf 90       	pop	r11
    1004:	af 90       	pop	r10
    1006:	9f 90       	pop	r9
    1008:	8f 90       	pop	r8
    100a:	08 95       	ret

0000100c <rand_r>:
    100c:	0e 94 bd 07 	call	0xf7a	; 0xf7a <do_rand>
    1010:	08 95       	ret

00001012 <rand>:
    1012:	80 e6       	ldi	r24, 0x60	; 96
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	0e 94 bd 07 	call	0xf7a	; 0xf7a <do_rand>
    101a:	08 95       	ret

0000101c <srand>:
    101c:	a0 e0       	ldi	r26, 0x00	; 0
    101e:	b0 e0       	ldi	r27, 0x00	; 0
    1020:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
    1024:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    1028:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
    102c:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
    1030:	08 95       	ret

00001032 <dtoa_prf>:
    1032:	a9 e0       	ldi	r26, 0x09	; 9
    1034:	b0 e0       	ldi	r27, 0x00	; 0
    1036:	ef e1       	ldi	r30, 0x1F	; 31
    1038:	f8 e0       	ldi	r31, 0x08	; 8
    103a:	0c 94 83 0a 	jmp	0x1506	; 0x1506 <__prologue_saves__+0xc>
    103e:	6a 01       	movw	r12, r20
    1040:	12 2f       	mov	r17, r18
    1042:	b0 2e       	mov	r11, r16
    1044:	2b e3       	ldi	r18, 0x3B	; 59
    1046:	20 17       	cp	r18, r16
    1048:	20 f0       	brcs	.+8      	; 0x1052 <dtoa_prf+0x20>
    104a:	ff 24       	eor	r15, r15
    104c:	f3 94       	inc	r15
    104e:	f0 0e       	add	r15, r16
    1050:	02 c0       	rjmp	.+4      	; 0x1056 <dtoa_prf+0x24>
    1052:	2c e3       	ldi	r18, 0x3C	; 60
    1054:	f2 2e       	mov	r15, r18
    1056:	0f 2d       	mov	r16, r15
    1058:	27 e0       	ldi	r18, 0x07	; 7
    105a:	ae 01       	movw	r20, r28
    105c:	4f 5f       	subi	r20, 0xFF	; 255
    105e:	5f 4f       	sbci	r21, 0xFF	; 255
    1060:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__ftoa_engine>
    1064:	bc 01       	movw	r22, r24
    1066:	49 81       	ldd	r20, Y+1	; 0x01
    1068:	84 2f       	mov	r24, r20
    106a:	89 70       	andi	r24, 0x09	; 9
    106c:	81 30       	cpi	r24, 0x01	; 1
    106e:	31 f0       	breq	.+12     	; 0x107c <dtoa_prf+0x4a>
    1070:	e1 fc       	sbrc	r14, 1
    1072:	06 c0       	rjmp	.+12     	; 0x1080 <dtoa_prf+0x4e>
    1074:	e0 fe       	sbrs	r14, 0
    1076:	06 c0       	rjmp	.+12     	; 0x1084 <dtoa_prf+0x52>
    1078:	90 e2       	ldi	r25, 0x20	; 32
    107a:	05 c0       	rjmp	.+10     	; 0x1086 <dtoa_prf+0x54>
    107c:	9d e2       	ldi	r25, 0x2D	; 45
    107e:	03 c0       	rjmp	.+6      	; 0x1086 <dtoa_prf+0x54>
    1080:	9b e2       	ldi	r25, 0x2B	; 43
    1082:	01 c0       	rjmp	.+2      	; 0x1086 <dtoa_prf+0x54>
    1084:	90 e0       	ldi	r25, 0x00	; 0
    1086:	5e 2d       	mov	r21, r14
    1088:	50 71       	andi	r21, 0x10	; 16
    108a:	43 ff       	sbrs	r20, 3
    108c:	3c c0       	rjmp	.+120    	; 0x1106 <dtoa_prf+0xd4>
    108e:	91 11       	cpse	r25, r1
    1090:	02 c0       	rjmp	.+4      	; 0x1096 <dtoa_prf+0x64>
    1092:	83 e0       	ldi	r24, 0x03	; 3
    1094:	01 c0       	rjmp	.+2      	; 0x1098 <dtoa_prf+0x66>
    1096:	84 e0       	ldi	r24, 0x04	; 4
    1098:	81 17       	cp	r24, r17
    109a:	18 f4       	brcc	.+6      	; 0x10a2 <dtoa_prf+0x70>
    109c:	21 2f       	mov	r18, r17
    109e:	28 1b       	sub	r18, r24
    10a0:	01 c0       	rjmp	.+2      	; 0x10a4 <dtoa_prf+0x72>
    10a2:	20 e0       	ldi	r18, 0x00	; 0
    10a4:	51 11       	cpse	r21, r1
    10a6:	0b c0       	rjmp	.+22     	; 0x10be <dtoa_prf+0x8c>
    10a8:	f6 01       	movw	r30, r12
    10aa:	82 2f       	mov	r24, r18
    10ac:	30 e2       	ldi	r19, 0x20	; 32
    10ae:	88 23       	and	r24, r24
    10b0:	19 f0       	breq	.+6      	; 0x10b8 <dtoa_prf+0x86>
    10b2:	31 93       	st	Z+, r19
    10b4:	81 50       	subi	r24, 0x01	; 1
    10b6:	fb cf       	rjmp	.-10     	; 0x10ae <dtoa_prf+0x7c>
    10b8:	c2 0e       	add	r12, r18
    10ba:	d1 1c       	adc	r13, r1
    10bc:	20 e0       	ldi	r18, 0x00	; 0
    10be:	99 23       	and	r25, r25
    10c0:	29 f0       	breq	.+10     	; 0x10cc <dtoa_prf+0x9a>
    10c2:	d6 01       	movw	r26, r12
    10c4:	9c 93       	st	X, r25
    10c6:	f6 01       	movw	r30, r12
    10c8:	31 96       	adiw	r30, 0x01	; 1
    10ca:	6f 01       	movw	r12, r30
    10cc:	c6 01       	movw	r24, r12
    10ce:	03 96       	adiw	r24, 0x03	; 3
    10d0:	e2 fe       	sbrs	r14, 2
    10d2:	0a c0       	rjmp	.+20     	; 0x10e8 <dtoa_prf+0xb6>
    10d4:	3e e4       	ldi	r19, 0x4E	; 78
    10d6:	d6 01       	movw	r26, r12
    10d8:	3c 93       	st	X, r19
    10da:	41 e4       	ldi	r20, 0x41	; 65
    10dc:	11 96       	adiw	r26, 0x01	; 1
    10de:	4c 93       	st	X, r20
    10e0:	11 97       	sbiw	r26, 0x01	; 1
    10e2:	12 96       	adiw	r26, 0x02	; 2
    10e4:	3c 93       	st	X, r19
    10e6:	06 c0       	rjmp	.+12     	; 0x10f4 <dtoa_prf+0xc2>
    10e8:	3e e6       	ldi	r19, 0x6E	; 110
    10ea:	f6 01       	movw	r30, r12
    10ec:	30 83       	st	Z, r19
    10ee:	41 e6       	ldi	r20, 0x61	; 97
    10f0:	41 83       	std	Z+1, r20	; 0x01
    10f2:	32 83       	std	Z+2, r19	; 0x02
    10f4:	fc 01       	movw	r30, r24
    10f6:	32 2f       	mov	r19, r18
    10f8:	40 e2       	ldi	r20, 0x20	; 32
    10fa:	33 23       	and	r19, r19
    10fc:	09 f4       	brne	.+2      	; 0x1100 <dtoa_prf+0xce>
    10fe:	42 c0       	rjmp	.+132    	; 0x1184 <dtoa_prf+0x152>
    1100:	41 93       	st	Z+, r20
    1102:	31 50       	subi	r19, 0x01	; 1
    1104:	fa cf       	rjmp	.-12     	; 0x10fa <dtoa_prf+0xc8>
    1106:	42 ff       	sbrs	r20, 2
    1108:	44 c0       	rjmp	.+136    	; 0x1192 <dtoa_prf+0x160>
    110a:	91 11       	cpse	r25, r1
    110c:	02 c0       	rjmp	.+4      	; 0x1112 <dtoa_prf+0xe0>
    110e:	83 e0       	ldi	r24, 0x03	; 3
    1110:	01 c0       	rjmp	.+2      	; 0x1114 <dtoa_prf+0xe2>
    1112:	84 e0       	ldi	r24, 0x04	; 4
    1114:	81 17       	cp	r24, r17
    1116:	18 f4       	brcc	.+6      	; 0x111e <dtoa_prf+0xec>
    1118:	21 2f       	mov	r18, r17
    111a:	28 1b       	sub	r18, r24
    111c:	01 c0       	rjmp	.+2      	; 0x1120 <dtoa_prf+0xee>
    111e:	20 e0       	ldi	r18, 0x00	; 0
    1120:	51 11       	cpse	r21, r1
    1122:	0b c0       	rjmp	.+22     	; 0x113a <dtoa_prf+0x108>
    1124:	f6 01       	movw	r30, r12
    1126:	82 2f       	mov	r24, r18
    1128:	30 e2       	ldi	r19, 0x20	; 32
    112a:	88 23       	and	r24, r24
    112c:	19 f0       	breq	.+6      	; 0x1134 <dtoa_prf+0x102>
    112e:	31 93       	st	Z+, r19
    1130:	81 50       	subi	r24, 0x01	; 1
    1132:	fb cf       	rjmp	.-10     	; 0x112a <dtoa_prf+0xf8>
    1134:	c2 0e       	add	r12, r18
    1136:	d1 1c       	adc	r13, r1
    1138:	20 e0       	ldi	r18, 0x00	; 0
    113a:	99 23       	and	r25, r25
    113c:	29 f0       	breq	.+10     	; 0x1148 <dtoa_prf+0x116>
    113e:	d6 01       	movw	r26, r12
    1140:	9c 93       	st	X, r25
    1142:	f6 01       	movw	r30, r12
    1144:	31 96       	adiw	r30, 0x01	; 1
    1146:	6f 01       	movw	r12, r30
    1148:	c6 01       	movw	r24, r12
    114a:	03 96       	adiw	r24, 0x03	; 3
    114c:	e2 fe       	sbrs	r14, 2
    114e:	0b c0       	rjmp	.+22     	; 0x1166 <dtoa_prf+0x134>
    1150:	39 e4       	ldi	r19, 0x49	; 73
    1152:	d6 01       	movw	r26, r12
    1154:	3c 93       	st	X, r19
    1156:	3e e4       	ldi	r19, 0x4E	; 78
    1158:	11 96       	adiw	r26, 0x01	; 1
    115a:	3c 93       	st	X, r19
    115c:	11 97       	sbiw	r26, 0x01	; 1
    115e:	36 e4       	ldi	r19, 0x46	; 70
    1160:	12 96       	adiw	r26, 0x02	; 2
    1162:	3c 93       	st	X, r19
    1164:	07 c0       	rjmp	.+14     	; 0x1174 <dtoa_prf+0x142>
    1166:	39 e6       	ldi	r19, 0x69	; 105
    1168:	f6 01       	movw	r30, r12
    116a:	30 83       	st	Z, r19
    116c:	3e e6       	ldi	r19, 0x6E	; 110
    116e:	31 83       	std	Z+1, r19	; 0x01
    1170:	36 e6       	ldi	r19, 0x66	; 102
    1172:	32 83       	std	Z+2, r19	; 0x02
    1174:	fc 01       	movw	r30, r24
    1176:	32 2f       	mov	r19, r18
    1178:	40 e2       	ldi	r20, 0x20	; 32
    117a:	33 23       	and	r19, r19
    117c:	19 f0       	breq	.+6      	; 0x1184 <dtoa_prf+0x152>
    117e:	41 93       	st	Z+, r20
    1180:	31 50       	subi	r19, 0x01	; 1
    1182:	fb cf       	rjmp	.-10     	; 0x117a <dtoa_prf+0x148>
    1184:	fc 01       	movw	r30, r24
    1186:	e2 0f       	add	r30, r18
    1188:	f1 1d       	adc	r31, r1
    118a:	10 82       	st	Z, r1
    118c:	8e ef       	ldi	r24, 0xFE	; 254
    118e:	9f ef       	ldi	r25, 0xFF	; 255
    1190:	a6 c0       	rjmp	.+332    	; 0x12de <dtoa_prf+0x2ac>
    1192:	21 e0       	ldi	r18, 0x01	; 1
    1194:	30 e0       	ldi	r19, 0x00	; 0
    1196:	91 11       	cpse	r25, r1
    1198:	02 c0       	rjmp	.+4      	; 0x119e <dtoa_prf+0x16c>
    119a:	20 e0       	ldi	r18, 0x00	; 0
    119c:	30 e0       	ldi	r19, 0x00	; 0
    119e:	16 16       	cp	r1, r22
    11a0:	17 06       	cpc	r1, r23
    11a2:	1c f4       	brge	.+6      	; 0x11aa <dtoa_prf+0x178>
    11a4:	fb 01       	movw	r30, r22
    11a6:	31 96       	adiw	r30, 0x01	; 1
    11a8:	02 c0       	rjmp	.+4      	; 0x11ae <dtoa_prf+0x17c>
    11aa:	e1 e0       	ldi	r30, 0x01	; 1
    11ac:	f0 e0       	ldi	r31, 0x00	; 0
    11ae:	2e 0f       	add	r18, r30
    11b0:	3f 1f       	adc	r19, r31
    11b2:	bb 20       	and	r11, r11
    11b4:	21 f0       	breq	.+8      	; 0x11be <dtoa_prf+0x18c>
    11b6:	eb 2d       	mov	r30, r11
    11b8:	f0 e0       	ldi	r31, 0x00	; 0
    11ba:	31 96       	adiw	r30, 0x01	; 1
    11bc:	02 c0       	rjmp	.+4      	; 0x11c2 <dtoa_prf+0x190>
    11be:	e0 e0       	ldi	r30, 0x00	; 0
    11c0:	f0 e0       	ldi	r31, 0x00	; 0
    11c2:	2e 0f       	add	r18, r30
    11c4:	3f 1f       	adc	r19, r31
    11c6:	e1 2f       	mov	r30, r17
    11c8:	f0 e0       	ldi	r31, 0x00	; 0
    11ca:	2e 17       	cp	r18, r30
    11cc:	3f 07       	cpc	r19, r31
    11ce:	1c f4       	brge	.+6      	; 0x11d6 <dtoa_prf+0x1a4>
    11d0:	12 1b       	sub	r17, r18
    11d2:	21 2f       	mov	r18, r17
    11d4:	01 c0       	rjmp	.+2      	; 0x11d8 <dtoa_prf+0x1a6>
    11d6:	20 e0       	ldi	r18, 0x00	; 0
    11d8:	8e 2d       	mov	r24, r14
    11da:	88 71       	andi	r24, 0x18	; 24
    11dc:	59 f4       	brne	.+22     	; 0x11f4 <dtoa_prf+0x1c2>
    11de:	f6 01       	movw	r30, r12
    11e0:	82 2f       	mov	r24, r18
    11e2:	30 e2       	ldi	r19, 0x20	; 32
    11e4:	88 23       	and	r24, r24
    11e6:	19 f0       	breq	.+6      	; 0x11ee <dtoa_prf+0x1bc>
    11e8:	31 93       	st	Z+, r19
    11ea:	81 50       	subi	r24, 0x01	; 1
    11ec:	fb cf       	rjmp	.-10     	; 0x11e4 <dtoa_prf+0x1b2>
    11ee:	c2 0e       	add	r12, r18
    11f0:	d1 1c       	adc	r13, r1
    11f2:	20 e0       	ldi	r18, 0x00	; 0
    11f4:	99 23       	and	r25, r25
    11f6:	29 f0       	breq	.+10     	; 0x1202 <dtoa_prf+0x1d0>
    11f8:	d6 01       	movw	r26, r12
    11fa:	9c 93       	st	X, r25
    11fc:	f6 01       	movw	r30, r12
    11fe:	31 96       	adiw	r30, 0x01	; 1
    1200:	6f 01       	movw	r12, r30
    1202:	51 11       	cpse	r21, r1
    1204:	0b c0       	rjmp	.+22     	; 0x121c <dtoa_prf+0x1ea>
    1206:	f6 01       	movw	r30, r12
    1208:	82 2f       	mov	r24, r18
    120a:	90 e3       	ldi	r25, 0x30	; 48
    120c:	88 23       	and	r24, r24
    120e:	19 f0       	breq	.+6      	; 0x1216 <dtoa_prf+0x1e4>
    1210:	91 93       	st	Z+, r25
    1212:	81 50       	subi	r24, 0x01	; 1
    1214:	fb cf       	rjmp	.-10     	; 0x120c <dtoa_prf+0x1da>
    1216:	c2 0e       	add	r12, r18
    1218:	d1 1c       	adc	r13, r1
    121a:	20 e0       	ldi	r18, 0x00	; 0
    121c:	0f 2d       	mov	r16, r15
    121e:	06 0f       	add	r16, r22
    1220:	9a 81       	ldd	r25, Y+2	; 0x02
    1222:	34 2f       	mov	r19, r20
    1224:	30 71       	andi	r19, 0x10	; 16
    1226:	44 ff       	sbrs	r20, 4
    1228:	03 c0       	rjmp	.+6      	; 0x1230 <dtoa_prf+0x1fe>
    122a:	91 33       	cpi	r25, 0x31	; 49
    122c:	09 f4       	brne	.+2      	; 0x1230 <dtoa_prf+0x1fe>
    122e:	01 50       	subi	r16, 0x01	; 1
    1230:	10 16       	cp	r1, r16
    1232:	24 f4       	brge	.+8      	; 0x123c <dtoa_prf+0x20a>
    1234:	09 30       	cpi	r16, 0x09	; 9
    1236:	18 f0       	brcs	.+6      	; 0x123e <dtoa_prf+0x20c>
    1238:	08 e0       	ldi	r16, 0x08	; 8
    123a:	01 c0       	rjmp	.+2      	; 0x123e <dtoa_prf+0x20c>
    123c:	01 e0       	ldi	r16, 0x01	; 1
    123e:	ab 01       	movw	r20, r22
    1240:	77 ff       	sbrs	r23, 7
    1242:	02 c0       	rjmp	.+4      	; 0x1248 <dtoa_prf+0x216>
    1244:	40 e0       	ldi	r20, 0x00	; 0
    1246:	50 e0       	ldi	r21, 0x00	; 0
    1248:	fb 01       	movw	r30, r22
    124a:	e4 1b       	sub	r30, r20
    124c:	f5 0b       	sbc	r31, r21
    124e:	a1 e0       	ldi	r26, 0x01	; 1
    1250:	b0 e0       	ldi	r27, 0x00	; 0
    1252:	ac 0f       	add	r26, r28
    1254:	bd 1f       	adc	r27, r29
    1256:	ea 0f       	add	r30, r26
    1258:	fb 1f       	adc	r31, r27
    125a:	8e e2       	ldi	r24, 0x2E	; 46
    125c:	a8 2e       	mov	r10, r24
    125e:	4b 01       	movw	r8, r22
    1260:	80 1a       	sub	r8, r16
    1262:	91 08       	sbc	r9, r1
    1264:	0b 2d       	mov	r16, r11
    1266:	10 e0       	ldi	r17, 0x00	; 0
    1268:	11 95       	neg	r17
    126a:	01 95       	neg	r16
    126c:	11 09       	sbc	r17, r1
    126e:	4f 3f       	cpi	r20, 0xFF	; 255
    1270:	bf ef       	ldi	r27, 0xFF	; 255
    1272:	5b 07       	cpc	r21, r27
    1274:	21 f4       	brne	.+8      	; 0x127e <dtoa_prf+0x24c>
    1276:	d6 01       	movw	r26, r12
    1278:	ac 92       	st	X, r10
    127a:	11 96       	adiw	r26, 0x01	; 1
    127c:	6d 01       	movw	r12, r26
    127e:	64 17       	cp	r22, r20
    1280:	75 07       	cpc	r23, r21
    1282:	2c f0       	brlt	.+10     	; 0x128e <dtoa_prf+0x25c>
    1284:	84 16       	cp	r8, r20
    1286:	95 06       	cpc	r9, r21
    1288:	14 f4       	brge	.+4      	; 0x128e <dtoa_prf+0x25c>
    128a:	81 81       	ldd	r24, Z+1	; 0x01
    128c:	01 c0       	rjmp	.+2      	; 0x1290 <dtoa_prf+0x25e>
    128e:	80 e3       	ldi	r24, 0x30	; 48
    1290:	41 50       	subi	r20, 0x01	; 1
    1292:	51 09       	sbc	r21, r1
    1294:	31 96       	adiw	r30, 0x01	; 1
    1296:	d6 01       	movw	r26, r12
    1298:	11 96       	adiw	r26, 0x01	; 1
    129a:	7d 01       	movw	r14, r26
    129c:	40 17       	cp	r20, r16
    129e:	51 07       	cpc	r21, r17
    12a0:	24 f0       	brlt	.+8      	; 0x12aa <dtoa_prf+0x278>
    12a2:	d6 01       	movw	r26, r12
    12a4:	8c 93       	st	X, r24
    12a6:	67 01       	movw	r12, r14
    12a8:	e2 cf       	rjmp	.-60     	; 0x126e <dtoa_prf+0x23c>
    12aa:	64 17       	cp	r22, r20
    12ac:	75 07       	cpc	r23, r21
    12ae:	39 f4       	brne	.+14     	; 0x12be <dtoa_prf+0x28c>
    12b0:	96 33       	cpi	r25, 0x36	; 54
    12b2:	20 f4       	brcc	.+8      	; 0x12bc <dtoa_prf+0x28a>
    12b4:	95 33       	cpi	r25, 0x35	; 53
    12b6:	19 f4       	brne	.+6      	; 0x12be <dtoa_prf+0x28c>
    12b8:	31 11       	cpse	r19, r1
    12ba:	01 c0       	rjmp	.+2      	; 0x12be <dtoa_prf+0x28c>
    12bc:	81 e3       	ldi	r24, 0x31	; 49
    12be:	f6 01       	movw	r30, r12
    12c0:	80 83       	st	Z, r24
    12c2:	f7 01       	movw	r30, r14
    12c4:	82 2f       	mov	r24, r18
    12c6:	90 e2       	ldi	r25, 0x20	; 32
    12c8:	88 23       	and	r24, r24
    12ca:	19 f0       	breq	.+6      	; 0x12d2 <dtoa_prf+0x2a0>
    12cc:	91 93       	st	Z+, r25
    12ce:	81 50       	subi	r24, 0x01	; 1
    12d0:	fb cf       	rjmp	.-10     	; 0x12c8 <dtoa_prf+0x296>
    12d2:	f7 01       	movw	r30, r14
    12d4:	e2 0f       	add	r30, r18
    12d6:	f1 1d       	adc	r31, r1
    12d8:	10 82       	st	Z, r1
    12da:	80 e0       	ldi	r24, 0x00	; 0
    12dc:	90 e0       	ldi	r25, 0x00	; 0
    12de:	29 96       	adiw	r28, 0x09	; 9
    12e0:	ec e0       	ldi	r30, 0x0C	; 12
    12e2:	0c 94 9f 0a 	jmp	0x153e	; 0x153e <__epilogue_restores__+0xc>

000012e6 <__ftoa_engine>:
    12e6:	28 30       	cpi	r18, 0x08	; 8
    12e8:	08 f0       	brcs	.+2      	; 0x12ec <__ftoa_engine+0x6>
    12ea:	27 e0       	ldi	r18, 0x07	; 7
    12ec:	33 27       	eor	r19, r19
    12ee:	da 01       	movw	r26, r20
    12f0:	99 0f       	add	r25, r25
    12f2:	31 1d       	adc	r19, r1
    12f4:	87 fd       	sbrc	r24, 7
    12f6:	91 60       	ori	r25, 0x01	; 1
    12f8:	00 96       	adiw	r24, 0x00	; 0
    12fa:	61 05       	cpc	r22, r1
    12fc:	71 05       	cpc	r23, r1
    12fe:	39 f4       	brne	.+14     	; 0x130e <__ftoa_engine+0x28>
    1300:	32 60       	ori	r19, 0x02	; 2
    1302:	2e 5f       	subi	r18, 0xFE	; 254
    1304:	3d 93       	st	X+, r19
    1306:	30 e3       	ldi	r19, 0x30	; 48
    1308:	2a 95       	dec	r18
    130a:	e1 f7       	brne	.-8      	; 0x1304 <__ftoa_engine+0x1e>
    130c:	08 95       	ret
    130e:	9f 3f       	cpi	r25, 0xFF	; 255
    1310:	30 f0       	brcs	.+12     	; 0x131e <__ftoa_engine+0x38>
    1312:	80 38       	cpi	r24, 0x80	; 128
    1314:	71 05       	cpc	r23, r1
    1316:	61 05       	cpc	r22, r1
    1318:	09 f0       	breq	.+2      	; 0x131c <__ftoa_engine+0x36>
    131a:	3c 5f       	subi	r19, 0xFC	; 252
    131c:	3c 5f       	subi	r19, 0xFC	; 252
    131e:	3d 93       	st	X+, r19
    1320:	91 30       	cpi	r25, 0x01	; 1
    1322:	08 f0       	brcs	.+2      	; 0x1326 <__ftoa_engine+0x40>
    1324:	80 68       	ori	r24, 0x80	; 128
    1326:	91 1d       	adc	r25, r1
    1328:	df 93       	push	r29
    132a:	cf 93       	push	r28
    132c:	1f 93       	push	r17
    132e:	0f 93       	push	r16
    1330:	ff 92       	push	r15
    1332:	ef 92       	push	r14
    1334:	19 2f       	mov	r17, r25
    1336:	98 7f       	andi	r25, 0xF8	; 248
    1338:	96 95       	lsr	r25
    133a:	e9 2f       	mov	r30, r25
    133c:	96 95       	lsr	r25
    133e:	96 95       	lsr	r25
    1340:	e9 0f       	add	r30, r25
    1342:	ff 27       	eor	r31, r31
    1344:	e2 55       	subi	r30, 0x52	; 82
    1346:	ff 4f       	sbci	r31, 0xFF	; 255
    1348:	99 27       	eor	r25, r25
    134a:	33 27       	eor	r19, r19
    134c:	ee 24       	eor	r14, r14
    134e:	ff 24       	eor	r15, r15
    1350:	a7 01       	movw	r20, r14
    1352:	e7 01       	movw	r28, r14
    1354:	05 90       	lpm	r0, Z+
    1356:	08 94       	sec
    1358:	07 94       	ror	r0
    135a:	28 f4       	brcc	.+10     	; 0x1366 <__ftoa_engine+0x80>
    135c:	36 0f       	add	r19, r22
    135e:	e7 1e       	adc	r14, r23
    1360:	f8 1e       	adc	r15, r24
    1362:	49 1f       	adc	r20, r25
    1364:	51 1d       	adc	r21, r1
    1366:	66 0f       	add	r22, r22
    1368:	77 1f       	adc	r23, r23
    136a:	88 1f       	adc	r24, r24
    136c:	99 1f       	adc	r25, r25
    136e:	06 94       	lsr	r0
    1370:	a1 f7       	brne	.-24     	; 0x135a <__ftoa_engine+0x74>
    1372:	05 90       	lpm	r0, Z+
    1374:	07 94       	ror	r0
    1376:	28 f4       	brcc	.+10     	; 0x1382 <__ftoa_engine+0x9c>
    1378:	e7 0e       	add	r14, r23
    137a:	f8 1e       	adc	r15, r24
    137c:	49 1f       	adc	r20, r25
    137e:	56 1f       	adc	r21, r22
    1380:	c1 1d       	adc	r28, r1
    1382:	77 0f       	add	r23, r23
    1384:	88 1f       	adc	r24, r24
    1386:	99 1f       	adc	r25, r25
    1388:	66 1f       	adc	r22, r22
    138a:	06 94       	lsr	r0
    138c:	a1 f7       	brne	.-24     	; 0x1376 <__ftoa_engine+0x90>
    138e:	05 90       	lpm	r0, Z+
    1390:	07 94       	ror	r0
    1392:	28 f4       	brcc	.+10     	; 0x139e <__ftoa_engine+0xb8>
    1394:	f8 0e       	add	r15, r24
    1396:	49 1f       	adc	r20, r25
    1398:	56 1f       	adc	r21, r22
    139a:	c7 1f       	adc	r28, r23
    139c:	d1 1d       	adc	r29, r1
    139e:	88 0f       	add	r24, r24
    13a0:	99 1f       	adc	r25, r25
    13a2:	66 1f       	adc	r22, r22
    13a4:	77 1f       	adc	r23, r23
    13a6:	06 94       	lsr	r0
    13a8:	a1 f7       	brne	.-24     	; 0x1392 <__ftoa_engine+0xac>
    13aa:	05 90       	lpm	r0, Z+
    13ac:	07 94       	ror	r0
    13ae:	20 f4       	brcc	.+8      	; 0x13b8 <__ftoa_engine+0xd2>
    13b0:	49 0f       	add	r20, r25
    13b2:	56 1f       	adc	r21, r22
    13b4:	c7 1f       	adc	r28, r23
    13b6:	d8 1f       	adc	r29, r24
    13b8:	99 0f       	add	r25, r25
    13ba:	66 1f       	adc	r22, r22
    13bc:	77 1f       	adc	r23, r23
    13be:	88 1f       	adc	r24, r24
    13c0:	06 94       	lsr	r0
    13c2:	a9 f7       	brne	.-22     	; 0x13ae <__ftoa_engine+0xc8>
    13c4:	84 91       	lpm	r24, Z
    13c6:	10 95       	com	r17
    13c8:	17 70       	andi	r17, 0x07	; 7
    13ca:	41 f0       	breq	.+16     	; 0x13dc <__ftoa_engine+0xf6>
    13cc:	d6 95       	lsr	r29
    13ce:	c7 95       	ror	r28
    13d0:	57 95       	ror	r21
    13d2:	47 95       	ror	r20
    13d4:	f7 94       	ror	r15
    13d6:	e7 94       	ror	r14
    13d8:	1a 95       	dec	r17
    13da:	c1 f7       	brne	.-16     	; 0x13cc <__ftoa_engine+0xe6>
    13dc:	e4 e5       	ldi	r30, 0x54	; 84
    13de:	f0 e0       	ldi	r31, 0x00	; 0
    13e0:	68 94       	set
    13e2:	15 90       	lpm	r1, Z+
    13e4:	15 91       	lpm	r17, Z+
    13e6:	35 91       	lpm	r19, Z+
    13e8:	65 91       	lpm	r22, Z+
    13ea:	95 91       	lpm	r25, Z+
    13ec:	05 90       	lpm	r0, Z+
    13ee:	7f e2       	ldi	r23, 0x2F	; 47
    13f0:	73 95       	inc	r23
    13f2:	e1 18       	sub	r14, r1
    13f4:	f1 0a       	sbc	r15, r17
    13f6:	43 0b       	sbc	r20, r19
    13f8:	56 0b       	sbc	r21, r22
    13fa:	c9 0b       	sbc	r28, r25
    13fc:	d0 09       	sbc	r29, r0
    13fe:	c0 f7       	brcc	.-16     	; 0x13f0 <__ftoa_engine+0x10a>
    1400:	e1 0c       	add	r14, r1
    1402:	f1 1e       	adc	r15, r17
    1404:	43 1f       	adc	r20, r19
    1406:	56 1f       	adc	r21, r22
    1408:	c9 1f       	adc	r28, r25
    140a:	d0 1d       	adc	r29, r0
    140c:	7e f4       	brtc	.+30     	; 0x142c <__ftoa_engine+0x146>
    140e:	70 33       	cpi	r23, 0x30	; 48
    1410:	11 f4       	brne	.+4      	; 0x1416 <__ftoa_engine+0x130>
    1412:	8a 95       	dec	r24
    1414:	e6 cf       	rjmp	.-52     	; 0x13e2 <__ftoa_engine+0xfc>
    1416:	e8 94       	clt
    1418:	01 50       	subi	r16, 0x01	; 1
    141a:	30 f0       	brcs	.+12     	; 0x1428 <__ftoa_engine+0x142>
    141c:	08 0f       	add	r16, r24
    141e:	0a f4       	brpl	.+2      	; 0x1422 <__ftoa_engine+0x13c>
    1420:	00 27       	eor	r16, r16
    1422:	02 17       	cp	r16, r18
    1424:	08 f4       	brcc	.+2      	; 0x1428 <__ftoa_engine+0x142>
    1426:	20 2f       	mov	r18, r16
    1428:	23 95       	inc	r18
    142a:	02 2f       	mov	r16, r18
    142c:	7a 33       	cpi	r23, 0x3A	; 58
    142e:	28 f0       	brcs	.+10     	; 0x143a <__ftoa_engine+0x154>
    1430:	79 e3       	ldi	r23, 0x39	; 57
    1432:	7d 93       	st	X+, r23
    1434:	2a 95       	dec	r18
    1436:	e9 f7       	brne	.-6      	; 0x1432 <__ftoa_engine+0x14c>
    1438:	10 c0       	rjmp	.+32     	; 0x145a <__ftoa_engine+0x174>
    143a:	7d 93       	st	X+, r23
    143c:	2a 95       	dec	r18
    143e:	89 f6       	brne	.-94     	; 0x13e2 <__ftoa_engine+0xfc>
    1440:	06 94       	lsr	r0
    1442:	97 95       	ror	r25
    1444:	67 95       	ror	r22
    1446:	37 95       	ror	r19
    1448:	17 95       	ror	r17
    144a:	17 94       	ror	r1
    144c:	e1 18       	sub	r14, r1
    144e:	f1 0a       	sbc	r15, r17
    1450:	43 0b       	sbc	r20, r19
    1452:	56 0b       	sbc	r21, r22
    1454:	c9 0b       	sbc	r28, r25
    1456:	d0 09       	sbc	r29, r0
    1458:	98 f0       	brcs	.+38     	; 0x1480 <__ftoa_engine+0x19a>
    145a:	23 95       	inc	r18
    145c:	7e 91       	ld	r23, -X
    145e:	73 95       	inc	r23
    1460:	7a 33       	cpi	r23, 0x3A	; 58
    1462:	08 f0       	brcs	.+2      	; 0x1466 <__ftoa_engine+0x180>
    1464:	70 e3       	ldi	r23, 0x30	; 48
    1466:	7c 93       	st	X, r23
    1468:	20 13       	cpse	r18, r16
    146a:	b8 f7       	brcc	.-18     	; 0x145a <__ftoa_engine+0x174>
    146c:	7e 91       	ld	r23, -X
    146e:	70 61       	ori	r23, 0x10	; 16
    1470:	7d 93       	st	X+, r23
    1472:	30 f0       	brcs	.+12     	; 0x1480 <__ftoa_engine+0x19a>
    1474:	83 95       	inc	r24
    1476:	71 e3       	ldi	r23, 0x31	; 49
    1478:	7d 93       	st	X+, r23
    147a:	70 e3       	ldi	r23, 0x30	; 48
    147c:	2a 95       	dec	r18
    147e:	e1 f7       	brne	.-8      	; 0x1478 <__ftoa_engine+0x192>
    1480:	11 24       	eor	r1, r1
    1482:	ef 90       	pop	r14
    1484:	ff 90       	pop	r15
    1486:	0f 91       	pop	r16
    1488:	1f 91       	pop	r17
    148a:	cf 91       	pop	r28
    148c:	df 91       	pop	r29
    148e:	99 27       	eor	r25, r25
    1490:	87 fd       	sbrc	r24, 7
    1492:	90 95       	com	r25
    1494:	08 95       	ret

00001496 <__divmodsi4>:
    1496:	05 2e       	mov	r0, r21
    1498:	97 fb       	bst	r25, 7
    149a:	1e f4       	brtc	.+6      	; 0x14a2 <__divmodsi4+0xc>
    149c:	00 94       	com	r0
    149e:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <__negsi2>
    14a2:	57 fd       	sbrc	r21, 7
    14a4:	07 d0       	rcall	.+14     	; 0x14b4 <__divmodsi4_neg2>
    14a6:	0e 94 b4 0a 	call	0x1568	; 0x1568 <__udivmodsi4>
    14aa:	07 fc       	sbrc	r0, 7
    14ac:	03 d0       	rcall	.+6      	; 0x14b4 <__divmodsi4_neg2>
    14ae:	4e f4       	brtc	.+18     	; 0x14c2 <__divmodsi4_exit>
    14b0:	0c 94 62 0a 	jmp	0x14c4	; 0x14c4 <__negsi2>

000014b4 <__divmodsi4_neg2>:
    14b4:	50 95       	com	r21
    14b6:	40 95       	com	r20
    14b8:	30 95       	com	r19
    14ba:	21 95       	neg	r18
    14bc:	3f 4f       	sbci	r19, 0xFF	; 255
    14be:	4f 4f       	sbci	r20, 0xFF	; 255
    14c0:	5f 4f       	sbci	r21, 0xFF	; 255

000014c2 <__divmodsi4_exit>:
    14c2:	08 95       	ret

000014c4 <__negsi2>:
    14c4:	90 95       	com	r25
    14c6:	80 95       	com	r24
    14c8:	70 95       	com	r23
    14ca:	61 95       	neg	r22
    14cc:	7f 4f       	sbci	r23, 0xFF	; 255
    14ce:	8f 4f       	sbci	r24, 0xFF	; 255
    14d0:	9f 4f       	sbci	r25, 0xFF	; 255
    14d2:	08 95       	ret

000014d4 <__muluhisi3>:
    14d4:	0e 94 d6 0a 	call	0x15ac	; 0x15ac <__umulhisi3>
    14d8:	a5 9f       	mul	r26, r21
    14da:	90 0d       	add	r25, r0
    14dc:	b4 9f       	mul	r27, r20
    14de:	90 0d       	add	r25, r0
    14e0:	a4 9f       	mul	r26, r20
    14e2:	80 0d       	add	r24, r0
    14e4:	91 1d       	adc	r25, r1
    14e6:	11 24       	eor	r1, r1
    14e8:	08 95       	ret

000014ea <__mulshisi3>:
    14ea:	b7 ff       	sbrs	r27, 7
    14ec:	0c 94 6a 0a 	jmp	0x14d4	; 0x14d4 <__muluhisi3>

000014f0 <__mulohisi3>:
    14f0:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <__muluhisi3>
    14f4:	82 1b       	sub	r24, r18
    14f6:	93 0b       	sbc	r25, r19
    14f8:	08 95       	ret

000014fa <__prologue_saves__>:
    14fa:	2f 92       	push	r2
    14fc:	3f 92       	push	r3
    14fe:	4f 92       	push	r4
    1500:	5f 92       	push	r5
    1502:	6f 92       	push	r6
    1504:	7f 92       	push	r7
    1506:	8f 92       	push	r8
    1508:	9f 92       	push	r9
    150a:	af 92       	push	r10
    150c:	bf 92       	push	r11
    150e:	cf 92       	push	r12
    1510:	df 92       	push	r13
    1512:	ef 92       	push	r14
    1514:	ff 92       	push	r15
    1516:	0f 93       	push	r16
    1518:	1f 93       	push	r17
    151a:	cf 93       	push	r28
    151c:	df 93       	push	r29
    151e:	cd b7       	in	r28, 0x3d	; 61
    1520:	de b7       	in	r29, 0x3e	; 62
    1522:	ca 1b       	sub	r28, r26
    1524:	db 0b       	sbc	r29, r27
    1526:	0f b6       	in	r0, 0x3f	; 63
    1528:	f8 94       	cli
    152a:	de bf       	out	0x3e, r29	; 62
    152c:	0f be       	out	0x3f, r0	; 63
    152e:	cd bf       	out	0x3d, r28	; 61
    1530:	09 94       	ijmp

00001532 <__epilogue_restores__>:
    1532:	2a 88       	ldd	r2, Y+18	; 0x12
    1534:	39 88       	ldd	r3, Y+17	; 0x11
    1536:	48 88       	ldd	r4, Y+16	; 0x10
    1538:	5f 84       	ldd	r5, Y+15	; 0x0f
    153a:	6e 84       	ldd	r6, Y+14	; 0x0e
    153c:	7d 84       	ldd	r7, Y+13	; 0x0d
    153e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1540:	9b 84       	ldd	r9, Y+11	; 0x0b
    1542:	aa 84       	ldd	r10, Y+10	; 0x0a
    1544:	b9 84       	ldd	r11, Y+9	; 0x09
    1546:	c8 84       	ldd	r12, Y+8	; 0x08
    1548:	df 80       	ldd	r13, Y+7	; 0x07
    154a:	ee 80       	ldd	r14, Y+6	; 0x06
    154c:	fd 80       	ldd	r15, Y+5	; 0x05
    154e:	0c 81       	ldd	r16, Y+4	; 0x04
    1550:	1b 81       	ldd	r17, Y+3	; 0x03
    1552:	aa 81       	ldd	r26, Y+2	; 0x02
    1554:	b9 81       	ldd	r27, Y+1	; 0x01
    1556:	ce 0f       	add	r28, r30
    1558:	d1 1d       	adc	r29, r1
    155a:	0f b6       	in	r0, 0x3f	; 63
    155c:	f8 94       	cli
    155e:	de bf       	out	0x3e, r29	; 62
    1560:	0f be       	out	0x3f, r0	; 63
    1562:	cd bf       	out	0x3d, r28	; 61
    1564:	ed 01       	movw	r28, r26
    1566:	08 95       	ret

00001568 <__udivmodsi4>:
    1568:	a1 e2       	ldi	r26, 0x21	; 33
    156a:	1a 2e       	mov	r1, r26
    156c:	aa 1b       	sub	r26, r26
    156e:	bb 1b       	sub	r27, r27
    1570:	fd 01       	movw	r30, r26
    1572:	0d c0       	rjmp	.+26     	; 0x158e <__udivmodsi4_ep>

00001574 <__udivmodsi4_loop>:
    1574:	aa 1f       	adc	r26, r26
    1576:	bb 1f       	adc	r27, r27
    1578:	ee 1f       	adc	r30, r30
    157a:	ff 1f       	adc	r31, r31
    157c:	a2 17       	cp	r26, r18
    157e:	b3 07       	cpc	r27, r19
    1580:	e4 07       	cpc	r30, r20
    1582:	f5 07       	cpc	r31, r21
    1584:	20 f0       	brcs	.+8      	; 0x158e <__udivmodsi4_ep>
    1586:	a2 1b       	sub	r26, r18
    1588:	b3 0b       	sbc	r27, r19
    158a:	e4 0b       	sbc	r30, r20
    158c:	f5 0b       	sbc	r31, r21

0000158e <__udivmodsi4_ep>:
    158e:	66 1f       	adc	r22, r22
    1590:	77 1f       	adc	r23, r23
    1592:	88 1f       	adc	r24, r24
    1594:	99 1f       	adc	r25, r25
    1596:	1a 94       	dec	r1
    1598:	69 f7       	brne	.-38     	; 0x1574 <__udivmodsi4_loop>
    159a:	60 95       	com	r22
    159c:	70 95       	com	r23
    159e:	80 95       	com	r24
    15a0:	90 95       	com	r25
    15a2:	9b 01       	movw	r18, r22
    15a4:	ac 01       	movw	r20, r24
    15a6:	bd 01       	movw	r22, r26
    15a8:	cf 01       	movw	r24, r30
    15aa:	08 95       	ret

000015ac <__umulhisi3>:
    15ac:	a2 9f       	mul	r26, r18
    15ae:	b0 01       	movw	r22, r0
    15b0:	b3 9f       	mul	r27, r19
    15b2:	c0 01       	movw	r24, r0
    15b4:	a3 9f       	mul	r26, r19
    15b6:	70 0d       	add	r23, r0
    15b8:	81 1d       	adc	r24, r1
    15ba:	11 24       	eor	r1, r1
    15bc:	91 1d       	adc	r25, r1
    15be:	b2 9f       	mul	r27, r18
    15c0:	70 0d       	add	r23, r0
    15c2:	81 1d       	adc	r24, r1
    15c4:	11 24       	eor	r1, r1
    15c6:	91 1d       	adc	r25, r1
    15c8:	08 95       	ret

000015ca <_exit>:
    15ca:	f8 94       	cli

000015cc <__stop_program>:
    15cc:	ff cf       	rjmp	.-2      	; 0x15cc <__stop_program>


RFID Module.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000af2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000d0  00800060  00000af2  00000b86  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000010  00800130  00800130  00000c56  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c56  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000c88  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  00000cc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001ac8  00000000  00000000  00000d94  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000759  00000000  00000000  0000285c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c60  00000000  00000000  00002fb5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001f8  00000000  00000000  00003c18  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004c8  00000000  00000000  00003e10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000154a  00000000  00000000  000042d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  00005822  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	11 e0       	ldi	r17, 0x01	; 1
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 ef       	ldi	r30, 0xF2	; 242
  68:	fa e0       	ldi	r31, 0x0A	; 10
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 33       	cpi	r26, 0x30	; 48
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	21 e0       	ldi	r18, 0x01	; 1
  78:	a0 e3       	ldi	r26, 0x30	; 48
  7a:	b1 e0       	ldi	r27, 0x01	; 1
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 34       	cpi	r26, 0x40	; 64
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 38 03 	call	0x670	; 0x670 <main>
  8a:	0c 94 77 05 	jmp	0xaee	; 0xaee <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <pinChange>:
}

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
	Lcd4_Cmd(0x08);
  92:	67 2b       	or	r22, r23
  94:	09 f0       	breq	.+2      	; 0x98 <pinChange+0x6>
  96:	df c0       	rjmp	.+446    	; 0x256 <pinChange+0x1c4>
  98:	00 97       	sbiw	r24, 0x00	; 0
  9a:	21 f4       	brne	.+8      	; 0xa4 <pinChange+0x12>
  9c:	8b b3       	in	r24, 0x1b	; 27
  9e:	8e 7f       	andi	r24, 0xFE	; 254
  a0:	8b bb       	out	0x1b, r24	; 27
  a2:	08 95       	ret
  a4:	81 30       	cpi	r24, 0x01	; 1
  a6:	91 05       	cpc	r25, r1
  a8:	21 f4       	brne	.+8      	; 0xb2 <pinChange+0x20>
  aa:	8b b3       	in	r24, 0x1b	; 27
  ac:	8d 7f       	andi	r24, 0xFD	; 253
  ae:	8b bb       	out	0x1b, r24	; 27
  b0:	08 95       	ret
  b2:	82 30       	cpi	r24, 0x02	; 2
  b4:	91 05       	cpc	r25, r1
  b6:	21 f4       	brne	.+8      	; 0xc0 <pinChange+0x2e>
  b8:	8b b3       	in	r24, 0x1b	; 27
  ba:	8b 7f       	andi	r24, 0xFB	; 251
  bc:	8b bb       	out	0x1b, r24	; 27
  be:	08 95       	ret
  c0:	83 30       	cpi	r24, 0x03	; 3
  c2:	91 05       	cpc	r25, r1
  c4:	21 f4       	brne	.+8      	; 0xce <pinChange+0x3c>
  c6:	8b b3       	in	r24, 0x1b	; 27
  c8:	87 7f       	andi	r24, 0xF7	; 247
  ca:	8b bb       	out	0x1b, r24	; 27
  cc:	08 95       	ret
  ce:	84 30       	cpi	r24, 0x04	; 4
  d0:	91 05       	cpc	r25, r1
  d2:	21 f4       	brne	.+8      	; 0xdc <pinChange+0x4a>
  d4:	8b b3       	in	r24, 0x1b	; 27
  d6:	8f 7e       	andi	r24, 0xEF	; 239
  d8:	8b bb       	out	0x1b, r24	; 27
  da:	08 95       	ret
  dc:	85 30       	cpi	r24, 0x05	; 5
  de:	91 05       	cpc	r25, r1
  e0:	21 f4       	brne	.+8      	; 0xea <pinChange+0x58>
  e2:	8b b3       	in	r24, 0x1b	; 27
  e4:	8f 7d       	andi	r24, 0xDF	; 223
  e6:	8b bb       	out	0x1b, r24	; 27
  e8:	08 95       	ret
  ea:	86 30       	cpi	r24, 0x06	; 6
  ec:	91 05       	cpc	r25, r1
  ee:	21 f4       	brne	.+8      	; 0xf8 <pinChange+0x66>
  f0:	8b b3       	in	r24, 0x1b	; 27
  f2:	8f 7b       	andi	r24, 0xBF	; 191
  f4:	8b bb       	out	0x1b, r24	; 27
  f6:	08 95       	ret
  f8:	87 30       	cpi	r24, 0x07	; 7
  fa:	91 05       	cpc	r25, r1
  fc:	21 f4       	brne	.+8      	; 0x106 <pinChange+0x74>
  fe:	8b b3       	in	r24, 0x1b	; 27
 100:	8f 77       	andi	r24, 0x7F	; 127
 102:	8b bb       	out	0x1b, r24	; 27
 104:	08 95       	ret
 106:	8a 30       	cpi	r24, 0x0A	; 10
 108:	91 05       	cpc	r25, r1
 10a:	21 f4       	brne	.+8      	; 0x114 <pinChange+0x82>
 10c:	88 b3       	in	r24, 0x18	; 24
 10e:	8e 7f       	andi	r24, 0xFE	; 254
 110:	88 bb       	out	0x18, r24	; 24
 112:	08 95       	ret
 114:	8b 30       	cpi	r24, 0x0B	; 11
 116:	91 05       	cpc	r25, r1
 118:	21 f4       	brne	.+8      	; 0x122 <pinChange+0x90>
 11a:	88 b3       	in	r24, 0x18	; 24
 11c:	8d 7f       	andi	r24, 0xFD	; 253
 11e:	88 bb       	out	0x18, r24	; 24
 120:	08 95       	ret
 122:	8c 30       	cpi	r24, 0x0C	; 12
 124:	91 05       	cpc	r25, r1
 126:	21 f4       	brne	.+8      	; 0x130 <pinChange+0x9e>
 128:	88 b3       	in	r24, 0x18	; 24
 12a:	8b 7f       	andi	r24, 0xFB	; 251
 12c:	88 bb       	out	0x18, r24	; 24
 12e:	08 95       	ret
 130:	8d 30       	cpi	r24, 0x0D	; 13
 132:	91 05       	cpc	r25, r1
 134:	21 f4       	brne	.+8      	; 0x13e <pinChange+0xac>
 136:	88 b3       	in	r24, 0x18	; 24
 138:	87 7f       	andi	r24, 0xF7	; 247
 13a:	88 bb       	out	0x18, r24	; 24
 13c:	08 95       	ret
 13e:	8e 30       	cpi	r24, 0x0E	; 14
 140:	91 05       	cpc	r25, r1
 142:	21 f4       	brne	.+8      	; 0x14c <pinChange+0xba>
 144:	88 b3       	in	r24, 0x18	; 24
 146:	8f 7e       	andi	r24, 0xEF	; 239
 148:	88 bb       	out	0x18, r24	; 24
 14a:	08 95       	ret
 14c:	8f 30       	cpi	r24, 0x0F	; 15
 14e:	91 05       	cpc	r25, r1
 150:	21 f4       	brne	.+8      	; 0x15a <pinChange+0xc8>
 152:	88 b3       	in	r24, 0x18	; 24
 154:	8f 7d       	andi	r24, 0xDF	; 223
 156:	88 bb       	out	0x18, r24	; 24
 158:	08 95       	ret
 15a:	80 31       	cpi	r24, 0x10	; 16
 15c:	91 05       	cpc	r25, r1
 15e:	21 f4       	brne	.+8      	; 0x168 <pinChange+0xd6>
 160:	88 b3       	in	r24, 0x18	; 24
 162:	8f 7b       	andi	r24, 0xBF	; 191
 164:	88 bb       	out	0x18, r24	; 24
 166:	08 95       	ret
 168:	81 31       	cpi	r24, 0x11	; 17
 16a:	91 05       	cpc	r25, r1
 16c:	21 f4       	brne	.+8      	; 0x176 <pinChange+0xe4>
 16e:	88 b3       	in	r24, 0x18	; 24
 170:	8f 77       	andi	r24, 0x7F	; 127
 172:	88 bb       	out	0x18, r24	; 24
 174:	08 95       	ret
 176:	84 31       	cpi	r24, 0x14	; 20
 178:	91 05       	cpc	r25, r1
 17a:	21 f4       	brne	.+8      	; 0x184 <pinChange+0xf2>
 17c:	85 b3       	in	r24, 0x15	; 21
 17e:	8e 7f       	andi	r24, 0xFE	; 254
 180:	85 bb       	out	0x15, r24	; 21
 182:	08 95       	ret
 184:	85 31       	cpi	r24, 0x15	; 21
 186:	91 05       	cpc	r25, r1
 188:	21 f4       	brne	.+8      	; 0x192 <pinChange+0x100>
 18a:	85 b3       	in	r24, 0x15	; 21
 18c:	8d 7f       	andi	r24, 0xFD	; 253
 18e:	85 bb       	out	0x15, r24	; 21
 190:	08 95       	ret
 192:	86 31       	cpi	r24, 0x16	; 22
 194:	91 05       	cpc	r25, r1
 196:	21 f4       	brne	.+8      	; 0x1a0 <pinChange+0x10e>
 198:	85 b3       	in	r24, 0x15	; 21
 19a:	8b 7f       	andi	r24, 0xFB	; 251
 19c:	85 bb       	out	0x15, r24	; 21
 19e:	08 95       	ret
 1a0:	87 31       	cpi	r24, 0x17	; 23
 1a2:	91 05       	cpc	r25, r1
 1a4:	21 f4       	brne	.+8      	; 0x1ae <pinChange+0x11c>
 1a6:	85 b3       	in	r24, 0x15	; 21
 1a8:	87 7f       	andi	r24, 0xF7	; 247
 1aa:	85 bb       	out	0x15, r24	; 21
 1ac:	08 95       	ret
 1ae:	88 31       	cpi	r24, 0x18	; 24
 1b0:	91 05       	cpc	r25, r1
 1b2:	21 f4       	brne	.+8      	; 0x1bc <pinChange+0x12a>
 1b4:	85 b3       	in	r24, 0x15	; 21
 1b6:	8f 7e       	andi	r24, 0xEF	; 239
 1b8:	85 bb       	out	0x15, r24	; 21
 1ba:	08 95       	ret
 1bc:	89 31       	cpi	r24, 0x19	; 25
 1be:	91 05       	cpc	r25, r1
 1c0:	21 f4       	brne	.+8      	; 0x1ca <pinChange+0x138>
 1c2:	85 b3       	in	r24, 0x15	; 21
 1c4:	8f 7d       	andi	r24, 0xDF	; 223
 1c6:	85 bb       	out	0x15, r24	; 21
 1c8:	08 95       	ret
 1ca:	8a 31       	cpi	r24, 0x1A	; 26
 1cc:	91 05       	cpc	r25, r1
 1ce:	21 f4       	brne	.+8      	; 0x1d8 <pinChange+0x146>
 1d0:	85 b3       	in	r24, 0x15	; 21
 1d2:	8f 7b       	andi	r24, 0xBF	; 191
 1d4:	85 bb       	out	0x15, r24	; 21
 1d6:	08 95       	ret
 1d8:	8b 31       	cpi	r24, 0x1B	; 27
 1da:	91 05       	cpc	r25, r1
 1dc:	21 f4       	brne	.+8      	; 0x1e6 <pinChange+0x154>
 1de:	85 b3       	in	r24, 0x15	; 21
 1e0:	8f 77       	andi	r24, 0x7F	; 127
 1e2:	85 bb       	out	0x15, r24	; 21
 1e4:	08 95       	ret
 1e6:	8e 31       	cpi	r24, 0x1E	; 30
 1e8:	91 05       	cpc	r25, r1
 1ea:	21 f4       	brne	.+8      	; 0x1f4 <pinChange+0x162>
 1ec:	82 b3       	in	r24, 0x12	; 18
 1ee:	8e 7f       	andi	r24, 0xFE	; 254
 1f0:	82 bb       	out	0x12, r24	; 18
 1f2:	08 95       	ret
 1f4:	8f 31       	cpi	r24, 0x1F	; 31
 1f6:	91 05       	cpc	r25, r1
 1f8:	21 f4       	brne	.+8      	; 0x202 <pinChange+0x170>
 1fa:	82 b3       	in	r24, 0x12	; 18
 1fc:	8d 7f       	andi	r24, 0xFD	; 253
 1fe:	82 bb       	out	0x12, r24	; 18
 200:	08 95       	ret
 202:	80 32       	cpi	r24, 0x20	; 32
 204:	91 05       	cpc	r25, r1
 206:	21 f4       	brne	.+8      	; 0x210 <pinChange+0x17e>
 208:	82 b3       	in	r24, 0x12	; 18
 20a:	8b 7f       	andi	r24, 0xFB	; 251
 20c:	82 bb       	out	0x12, r24	; 18
 20e:	08 95       	ret
 210:	81 32       	cpi	r24, 0x21	; 33
 212:	91 05       	cpc	r25, r1
 214:	21 f4       	brne	.+8      	; 0x21e <pinChange+0x18c>
 216:	82 b3       	in	r24, 0x12	; 18
 218:	87 7f       	andi	r24, 0xF7	; 247
 21a:	82 bb       	out	0x12, r24	; 18
 21c:	08 95       	ret
 21e:	82 32       	cpi	r24, 0x22	; 34
 220:	91 05       	cpc	r25, r1
 222:	21 f4       	brne	.+8      	; 0x22c <pinChange+0x19a>
 224:	82 b3       	in	r24, 0x12	; 18
 226:	8f 7e       	andi	r24, 0xEF	; 239
 228:	82 bb       	out	0x12, r24	; 18
 22a:	08 95       	ret
 22c:	83 32       	cpi	r24, 0x23	; 35
 22e:	91 05       	cpc	r25, r1
 230:	21 f4       	brne	.+8      	; 0x23a <pinChange+0x1a8>
 232:	82 b3       	in	r24, 0x12	; 18
 234:	8f 7d       	andi	r24, 0xDF	; 223
 236:	82 bb       	out	0x12, r24	; 18
 238:	08 95       	ret
 23a:	84 32       	cpi	r24, 0x24	; 36
 23c:	91 05       	cpc	r25, r1
 23e:	21 f4       	brne	.+8      	; 0x248 <pinChange+0x1b6>
 240:	82 b3       	in	r24, 0x12	; 18
 242:	8f 7b       	andi	r24, 0xBF	; 191
 244:	82 bb       	out	0x12, r24	; 18
 246:	08 95       	ret
 248:	85 97       	sbiw	r24, 0x25	; 37
 24a:	09 f0       	breq	.+2      	; 0x24e <pinChange+0x1bc>
 24c:	e1 c0       	rjmp	.+450    	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 24e:	82 b3       	in	r24, 0x12	; 18
 250:	8f 77       	andi	r24, 0x7F	; 127
 252:	82 bb       	out	0x12, r24	; 18
 254:	08 95       	ret
 256:	00 97       	sbiw	r24, 0x00	; 0
 258:	21 f4       	brne	.+8      	; 0x262 <pinChange+0x1d0>
 25a:	8b b3       	in	r24, 0x1b	; 27
 25c:	81 60       	ori	r24, 0x01	; 1
 25e:	8b bb       	out	0x1b, r24	; 27
 260:	08 95       	ret
 262:	81 30       	cpi	r24, 0x01	; 1
 264:	91 05       	cpc	r25, r1
 266:	21 f4       	brne	.+8      	; 0x270 <pinChange+0x1de>
 268:	8b b3       	in	r24, 0x1b	; 27
 26a:	82 60       	ori	r24, 0x02	; 2
 26c:	8b bb       	out	0x1b, r24	; 27
 26e:	08 95       	ret
 270:	82 30       	cpi	r24, 0x02	; 2
 272:	91 05       	cpc	r25, r1
 274:	21 f4       	brne	.+8      	; 0x27e <pinChange+0x1ec>
 276:	8b b3       	in	r24, 0x1b	; 27
 278:	84 60       	ori	r24, 0x04	; 4
 27a:	8b bb       	out	0x1b, r24	; 27
 27c:	08 95       	ret
 27e:	83 30       	cpi	r24, 0x03	; 3
 280:	91 05       	cpc	r25, r1
 282:	21 f4       	brne	.+8      	; 0x28c <pinChange+0x1fa>
 284:	8b b3       	in	r24, 0x1b	; 27
 286:	88 60       	ori	r24, 0x08	; 8
 288:	8b bb       	out	0x1b, r24	; 27
 28a:	08 95       	ret
 28c:	84 30       	cpi	r24, 0x04	; 4
 28e:	91 05       	cpc	r25, r1
 290:	21 f4       	brne	.+8      	; 0x29a <pinChange+0x208>
 292:	8b b3       	in	r24, 0x1b	; 27
 294:	80 61       	ori	r24, 0x10	; 16
 296:	8b bb       	out	0x1b, r24	; 27
 298:	08 95       	ret
 29a:	85 30       	cpi	r24, 0x05	; 5
 29c:	91 05       	cpc	r25, r1
 29e:	21 f4       	brne	.+8      	; 0x2a8 <pinChange+0x216>
 2a0:	8b b3       	in	r24, 0x1b	; 27
 2a2:	80 62       	ori	r24, 0x20	; 32
 2a4:	8b bb       	out	0x1b, r24	; 27
 2a6:	08 95       	ret
 2a8:	86 30       	cpi	r24, 0x06	; 6
 2aa:	91 05       	cpc	r25, r1
 2ac:	21 f4       	brne	.+8      	; 0x2b6 <pinChange+0x224>
 2ae:	8b b3       	in	r24, 0x1b	; 27
 2b0:	80 64       	ori	r24, 0x40	; 64
 2b2:	8b bb       	out	0x1b, r24	; 27
 2b4:	08 95       	ret
 2b6:	87 30       	cpi	r24, 0x07	; 7
 2b8:	91 05       	cpc	r25, r1
 2ba:	21 f4       	brne	.+8      	; 0x2c4 <pinChange+0x232>
 2bc:	8b b3       	in	r24, 0x1b	; 27
 2be:	80 68       	ori	r24, 0x80	; 128
 2c0:	8b bb       	out	0x1b, r24	; 27
 2c2:	08 95       	ret
 2c4:	8a 30       	cpi	r24, 0x0A	; 10
 2c6:	91 05       	cpc	r25, r1
 2c8:	21 f4       	brne	.+8      	; 0x2d2 <pinChange+0x240>
 2ca:	88 b3       	in	r24, 0x18	; 24
 2cc:	81 60       	ori	r24, 0x01	; 1
 2ce:	88 bb       	out	0x18, r24	; 24
 2d0:	08 95       	ret
 2d2:	8b 30       	cpi	r24, 0x0B	; 11
 2d4:	91 05       	cpc	r25, r1
 2d6:	21 f4       	brne	.+8      	; 0x2e0 <pinChange+0x24e>
 2d8:	88 b3       	in	r24, 0x18	; 24
 2da:	82 60       	ori	r24, 0x02	; 2
 2dc:	88 bb       	out	0x18, r24	; 24
 2de:	08 95       	ret
 2e0:	8c 30       	cpi	r24, 0x0C	; 12
 2e2:	91 05       	cpc	r25, r1
 2e4:	21 f4       	brne	.+8      	; 0x2ee <pinChange+0x25c>
 2e6:	88 b3       	in	r24, 0x18	; 24
 2e8:	84 60       	ori	r24, 0x04	; 4
 2ea:	88 bb       	out	0x18, r24	; 24
 2ec:	08 95       	ret
 2ee:	8d 30       	cpi	r24, 0x0D	; 13
 2f0:	91 05       	cpc	r25, r1
 2f2:	21 f4       	brne	.+8      	; 0x2fc <pinChange+0x26a>
 2f4:	88 b3       	in	r24, 0x18	; 24
 2f6:	88 60       	ori	r24, 0x08	; 8
 2f8:	88 bb       	out	0x18, r24	; 24
 2fa:	08 95       	ret
 2fc:	8e 30       	cpi	r24, 0x0E	; 14
 2fe:	91 05       	cpc	r25, r1
 300:	21 f4       	brne	.+8      	; 0x30a <pinChange+0x278>
 302:	88 b3       	in	r24, 0x18	; 24
 304:	80 61       	ori	r24, 0x10	; 16
 306:	88 bb       	out	0x18, r24	; 24
 308:	08 95       	ret
 30a:	8f 30       	cpi	r24, 0x0F	; 15
 30c:	91 05       	cpc	r25, r1
 30e:	21 f4       	brne	.+8      	; 0x318 <pinChange+0x286>
 310:	88 b3       	in	r24, 0x18	; 24
 312:	80 62       	ori	r24, 0x20	; 32
 314:	88 bb       	out	0x18, r24	; 24
 316:	08 95       	ret
 318:	80 31       	cpi	r24, 0x10	; 16
 31a:	91 05       	cpc	r25, r1
 31c:	21 f4       	brne	.+8      	; 0x326 <pinChange+0x294>
 31e:	88 b3       	in	r24, 0x18	; 24
 320:	80 64       	ori	r24, 0x40	; 64
 322:	88 bb       	out	0x18, r24	; 24
 324:	08 95       	ret
 326:	81 31       	cpi	r24, 0x11	; 17
 328:	91 05       	cpc	r25, r1
 32a:	21 f4       	brne	.+8      	; 0x334 <pinChange+0x2a2>
 32c:	88 b3       	in	r24, 0x18	; 24
 32e:	80 68       	ori	r24, 0x80	; 128
 330:	88 bb       	out	0x18, r24	; 24
 332:	08 95       	ret
 334:	84 31       	cpi	r24, 0x14	; 20
 336:	91 05       	cpc	r25, r1
 338:	21 f4       	brne	.+8      	; 0x342 <pinChange+0x2b0>
 33a:	85 b3       	in	r24, 0x15	; 21
 33c:	81 60       	ori	r24, 0x01	; 1
 33e:	85 bb       	out	0x15, r24	; 21
 340:	08 95       	ret
 342:	85 31       	cpi	r24, 0x15	; 21
 344:	91 05       	cpc	r25, r1
 346:	21 f4       	brne	.+8      	; 0x350 <pinChange+0x2be>
 348:	85 b3       	in	r24, 0x15	; 21
 34a:	82 60       	ori	r24, 0x02	; 2
 34c:	85 bb       	out	0x15, r24	; 21
 34e:	08 95       	ret
 350:	86 31       	cpi	r24, 0x16	; 22
 352:	91 05       	cpc	r25, r1
 354:	21 f4       	brne	.+8      	; 0x35e <pinChange+0x2cc>
 356:	85 b3       	in	r24, 0x15	; 21
 358:	84 60       	ori	r24, 0x04	; 4
 35a:	85 bb       	out	0x15, r24	; 21
 35c:	08 95       	ret
 35e:	87 31       	cpi	r24, 0x17	; 23
 360:	91 05       	cpc	r25, r1
 362:	21 f4       	brne	.+8      	; 0x36c <pinChange+0x2da>
 364:	85 b3       	in	r24, 0x15	; 21
 366:	88 60       	ori	r24, 0x08	; 8
 368:	85 bb       	out	0x15, r24	; 21
 36a:	08 95       	ret
 36c:	88 31       	cpi	r24, 0x18	; 24
 36e:	91 05       	cpc	r25, r1
 370:	21 f4       	brne	.+8      	; 0x37a <pinChange+0x2e8>
 372:	85 b3       	in	r24, 0x15	; 21
 374:	80 61       	ori	r24, 0x10	; 16
 376:	85 bb       	out	0x15, r24	; 21
 378:	08 95       	ret
 37a:	89 31       	cpi	r24, 0x19	; 25
 37c:	91 05       	cpc	r25, r1
 37e:	21 f4       	brne	.+8      	; 0x388 <pinChange+0x2f6>
 380:	85 b3       	in	r24, 0x15	; 21
 382:	80 62       	ori	r24, 0x20	; 32
 384:	85 bb       	out	0x15, r24	; 21
 386:	08 95       	ret
 388:	8a 31       	cpi	r24, 0x1A	; 26
 38a:	91 05       	cpc	r25, r1
 38c:	21 f4       	brne	.+8      	; 0x396 <pinChange+0x304>
 38e:	85 b3       	in	r24, 0x15	; 21
 390:	80 64       	ori	r24, 0x40	; 64
 392:	85 bb       	out	0x15, r24	; 21
 394:	08 95       	ret
 396:	8b 31       	cpi	r24, 0x1B	; 27
 398:	91 05       	cpc	r25, r1
 39a:	21 f4       	brne	.+8      	; 0x3a4 <pinChange+0x312>
 39c:	85 b3       	in	r24, 0x15	; 21
 39e:	80 68       	ori	r24, 0x80	; 128
 3a0:	85 bb       	out	0x15, r24	; 21
 3a2:	08 95       	ret
 3a4:	8e 31       	cpi	r24, 0x1E	; 30
 3a6:	91 05       	cpc	r25, r1
 3a8:	21 f4       	brne	.+8      	; 0x3b2 <pinChange+0x320>
 3aa:	82 b3       	in	r24, 0x12	; 18
 3ac:	81 60       	ori	r24, 0x01	; 1
 3ae:	82 bb       	out	0x12, r24	; 18
 3b0:	08 95       	ret
 3b2:	8f 31       	cpi	r24, 0x1F	; 31
 3b4:	91 05       	cpc	r25, r1
 3b6:	21 f4       	brne	.+8      	; 0x3c0 <pinChange+0x32e>
 3b8:	82 b3       	in	r24, 0x12	; 18
 3ba:	82 60       	ori	r24, 0x02	; 2
 3bc:	82 bb       	out	0x12, r24	; 18
 3be:	08 95       	ret
 3c0:	80 32       	cpi	r24, 0x20	; 32
 3c2:	91 05       	cpc	r25, r1
 3c4:	21 f4       	brne	.+8      	; 0x3ce <pinChange+0x33c>
 3c6:	82 b3       	in	r24, 0x12	; 18
 3c8:	84 60       	ori	r24, 0x04	; 4
 3ca:	82 bb       	out	0x12, r24	; 18
 3cc:	08 95       	ret
 3ce:	81 32       	cpi	r24, 0x21	; 33
 3d0:	91 05       	cpc	r25, r1
 3d2:	21 f4       	brne	.+8      	; 0x3dc <pinChange+0x34a>
 3d4:	82 b3       	in	r24, 0x12	; 18
 3d6:	88 60       	ori	r24, 0x08	; 8
 3d8:	82 bb       	out	0x12, r24	; 18
 3da:	08 95       	ret
 3dc:	82 32       	cpi	r24, 0x22	; 34
 3de:	91 05       	cpc	r25, r1
 3e0:	21 f4       	brne	.+8      	; 0x3ea <pinChange+0x358>
 3e2:	82 b3       	in	r24, 0x12	; 18
 3e4:	80 61       	ori	r24, 0x10	; 16
 3e6:	82 bb       	out	0x12, r24	; 18
 3e8:	08 95       	ret
 3ea:	83 32       	cpi	r24, 0x23	; 35
 3ec:	91 05       	cpc	r25, r1
 3ee:	21 f4       	brne	.+8      	; 0x3f8 <pinChange+0x366>
 3f0:	82 b3       	in	r24, 0x12	; 18
 3f2:	80 62       	ori	r24, 0x20	; 32
 3f4:	82 bb       	out	0x12, r24	; 18
 3f6:	08 95       	ret
 3f8:	84 32       	cpi	r24, 0x24	; 36
 3fa:	91 05       	cpc	r25, r1
 3fc:	21 f4       	brne	.+8      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3fe:	82 b3       	in	r24, 0x12	; 18
 400:	80 64       	ori	r24, 0x40	; 64
 402:	82 bb       	out	0x12, r24	; 18
 404:	08 95       	ret
 406:	85 97       	sbiw	r24, 0x25	; 37
 408:	19 f4       	brne	.+6      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 40a:	82 b3       	in	r24, 0x12	; 18
 40c:	80 68       	ori	r24, 0x80	; 128
 40e:	82 bb       	out	0x12, r24	; 18
 410:	08 95       	ret

00000412 <Lcd4_Port>:
 412:	cf 93       	push	r28
 414:	c8 2f       	mov	r28, r24
 416:	80 ff       	sbrs	r24, 0
 418:	07 c0       	rjmp	.+14     	; 0x428 <Lcd4_Port+0x16>
 41a:	61 e0       	ldi	r22, 0x01	; 1
 41c:	70 e0       	ldi	r23, 0x00	; 0
 41e:	84 e0       	ldi	r24, 0x04	; 4
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 426:	06 c0       	rjmp	.+12     	; 0x434 <Lcd4_Port+0x22>
 428:	60 e0       	ldi	r22, 0x00	; 0
 42a:	70 e0       	ldi	r23, 0x00	; 0
 42c:	84 e0       	ldi	r24, 0x04	; 4
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 434:	c1 ff       	sbrs	r28, 1
 436:	07 c0       	rjmp	.+14     	; 0x446 <Lcd4_Port+0x34>
 438:	61 e0       	ldi	r22, 0x01	; 1
 43a:	70 e0       	ldi	r23, 0x00	; 0
 43c:	85 e0       	ldi	r24, 0x05	; 5
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 444:	06 c0       	rjmp	.+12     	; 0x452 <Lcd4_Port+0x40>
 446:	60 e0       	ldi	r22, 0x00	; 0
 448:	70 e0       	ldi	r23, 0x00	; 0
 44a:	85 e0       	ldi	r24, 0x05	; 5
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 452:	c2 ff       	sbrs	r28, 2
 454:	07 c0       	rjmp	.+14     	; 0x464 <Lcd4_Port+0x52>
 456:	61 e0       	ldi	r22, 0x01	; 1
 458:	70 e0       	ldi	r23, 0x00	; 0
 45a:	86 e0       	ldi	r24, 0x06	; 6
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 462:	06 c0       	rjmp	.+12     	; 0x470 <Lcd4_Port+0x5e>
 464:	60 e0       	ldi	r22, 0x00	; 0
 466:	70 e0       	ldi	r23, 0x00	; 0
 468:	86 e0       	ldi	r24, 0x06	; 6
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 470:	c3 ff       	sbrs	r28, 3
 472:	07 c0       	rjmp	.+14     	; 0x482 <Lcd4_Port+0x70>
 474:	61 e0       	ldi	r22, 0x01	; 1
 476:	70 e0       	ldi	r23, 0x00	; 0
 478:	87 e0       	ldi	r24, 0x07	; 7
 47a:	90 e0       	ldi	r25, 0x00	; 0
 47c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 480:	06 c0       	rjmp	.+12     	; 0x48e <Lcd4_Port+0x7c>
 482:	60 e0       	ldi	r22, 0x00	; 0
 484:	70 e0       	ldi	r23, 0x00	; 0
 486:	87 e0       	ldi	r24, 0x07	; 7
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 48e:	cf 91       	pop	r28
 490:	08 95       	ret

00000492 <Lcd4_Cmd>:
 492:	cf 93       	push	r28
 494:	c8 2f       	mov	r28, r24
 496:	60 e0       	ldi	r22, 0x00	; 0
 498:	70 e0       	ldi	r23, 0x00	; 0
 49a:	80 e0       	ldi	r24, 0x00	; 0
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4a2:	8c 2f       	mov	r24, r28
 4a4:	0e 94 09 02 	call	0x412	; 0x412 <Lcd4_Port>
 4a8:	61 e0       	ldi	r22, 0x01	; 1
 4aa:	70 e0       	ldi	r23, 0x00	; 0
 4ac:	81 e0       	ldi	r24, 0x01	; 1
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4b4:	89 ef       	ldi	r24, 0xF9	; 249
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	01 97       	sbiw	r24, 0x01	; 1
 4ba:	f1 f7       	brne	.-4      	; 0x4b8 <Lcd4_Cmd+0x26>
 4bc:	00 c0       	rjmp	.+0      	; 0x4be <Lcd4_Cmd+0x2c>
 4be:	00 00       	nop
 4c0:	60 e0       	ldi	r22, 0x00	; 0
 4c2:	70 e0       	ldi	r23, 0x00	; 0
 4c4:	81 e0       	ldi	r24, 0x01	; 1
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4cc:	89 ef       	ldi	r24, 0xF9	; 249
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	01 97       	sbiw	r24, 0x01	; 1
 4d2:	f1 f7       	brne	.-4      	; 0x4d0 <Lcd4_Cmd+0x3e>
 4d4:	00 c0       	rjmp	.+0      	; 0x4d6 <Lcd4_Cmd+0x44>
 4d6:	00 00       	nop
 4d8:	cf 91       	pop	r28
 4da:	08 95       	ret

000004dc <Lcd4_Clear>:
 4dc:	80 e0       	ldi	r24, 0x00	; 0
 4de:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 4e2:	81 e0       	ldi	r24, 0x01	; 1
 4e4:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 4e8:	08 95       	ret

000004ea <Lcd4_Set_Cursor>:
 4ea:	cf 93       	push	r28
 4ec:	81 30       	cpi	r24, 0x01	; 1
 4ee:	61 f4       	brne	.+24     	; 0x508 <Lcd4_Set_Cursor+0x1e>
 4f0:	80 e8       	ldi	r24, 0x80	; 128
 4f2:	86 0f       	add	r24, r22
 4f4:	c6 2f       	mov	r28, r22
 4f6:	cf 70       	andi	r28, 0x0F	; 15
 4f8:	82 95       	swap	r24
 4fa:	8f 70       	andi	r24, 0x0F	; 15
 4fc:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 500:	8c 2f       	mov	r24, r28
 502:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 506:	0d c0       	rjmp	.+26     	; 0x522 <Lcd4_Set_Cursor+0x38>
 508:	82 30       	cpi	r24, 0x02	; 2
 50a:	59 f4       	brne	.+22     	; 0x522 <Lcd4_Set_Cursor+0x38>
 50c:	80 ec       	ldi	r24, 0xC0	; 192
 50e:	86 0f       	add	r24, r22
 510:	c6 2f       	mov	r28, r22
 512:	cf 70       	andi	r28, 0x0F	; 15
 514:	82 95       	swap	r24
 516:	8f 70       	andi	r24, 0x0F	; 15
 518:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 51c:	8c 2f       	mov	r24, r28
 51e:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 522:	cf 91       	pop	r28
 524:	08 95       	ret

00000526 <Lcd4_Init>:
 526:	80 e0       	ldi	r24, 0x00	; 0
 528:	0e 94 09 02 	call	0x412	; 0x412 <Lcd4_Port>
 52c:	87 e8       	ldi	r24, 0x87	; 135
 52e:	93 e1       	ldi	r25, 0x13	; 19
 530:	01 97       	sbiw	r24, 0x01	; 1
 532:	f1 f7       	brne	.-4      	; 0x530 <Lcd4_Init+0xa>
 534:	00 c0       	rjmp	.+0      	; 0x536 <Lcd4_Init+0x10>
 536:	00 00       	nop
 538:	83 e0       	ldi	r24, 0x03	; 3
 53a:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 53e:	81 ee       	ldi	r24, 0xE1	; 225
 540:	94 e0       	ldi	r25, 0x04	; 4
 542:	01 97       	sbiw	r24, 0x01	; 1
 544:	f1 f7       	brne	.-4      	; 0x542 <Lcd4_Init+0x1c>
 546:	00 c0       	rjmp	.+0      	; 0x548 <Lcd4_Init+0x22>
 548:	00 00       	nop
 54a:	83 e0       	ldi	r24, 0x03	; 3
 54c:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 550:	8d eb       	ldi	r24, 0xBD	; 189
 552:	9a e0       	ldi	r25, 0x0A	; 10
 554:	01 97       	sbiw	r24, 0x01	; 1
 556:	f1 f7       	brne	.-4      	; 0x554 <Lcd4_Init+0x2e>
 558:	00 c0       	rjmp	.+0      	; 0x55a <Lcd4_Init+0x34>
 55a:	00 00       	nop
 55c:	83 e0       	ldi	r24, 0x03	; 3
 55e:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 562:	82 e0       	ldi	r24, 0x02	; 2
 564:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 568:	82 e0       	ldi	r24, 0x02	; 2
 56a:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 56e:	88 e0       	ldi	r24, 0x08	; 8
 570:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 574:	80 e0       	ldi	r24, 0x00	; 0
 576:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 57a:	8c e0       	ldi	r24, 0x0C	; 12
 57c:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 580:	80 e0       	ldi	r24, 0x00	; 0
 582:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 586:	86 e0       	ldi	r24, 0x06	; 6
 588:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Cmd>
 58c:	08 95       	ret

0000058e <Lcd4_Write_Char>:
 58e:	cf 93       	push	r28
 590:	df 93       	push	r29
 592:	d8 2f       	mov	r29, r24
 594:	df 70       	andi	r29, 0x0F	; 15
 596:	c8 2f       	mov	r28, r24
 598:	c0 7f       	andi	r28, 0xF0	; 240
 59a:	61 e0       	ldi	r22, 0x01	; 1
 59c:	70 e0       	ldi	r23, 0x00	; 0
 59e:	80 e0       	ldi	r24, 0x00	; 0
 5a0:	90 e0       	ldi	r25, 0x00	; 0
 5a2:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 5a6:	8c 2f       	mov	r24, r28
 5a8:	82 95       	swap	r24
 5aa:	8f 70       	andi	r24, 0x0F	; 15
 5ac:	0e 94 09 02 	call	0x412	; 0x412 <Lcd4_Port>
 5b0:	61 e0       	ldi	r22, 0x01	; 1
 5b2:	70 e0       	ldi	r23, 0x00	; 0
 5b4:	81 e0       	ldi	r24, 0x01	; 1
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 5bc:	89 ef       	ldi	r24, 0xF9	; 249
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	01 97       	sbiw	r24, 0x01	; 1
 5c2:	f1 f7       	brne	.-4      	; 0x5c0 <Lcd4_Write_Char+0x32>
 5c4:	00 c0       	rjmp	.+0      	; 0x5c6 <Lcd4_Write_Char+0x38>
 5c6:	00 00       	nop
 5c8:	60 e0       	ldi	r22, 0x00	; 0
 5ca:	70 e0       	ldi	r23, 0x00	; 0
 5cc:	81 e0       	ldi	r24, 0x01	; 1
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 5d4:	89 ef       	ldi	r24, 0xF9	; 249
 5d6:	90 e0       	ldi	r25, 0x00	; 0
 5d8:	01 97       	sbiw	r24, 0x01	; 1
 5da:	f1 f7       	brne	.-4      	; 0x5d8 <Lcd4_Write_Char+0x4a>
 5dc:	00 c0       	rjmp	.+0      	; 0x5de <Lcd4_Write_Char+0x50>
 5de:	00 00       	nop
 5e0:	8d 2f       	mov	r24, r29
 5e2:	0e 94 09 02 	call	0x412	; 0x412 <Lcd4_Port>
 5e6:	61 e0       	ldi	r22, 0x01	; 1
 5e8:	70 e0       	ldi	r23, 0x00	; 0
 5ea:	81 e0       	ldi	r24, 0x01	; 1
 5ec:	90 e0       	ldi	r25, 0x00	; 0
 5ee:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 5f2:	89 ef       	ldi	r24, 0xF9	; 249
 5f4:	90 e0       	ldi	r25, 0x00	; 0
 5f6:	01 97       	sbiw	r24, 0x01	; 1
 5f8:	f1 f7       	brne	.-4      	; 0x5f6 <Lcd4_Write_Char+0x68>
 5fa:	00 c0       	rjmp	.+0      	; 0x5fc <Lcd4_Write_Char+0x6e>
 5fc:	00 00       	nop
 5fe:	60 e0       	ldi	r22, 0x00	; 0
 600:	70 e0       	ldi	r23, 0x00	; 0
 602:	81 e0       	ldi	r24, 0x01	; 1
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 60a:	89 ef       	ldi	r24, 0xF9	; 249
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	01 97       	sbiw	r24, 0x01	; 1
 610:	f1 f7       	brne	.-4      	; 0x60e <Lcd4_Write_Char+0x80>
 612:	00 c0       	rjmp	.+0      	; 0x614 <Lcd4_Write_Char+0x86>
 614:	00 00       	nop
 616:	df 91       	pop	r29
 618:	cf 91       	pop	r28
 61a:	08 95       	ret

0000061c <Lcd4_Write_String>:
 61c:	0f 93       	push	r16
 61e:	1f 93       	push	r17
 620:	cf 93       	push	r28
 622:	df 93       	push	r29
 624:	8c 01       	movw	r16, r24
 626:	c0 e0       	ldi	r28, 0x00	; 0
 628:	d0 e0       	ldi	r29, 0x00	; 0
 62a:	03 c0       	rjmp	.+6      	; 0x632 <Lcd4_Write_String+0x16>
 62c:	0e 94 c7 02 	call	0x58e	; 0x58e <Lcd4_Write_Char>
 630:	21 96       	adiw	r28, 0x01	; 1
 632:	f8 01       	movw	r30, r16
 634:	ec 0f       	add	r30, r28
 636:	fd 1f       	adc	r31, r29
 638:	80 81       	ld	r24, Z
 63a:	81 11       	cpse	r24, r1
 63c:	f7 cf       	rjmp	.-18     	; 0x62c <Lcd4_Write_String+0x10>
 63e:	df 91       	pop	r29
 640:	cf 91       	pop	r28
 642:	1f 91       	pop	r17
 644:	0f 91       	pop	r16
 646:	08 95       	ret

00000648 <UART_init>:
uint16_t voteflag = 0;

void UART_init()
{	
	
	UCSRB = 0b00011000;// Turn on the reception and Transmission
 648:	88 e1       	ldi	r24, 0x18	; 24
 64a:	8a b9       	out	0x0a, r24	; 10
	UCSRC = 0b10000110;
 64c:	86 e8       	ldi	r24, 0x86	; 134
 64e:	80 bd       	out	0x20, r24	; 32
	//UCSRC |= (1 << URSEL) | (1 << UCSZ0) | (1 << UCSZ1);// Use 8-bit character sizes
	UCSRA = 0b00000000;
 650:	1b b8       	out	0x0b, r1	; 11
	UCSRA |= (1 << RXC) | (1<<TXC);
 652:	8b b1       	in	r24, 0x0b	; 11
 654:	80 6c       	ori	r24, 0xC0	; 192
 656:	8b b9       	out	0x0b, r24	; 11
	// | (0<<TXC)|(0<<UDRE)|(0<<FE)|(0<<DOR)|(0<UPE)|(0<<U2X)|(0<<MPCM)

	//UBRRL = BAUD_PRESCALE;		// Load lower 8-bits of the baud rate
	//UBRRH = (BAUD_PRESCALE >> 8);	// Load upper 8-bits
	UBRRL = 0x19;
 658:	89 e1       	ldi	r24, 0x19	; 25
 65a:	89 b9       	out	0x09, r24	; 9
	UBRRH = 0x00;
 65c:	10 bc       	out	0x20, r1	; 32
 65e:	08 95       	ret

00000660 <UART_RxChar>:
}

unsigned char UART_RxChar()
{
	while ((UCSRA & (1 << RXC)) == 0x00);// Wait till data is received
 660:	5f 9b       	sbis	0x0b, 7	; 11
 662:	fe cf       	rjmp	.-4      	; 0x660 <UART_RxChar>
	return UDR;		// Return the byte
 664:	8c b1       	in	r24, 0x0c	; 12
}
 666:	08 95       	ret

00000668 <UART_TxChar>:

void UART_TxChar(unsigned char data){
	while((UCSRA & (1 << UDRE)) == 0x00);
 668:	5d 9b       	sbis	0x0b, 5	; 11
 66a:	fe cf       	rjmp	.-4      	; 0x668 <UART_TxChar>
	UDR = data;
 66c:	8c b9       	out	0x0c, r24	; 12
 66e:	08 95       	ret

00000670 <main>:
	
}
int main(void)
{	
 670:	cf 93       	push	r28
 672:	df 93       	push	r29
 674:	cd b7       	in	r28, 0x3d	; 61
 676:	de b7       	in	r29, 0x3e	; 62
 678:	2e 97       	sbiw	r28, 0x0e	; 14
 67a:	0f b6       	in	r0, 0x3f	; 63
 67c:	f8 94       	cli
 67e:	de bf       	out	0x3e, r29	; 62
 680:	0f be       	out	0x3f, r0	; 63
 682:	cd bf       	out	0x3d, r28	; 61
   DDRD = 0b11111110;
 684:	8e ef       	ldi	r24, 0xFE	; 254
 686:	81 bb       	out	0x11, r24	; 17
   DDRA = 0xFF;
 688:	8f ef       	ldi	r24, 0xFF	; 255
 68a:	8a bb       	out	0x1a, r24	; 26
   
   Lcd4_Init();
 68c:	0e 94 93 02 	call	0x526	; 0x526 <Lcd4_Init>
   UART_init();
 690:	0e 94 24 03 	call	0x648	; 0x648 <UART_init>
  
    while (1) 
    {	
		unsigned char id[10];
	    int count = 1;
	    Lcd4_Clear();
 694:	0e 94 6e 02 	call	0x4dc	; 0x4dc <Lcd4_Clear>
	    Lcd4_Write_String("Waiting for  ");
 698:	8e ea       	ldi	r24, 0xAE	; 174
 69a:	90 e0       	ldi	r25, 0x00	; 0
 69c:	0e 94 0e 03 	call	0x61c	; 0x61c <Lcd4_Write_String>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 6a0:	2f e9       	ldi	r18, 0x9F	; 159
 6a2:	36 e8       	ldi	r19, 0x86	; 134
 6a4:	81 e0       	ldi	r24, 0x01	; 1
 6a6:	21 50       	subi	r18, 0x01	; 1
 6a8:	30 40       	sbci	r19, 0x00	; 0
 6aa:	80 40       	sbci	r24, 0x00	; 0
 6ac:	e1 f7       	brne	.-8      	; 0x6a6 <main+0x36>
 6ae:	00 c0       	rjmp	.+0      	; 0x6b0 <main+0x40>
 6b0:	00 00       	nop
	    _delay_ms(500);
	    Lcd4_Set_Cursor(2, 1);
 6b2:	61 e0       	ldi	r22, 0x01	; 1
 6b4:	82 e0       	ldi	r24, 0x02	; 2
 6b6:	0e 94 75 02 	call	0x4ea	; 0x4ea <Lcd4_Set_Cursor>
	    Lcd4_Write_String("RFID Tag");
 6ba:	8c eb       	ldi	r24, 0xBC	; 188
 6bc:	90 e0       	ldi	r25, 0x00	; 0
 6be:	0e 94 0e 03 	call	0x61c	; 0x61c <Lcd4_Write_String>
 6c2:	9f e9       	ldi	r25, 0x9F	; 159
 6c4:	26 e8       	ldi	r18, 0x86	; 134
 6c6:	31 e0       	ldi	r19, 0x01	; 1
 6c8:	91 50       	subi	r25, 0x01	; 1
 6ca:	20 40       	sbci	r18, 0x00	; 0
 6cc:	30 40       	sbci	r19, 0x00	; 0
 6ce:	e1 f7       	brne	.-8      	; 0x6c8 <main+0x58>
 6d0:	00 c0       	rjmp	.+0      	; 0x6d2 <main+0x62>
 6d2:	00 00       	nop
	    _delay_ms(500);
	    Lcd4_Clear();
 6d4:	0e 94 6e 02 	call	0x4dc	; 0x4dc <Lcd4_Clear>
	    
		Lcd4_Write_String("Reading Tag...");
 6d8:	85 ec       	ldi	r24, 0xC5	; 197
 6da:	90 e0       	ldi	r25, 0x00	; 0
 6dc:	0e 94 0e 03 	call	0x61c	; 0x61c <Lcd4_Write_String>
	    Lcd4_Set_Cursor(2, 0);
 6e0:	60 e0       	ldi	r22, 0x00	; 0
 6e2:	82 e0       	ldi	r24, 0x02	; 2
 6e4:	0e 94 75 02 	call	0x4ea	; 0x4ea <Lcd4_Set_Cursor>
	    
	    int match = 0;
 6e8:	e1 2c       	mov	r14, r1
 6ea:	f1 2c       	mov	r15, r1
   UART_init();
  
    while (1) 
    {	
		unsigned char id[10];
	    int count = 1;
 6ec:	01 e0       	ldi	r16, 0x01	; 1
 6ee:	10 e0       	ldi	r17, 0x00	; 0
	    Lcd4_Set_Cursor(2, 0);
	    
	    int match = 0;
		
		while(1){
			id[count-1] = UART_RxChar();
 6f0:	0e 94 30 03 	call	0x660	; 0x660 <UART_RxChar>
 6f4:	f8 01       	movw	r30, r16
 6f6:	31 97       	sbiw	r30, 0x01	; 1
 6f8:	21 e0       	ldi	r18, 0x01	; 1
 6fa:	30 e0       	ldi	r19, 0x00	; 0
 6fc:	2c 0f       	add	r18, r28
 6fe:	3d 1f       	adc	r19, r29
 700:	e2 0f       	add	r30, r18
 702:	f3 1f       	adc	r31, r19
 704:	80 83       	st	Z, r24
			Lcd4_Write_Char(id[count-1]);
 706:	0e 94 c7 02 	call	0x58e	; 0x58e <Lcd4_Write_Char>
			if(count < id_len){
 70a:	60 91 aa 00 	lds	r22, 0x00AA	; 0x8000aa <id_len>
 70e:	70 91 ab 00 	lds	r23, 0x00AB	; 0x8000ab <id_len+0x1>
 712:	06 17       	cp	r16, r22
 714:	17 07       	cpc	r17, r23
 716:	1c f4       	brge	.+6      	; 0x71e <main+0xae>
				count++;
 718:	0f 5f       	subi	r16, 0xFF	; 255
 71a:	1f 4f       	sbci	r17, 0xFF	; 255
				continue;
 71c:	e9 cf       	rjmp	.-46     	; 0x6f0 <main+0x80>
			}
			else if(count == id_len){
 71e:	06 17       	cp	r16, r22
 720:	17 07       	cpc	r17, r23
 722:	09 f0       	breq	.+2      	; 0x726 <main+0xb6>
 724:	54 c0       	rjmp	.+168    	; 0x7ce <main+0x15e>
 726:	4a c0       	rjmp	.+148    	; 0x7bc <main+0x14c>
				int j;
				for(int i = 0; i<total_id; i++){
					for(j = 0; j<id_len; j++){
						if(valid_id[i][j] != id[j]){
 728:	ca 01       	movw	r24, r20
 72a:	88 0f       	add	r24, r24
 72c:	99 1f       	adc	r25, r25
 72e:	88 0f       	add	r24, r24
 730:	99 1f       	adc	r25, r25
 732:	88 0f       	add	r24, r24
 734:	99 1f       	adc	r25, r25
 736:	fa 01       	movw	r30, r20
 738:	ee 0f       	add	r30, r30
 73a:	ff 1f       	adc	r31, r31
 73c:	e8 0f       	add	r30, r24
 73e:	f9 1f       	adc	r31, r25
 740:	ec 59       	subi	r30, 0x9C	; 156
 742:	ff 4f       	sbci	r31, 0xFF	; 255
 744:	e2 0f       	add	r30, r18
 746:	f3 1f       	adc	r31, r19
 748:	90 81       	ld	r25, Z
 74a:	e1 e0       	ldi	r30, 0x01	; 1
 74c:	f0 e0       	ldi	r31, 0x00	; 0
 74e:	ec 0f       	add	r30, r28
 750:	fd 1f       	adc	r31, r29
 752:	e2 0f       	add	r30, r18
 754:	f3 1f       	adc	r31, r19
 756:	80 81       	ld	r24, Z
 758:	98 13       	cpse	r25, r24
 75a:	08 c0       	rjmp	.+16     	; 0x76c <main+0xfc>
				continue;
			}
			else if(count == id_len){
				int j;
				for(int i = 0; i<total_id; i++){
					for(j = 0; j<id_len; j++){
 75c:	2f 5f       	subi	r18, 0xFF	; 255
 75e:	3f 4f       	sbci	r19, 0xFF	; 255
 760:	02 c0       	rjmp	.+4      	; 0x766 <main+0xf6>
 762:	20 e0       	ldi	r18, 0x00	; 0
 764:	30 e0       	ldi	r19, 0x00	; 0
 766:	26 17       	cp	r18, r22
 768:	37 07       	cpc	r19, r23
 76a:	f4 f2       	brlt	.-68     	; 0x728 <main+0xb8>
						if(valid_id[i][j] != id[j]){
							break;
						}
					}
					if(j == id_len){
 76c:	26 17       	cp	r18, r22
 76e:	37 07       	cpc	r19, r23
 770:	11 f5       	brne	.+68     	; 0x7b6 <main+0x146>
						if(!voted[i]){
 772:	fa 01       	movw	r30, r20
 774:	ee 0f       	add	r30, r30
 776:	ff 1f       	adc	r31, r31
 778:	ee 5c       	subi	r30, 0xCE	; 206
 77a:	fe 4f       	sbci	r31, 0xFE	; 254
 77c:	80 81       	ld	r24, Z
 77e:	91 81       	ldd	r25, Z+1	; 0x01
 780:	00 97       	sbiw	r24, 0x00	; 0
 782:	69 f4       	brne	.+26     	; 0x79e <main+0x12e>
							voted[i] = 1;
 784:	44 0f       	add	r20, r20
 786:	55 1f       	adc	r21, r21
 788:	fa 01       	movw	r30, r20
 78a:	ee 5c       	subi	r30, 0xCE	; 206
 78c:	fe 4f       	sbci	r31, 0xFE	; 254
 78e:	81 e0       	ldi	r24, 0x01	; 1
 790:	90 e0       	ldi	r25, 0x00	; 0
 792:	91 83       	std	Z+1, r25	; 0x01
 794:	80 83       	st	Z, r24
							match = 1;
 796:	ee 24       	eor	r14, r14
 798:	e3 94       	inc	r14
 79a:	f1 2c       	mov	r15, r1
							break;	
 79c:	18 c0       	rjmp	.+48     	; 0x7ce <main+0x15e>
						}
						else if(voted[i]){
 79e:	89 2b       	or	r24, r25
 7a0:	51 f0       	breq	.+20     	; 0x7b6 <main+0x146>
							match = 1;
							voteflag = 1;
 7a2:	81 e0       	ldi	r24, 0x01	; 1
 7a4:	90 e0       	ldi	r25, 0x00	; 0
 7a6:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <__data_end+0x1>
 7aa:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <__data_end>
							voted[i] = 1;
							match = 1;
							break;	
						}
						else if(voted[i]){
							match = 1;
 7ae:	ee 24       	eor	r14, r14
 7b0:	e3 94       	inc	r14
 7b2:	f1 2c       	mov	r15, r1
							voteflag = 1;
							break;
 7b4:	0c c0       	rjmp	.+24     	; 0x7ce <main+0x15e>
				count++;
				continue;
			}
			else if(count == id_len){
				int j;
				for(int i = 0; i<total_id; i++){
 7b6:	4f 5f       	subi	r20, 0xFF	; 255
 7b8:	5f 4f       	sbci	r21, 0xFF	; 255
 7ba:	02 c0       	rjmp	.+4      	; 0x7c0 <main+0x150>
 7bc:	40 e0       	ldi	r20, 0x00	; 0
 7be:	50 e0       	ldi	r21, 0x00	; 0
 7c0:	80 91 ac 00 	lds	r24, 0x00AC	; 0x8000ac <total_id>
 7c4:	90 91 ad 00 	lds	r25, 0x00AD	; 0x8000ad <total_id+0x1>
 7c8:	48 17       	cp	r20, r24
 7ca:	59 07       	cpc	r21, r25
 7cc:	54 f2       	brlt	.-108    	; 0x762 <main+0xf2>
							break;
						}
					}
				}
			}
			if(match == 0){
 7ce:	e1 14       	cp	r14, r1
 7d0:	f1 04       	cpc	r15, r1
 7d2:	79 f4       	brne	.+30     	; 0x7f2 <main+0x182>
				Lcd4_Clear();
 7d4:	0e 94 6e 02 	call	0x4dc	; 0x4dc <Lcd4_Clear>
				Lcd4_Write_String("ID match: ");
 7d8:	84 ed       	ldi	r24, 0xD4	; 212
 7da:	90 e0       	ldi	r25, 0x00	; 0
 7dc:	0e 94 0e 03 	call	0x61c	; 0x61c <Lcd4_Write_String>
				Lcd4_Set_Cursor(2,0);
 7e0:	60 e0       	ldi	r22, 0x00	; 0
 7e2:	82 e0       	ldi	r24, 0x02	; 2
 7e4:	0e 94 75 02 	call	0x4ea	; 0x4ea <Lcd4_Set_Cursor>
				Lcd4_Write_String("Not found. Reset");
 7e8:	8f ed       	ldi	r24, 0xDF	; 223
 7ea:	90 e0       	ldi	r25, 0x00	; 0
 7ec:	0e 94 0e 03 	call	0x61c	; 0x61c <Lcd4_Write_String>
				break;
 7f0:	51 cf       	rjmp	.-350    	; 0x694 <main+0x24>
			}
			else if(match == 1){
 7f2:	31 e0       	ldi	r19, 0x01	; 1
 7f4:	e3 16       	cp	r14, r19
 7f6:	f1 04       	cpc	r15, r1
 7f8:	09 f0       	breq	.+2      	; 0x7fc <main+0x18c>
 7fa:	7a cf       	rjmp	.-268    	; 0x6f0 <main+0x80>
				Lcd4_Clear();
 7fc:	0e 94 6e 02 	call	0x4dc	; 0x4dc <Lcd4_Clear>
				if(voteflag){
 800:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__data_end>
 804:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <__data_end+0x1>
 808:	89 2b       	or	r24, r25
 80a:	29 f1       	breq	.+74     	; 0x856 <__DATA_REGION_LENGTH__+0x56>
					Lcd4_Write_String("This Person Has");
 80c:	80 ef       	ldi	r24, 0xF0	; 240
 80e:	90 e0       	ldi	r25, 0x00	; 0
 810:	0e 94 0e 03 	call	0x61c	; 0x61c <Lcd4_Write_String>
 814:	8f e3       	ldi	r24, 0x3F	; 63
 816:	9d e0       	ldi	r25, 0x0D	; 13
 818:	23 e0       	ldi	r18, 0x03	; 3
 81a:	81 50       	subi	r24, 0x01	; 1
 81c:	90 40       	sbci	r25, 0x00	; 0
 81e:	20 40       	sbci	r18, 0x00	; 0
 820:	e1 f7       	brne	.-8      	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 822:	00 c0       	rjmp	.+0      	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 824:	00 00       	nop
					_delay_ms(1000);
					Lcd4_Set_Cursor(2, 0);
 826:	60 e0       	ldi	r22, 0x00	; 0
 828:	82 e0       	ldi	r24, 0x02	; 2
 82a:	0e 94 75 02 	call	0x4ea	; 0x4ea <Lcd4_Set_Cursor>
					Lcd4_Write_String("Already Voted");
 82e:	80 e0       	ldi	r24, 0x00	; 0
 830:	91 e0       	ldi	r25, 0x01	; 1
 832:	0e 94 0e 03 	call	0x61c	; 0x61c <Lcd4_Write_String>
 836:	3f e1       	ldi	r19, 0x1F	; 31
 838:	81 ea       	ldi	r24, 0xA1	; 161
 83a:	97 e0       	ldi	r25, 0x07	; 7
 83c:	31 50       	subi	r19, 0x01	; 1
 83e:	80 40       	sbci	r24, 0x00	; 0
 840:	90 40       	sbci	r25, 0x00	; 0
 842:	e1 f7       	brne	.-8      	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 844:	00 c0       	rjmp	.+0      	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 846:	00 00       	nop
					_delay_ms(2500);
					Lcd4_Clear();
 848:	0e 94 6e 02 	call	0x4dc	; 0x4dc <Lcd4_Clear>
					voteflag = 0;
 84c:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <__data_end+0x1>
 850:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <__data_end>
					break;
 854:	1f cf       	rjmp	.-450    	; 0x694 <main+0x24>
				}
				Lcd4_Write_String("ID match found!");
 856:	8e e0       	ldi	r24, 0x0E	; 14
 858:	91 e0       	ldi	r25, 0x01	; 1
 85a:	0e 94 0e 03 	call	0x61c	; 0x61c <Lcd4_Write_String>
 85e:	2f e1       	ldi	r18, 0x1F	; 31
 860:	31 ea       	ldi	r19, 0xA1	; 161
 862:	87 e0       	ldi	r24, 0x07	; 7
 864:	21 50       	subi	r18, 0x01	; 1
 866:	30 40       	sbci	r19, 0x00	; 0
 868:	80 40       	sbci	r24, 0x00	; 0
 86a:	e1 f7       	brne	.-8      	; 0x864 <__stack+0x5>
 86c:	00 c0       	rjmp	.+0      	; 0x86e <__stack+0xf>
 86e:	00 00       	nop
				_delay_ms(2500);
				Lcd4_Clear();
 870:	0e 94 6e 02 	call	0x4dc	; 0x4dc <Lcd4_Clear>
				//srand(time(0));
				int lock = rand() % (9999 + 1 - 1000) + 1000;
 874:	0e 94 04 05 	call	0xa08	; 0xa08 <rand>
 878:	68 e2       	ldi	r22, 0x28	; 40
 87a:	73 e2       	ldi	r23, 0x23	; 35
 87c:	0e 94 90 04 	call	0x920	; 0x920 <__divmodhi4>
 880:	88 51       	subi	r24, 0x18	; 24
 882:	9c 4f       	sbci	r25, 0xFC	; 252
				unsigned char locks[4];
				//int div = 99;
				int mod = 0;
 884:	20 e0       	ldi	r18, 0x00	; 0
 886:	30 e0       	ldi	r19, 0x00	; 0
				while(lock != 0){
 888:	10 c0       	rjmp	.+32     	; 0x8aa <__stack+0x4b>
					locks[mod] = (lock % 10) + '0';
 88a:	6a e0       	ldi	r22, 0x0A	; 10
 88c:	70 e0       	ldi	r23, 0x00	; 0
 88e:	0e 94 90 04 	call	0x920	; 0x920 <__divmodhi4>
 892:	eb e0       	ldi	r30, 0x0B	; 11
 894:	f0 e0       	ldi	r31, 0x00	; 0
 896:	ec 0f       	add	r30, r28
 898:	fd 1f       	adc	r31, r29
 89a:	e2 0f       	add	r30, r18
 89c:	f3 1f       	adc	r31, r19
 89e:	80 5d       	subi	r24, 0xD0	; 208
 8a0:	80 83       	st	Z, r24
					lock = lock / 10;
 8a2:	86 2f       	mov	r24, r22
 8a4:	97 2f       	mov	r25, r23
					mod++;
 8a6:	2f 5f       	subi	r18, 0xFF	; 255
 8a8:	3f 4f       	sbci	r19, 0xFF	; 255
				//srand(time(0));
				int lock = rand() % (9999 + 1 - 1000) + 1000;
				unsigned char locks[4];
				//int div = 99;
				int mod = 0;
				while(lock != 0){
 8aa:	00 97       	sbiw	r24, 0x00	; 0
 8ac:	71 f7       	brne	.-36     	; 0x88a <__stack+0x2b>
					locks[mod] = (lock % 10) + '0';
					lock = lock / 10;
					mod++;
					
				}
				Lcd4_Write_String("Your Lock Code: ");
 8ae:	8e e1       	ldi	r24, 0x1E	; 30
 8b0:	91 e0       	ldi	r25, 0x01	; 1
 8b2:	0e 94 0e 03 	call	0x61c	; 0x61c <Lcd4_Write_String>
				Lcd4_Set_Cursor(2, 0);
 8b6:	60 e0       	ldi	r22, 0x00	; 0
 8b8:	82 e0       	ldi	r24, 0x02	; 2
 8ba:	0e 94 75 02 	call	0x4ea	; 0x4ea <Lcd4_Set_Cursor>
				for(int i = 3; i!=-1; i--){
 8be:	03 e0       	ldi	r16, 0x03	; 3
 8c0:	10 e0       	ldi	r17, 0x00	; 0
 8c2:	15 c0       	rjmp	.+42     	; 0x8ee <__stack+0x8f>
					Lcd4_Write_Char(locks[i]);
 8c4:	eb e0       	ldi	r30, 0x0B	; 11
 8c6:	f0 e0       	ldi	r31, 0x00	; 0
 8c8:	ec 0f       	add	r30, r28
 8ca:	fd 1f       	adc	r31, r29
 8cc:	e0 0f       	add	r30, r16
 8ce:	f1 1f       	adc	r31, r17
 8d0:	f0 80       	ld	r15, Z
 8d2:	8f 2d       	mov	r24, r15
 8d4:	0e 94 c7 02 	call	0x58e	; 0x58e <Lcd4_Write_Char>
 8d8:	87 ea       	ldi	r24, 0xA7	; 167
 8da:	91 e6       	ldi	r25, 0x61	; 97
 8dc:	01 97       	sbiw	r24, 0x01	; 1
 8de:	f1 f7       	brne	.-4      	; 0x8dc <__stack+0x7d>
 8e0:	00 c0       	rjmp	.+0      	; 0x8e2 <__stack+0x83>
 8e2:	00 00       	nop
					_delay_ms(100);
					UART_TxChar(locks[i]);
 8e4:	8f 2d       	mov	r24, r15
 8e6:	0e 94 34 03 	call	0x668	; 0x668 <UART_TxChar>
					mod++;
					
				}
				Lcd4_Write_String("Your Lock Code: ");
				Lcd4_Set_Cursor(2, 0);
				for(int i = 3; i!=-1; i--){
 8ea:	01 50       	subi	r16, 0x01	; 1
 8ec:	11 09       	sbc	r17, r1
 8ee:	0f 3f       	cpi	r16, 0xFF	; 255
 8f0:	9f ef       	ldi	r25, 0xFF	; 255
 8f2:	19 07       	cpc	r17, r25
 8f4:	39 f7       	brne	.-50     	; 0x8c4 <__stack+0x65>
 8f6:	2f e3       	ldi	r18, 0x3F	; 63
 8f8:	32 e4       	ldi	r19, 0x42	; 66
 8fa:	8f e0       	ldi	r24, 0x0F	; 15
 8fc:	21 50       	subi	r18, 0x01	; 1
 8fe:	30 40       	sbci	r19, 0x00	; 0
 900:	80 40       	sbci	r24, 0x00	; 0
 902:	e1 f7       	brne	.-8      	; 0x8fc <__stack+0x9d>
 904:	00 c0       	rjmp	.+0      	; 0x906 <__stack+0xa7>
 906:	00 00       	nop
					_delay_ms(100);
					UART_TxChar(locks[i]);
				}
				
				_delay_ms(5000);
				Lcd4_Clear();
 908:	0e 94 6e 02 	call	0x4dc	; 0x4dc <Lcd4_Clear>
 90c:	9f eb       	ldi	r25, 0xBF	; 191
 90e:	27 e2       	ldi	r18, 0x27	; 39
 910:	39 e0       	ldi	r19, 0x09	; 9
 912:	91 50       	subi	r25, 0x01	; 1
 914:	20 40       	sbci	r18, 0x00	; 0
 916:	30 40       	sbci	r19, 0x00	; 0
 918:	e1 f7       	brne	.-8      	; 0x912 <__stack+0xb3>
 91a:	00 c0       	rjmp	.+0      	; 0x91c <__stack+0xbd>
 91c:	00 00       	nop
				
				
			}
		}
		
	}
 91e:	ba ce       	rjmp	.-652    	; 0x694 <main+0x24>

00000920 <__divmodhi4>:
 920:	97 fb       	bst	r25, 7
 922:	07 2e       	mov	r0, r23
 924:	16 f4       	brtc	.+4      	; 0x92a <__divmodhi4+0xa>
 926:	00 94       	com	r0
 928:	07 d0       	rcall	.+14     	; 0x938 <__divmodhi4_neg1>
 92a:	77 fd       	sbrc	r23, 7
 92c:	09 d0       	rcall	.+18     	; 0x940 <__divmodhi4_neg2>
 92e:	0e 94 a4 04 	call	0x948	; 0x948 <__udivmodhi4>
 932:	07 fc       	sbrc	r0, 7
 934:	05 d0       	rcall	.+10     	; 0x940 <__divmodhi4_neg2>
 936:	3e f4       	brtc	.+14     	; 0x946 <__divmodhi4_exit>

00000938 <__divmodhi4_neg1>:
 938:	90 95       	com	r25
 93a:	81 95       	neg	r24
 93c:	9f 4f       	sbci	r25, 0xFF	; 255
 93e:	08 95       	ret

00000940 <__divmodhi4_neg2>:
 940:	70 95       	com	r23
 942:	61 95       	neg	r22
 944:	7f 4f       	sbci	r23, 0xFF	; 255

00000946 <__divmodhi4_exit>:
 946:	08 95       	ret

00000948 <__udivmodhi4>:
 948:	aa 1b       	sub	r26, r26
 94a:	bb 1b       	sub	r27, r27
 94c:	51 e1       	ldi	r21, 0x11	; 17
 94e:	07 c0       	rjmp	.+14     	; 0x95e <__udivmodhi4_ep>

00000950 <__udivmodhi4_loop>:
 950:	aa 1f       	adc	r26, r26
 952:	bb 1f       	adc	r27, r27
 954:	a6 17       	cp	r26, r22
 956:	b7 07       	cpc	r27, r23
 958:	10 f0       	brcs	.+4      	; 0x95e <__udivmodhi4_ep>
 95a:	a6 1b       	sub	r26, r22
 95c:	b7 0b       	sbc	r27, r23

0000095e <__udivmodhi4_ep>:
 95e:	88 1f       	adc	r24, r24
 960:	99 1f       	adc	r25, r25
 962:	5a 95       	dec	r21
 964:	a9 f7       	brne	.-22     	; 0x950 <__udivmodhi4_loop>
 966:	80 95       	com	r24
 968:	90 95       	com	r25
 96a:	bc 01       	movw	r22, r24
 96c:	cd 01       	movw	r24, r26
 96e:	08 95       	ret

00000970 <do_rand>:
 970:	8f 92       	push	r8
 972:	9f 92       	push	r9
 974:	af 92       	push	r10
 976:	bf 92       	push	r11
 978:	cf 92       	push	r12
 97a:	df 92       	push	r13
 97c:	ef 92       	push	r14
 97e:	ff 92       	push	r15
 980:	cf 93       	push	r28
 982:	df 93       	push	r29
 984:	ec 01       	movw	r28, r24
 986:	68 81       	ld	r22, Y
 988:	79 81       	ldd	r23, Y+1	; 0x01
 98a:	8a 81       	ldd	r24, Y+2	; 0x02
 98c:	9b 81       	ldd	r25, Y+3	; 0x03
 98e:	61 15       	cp	r22, r1
 990:	71 05       	cpc	r23, r1
 992:	81 05       	cpc	r24, r1
 994:	91 05       	cpc	r25, r1
 996:	21 f4       	brne	.+8      	; 0x9a0 <do_rand+0x30>
 998:	64 e2       	ldi	r22, 0x24	; 36
 99a:	79 ed       	ldi	r23, 0xD9	; 217
 99c:	8b e5       	ldi	r24, 0x5B	; 91
 99e:	97 e0       	ldi	r25, 0x07	; 7
 9a0:	2d e1       	ldi	r18, 0x1D	; 29
 9a2:	33 ef       	ldi	r19, 0xF3	; 243
 9a4:	41 e0       	ldi	r20, 0x01	; 1
 9a6:	50 e0       	ldi	r21, 0x00	; 0
 9a8:	0e 94 14 05 	call	0xa28	; 0xa28 <__divmodsi4>
 9ac:	49 01       	movw	r8, r18
 9ae:	5a 01       	movw	r10, r20
 9b0:	9b 01       	movw	r18, r22
 9b2:	ac 01       	movw	r20, r24
 9b4:	a7 ea       	ldi	r26, 0xA7	; 167
 9b6:	b1 e4       	ldi	r27, 0x41	; 65
 9b8:	0e 94 33 05 	call	0xa66	; 0xa66 <__muluhisi3>
 9bc:	6b 01       	movw	r12, r22
 9be:	7c 01       	movw	r14, r24
 9c0:	ac ee       	ldi	r26, 0xEC	; 236
 9c2:	b4 ef       	ldi	r27, 0xF4	; 244
 9c4:	a5 01       	movw	r20, r10
 9c6:	94 01       	movw	r18, r8
 9c8:	0e 94 41 05 	call	0xa82	; 0xa82 <__mulohisi3>
 9cc:	dc 01       	movw	r26, r24
 9ce:	cb 01       	movw	r24, r22
 9d0:	8c 0d       	add	r24, r12
 9d2:	9d 1d       	adc	r25, r13
 9d4:	ae 1d       	adc	r26, r14
 9d6:	bf 1d       	adc	r27, r15
 9d8:	b7 ff       	sbrs	r27, 7
 9da:	03 c0       	rjmp	.+6      	; 0x9e2 <do_rand+0x72>
 9dc:	01 97       	sbiw	r24, 0x01	; 1
 9de:	a1 09       	sbc	r26, r1
 9e0:	b0 48       	sbci	r27, 0x80	; 128
 9e2:	88 83       	st	Y, r24
 9e4:	99 83       	std	Y+1, r25	; 0x01
 9e6:	aa 83       	std	Y+2, r26	; 0x02
 9e8:	bb 83       	std	Y+3, r27	; 0x03
 9ea:	9f 77       	andi	r25, 0x7F	; 127
 9ec:	df 91       	pop	r29
 9ee:	cf 91       	pop	r28
 9f0:	ff 90       	pop	r15
 9f2:	ef 90       	pop	r14
 9f4:	df 90       	pop	r13
 9f6:	cf 90       	pop	r12
 9f8:	bf 90       	pop	r11
 9fa:	af 90       	pop	r10
 9fc:	9f 90       	pop	r9
 9fe:	8f 90       	pop	r8
 a00:	08 95       	ret

00000a02 <rand_r>:
 a02:	0e 94 b8 04 	call	0x970	; 0x970 <do_rand>
 a06:	08 95       	ret

00000a08 <rand>:
 a08:	80 e6       	ldi	r24, 0x60	; 96
 a0a:	90 e0       	ldi	r25, 0x00	; 0
 a0c:	0e 94 b8 04 	call	0x970	; 0x970 <do_rand>
 a10:	08 95       	ret

00000a12 <srand>:
 a12:	a0 e0       	ldi	r26, 0x00	; 0
 a14:	b0 e0       	ldi	r27, 0x00	; 0
 a16:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 a1a:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 a1e:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 a22:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 a26:	08 95       	ret

00000a28 <__divmodsi4>:
 a28:	05 2e       	mov	r0, r21
 a2a:	97 fb       	bst	r25, 7
 a2c:	1e f4       	brtc	.+6      	; 0xa34 <__divmodsi4+0xc>
 a2e:	00 94       	com	r0
 a30:	0e 94 2b 05 	call	0xa56	; 0xa56 <__negsi2>
 a34:	57 fd       	sbrc	r21, 7
 a36:	07 d0       	rcall	.+14     	; 0xa46 <__divmodsi4_neg2>
 a38:	0e 94 46 05 	call	0xa8c	; 0xa8c <__udivmodsi4>
 a3c:	07 fc       	sbrc	r0, 7
 a3e:	03 d0       	rcall	.+6      	; 0xa46 <__divmodsi4_neg2>
 a40:	4e f4       	brtc	.+18     	; 0xa54 <__divmodsi4_exit>
 a42:	0c 94 2b 05 	jmp	0xa56	; 0xa56 <__negsi2>

00000a46 <__divmodsi4_neg2>:
 a46:	50 95       	com	r21
 a48:	40 95       	com	r20
 a4a:	30 95       	com	r19
 a4c:	21 95       	neg	r18
 a4e:	3f 4f       	sbci	r19, 0xFF	; 255
 a50:	4f 4f       	sbci	r20, 0xFF	; 255
 a52:	5f 4f       	sbci	r21, 0xFF	; 255

00000a54 <__divmodsi4_exit>:
 a54:	08 95       	ret

00000a56 <__negsi2>:
 a56:	90 95       	com	r25
 a58:	80 95       	com	r24
 a5a:	70 95       	com	r23
 a5c:	61 95       	neg	r22
 a5e:	7f 4f       	sbci	r23, 0xFF	; 255
 a60:	8f 4f       	sbci	r24, 0xFF	; 255
 a62:	9f 4f       	sbci	r25, 0xFF	; 255
 a64:	08 95       	ret

00000a66 <__muluhisi3>:
 a66:	0e 94 68 05 	call	0xad0	; 0xad0 <__umulhisi3>
 a6a:	a5 9f       	mul	r26, r21
 a6c:	90 0d       	add	r25, r0
 a6e:	b4 9f       	mul	r27, r20
 a70:	90 0d       	add	r25, r0
 a72:	a4 9f       	mul	r26, r20
 a74:	80 0d       	add	r24, r0
 a76:	91 1d       	adc	r25, r1
 a78:	11 24       	eor	r1, r1
 a7a:	08 95       	ret

00000a7c <__mulshisi3>:
 a7c:	b7 ff       	sbrs	r27, 7
 a7e:	0c 94 33 05 	jmp	0xa66	; 0xa66 <__muluhisi3>

00000a82 <__mulohisi3>:
 a82:	0e 94 33 05 	call	0xa66	; 0xa66 <__muluhisi3>
 a86:	82 1b       	sub	r24, r18
 a88:	93 0b       	sbc	r25, r19
 a8a:	08 95       	ret

00000a8c <__udivmodsi4>:
 a8c:	a1 e2       	ldi	r26, 0x21	; 33
 a8e:	1a 2e       	mov	r1, r26
 a90:	aa 1b       	sub	r26, r26
 a92:	bb 1b       	sub	r27, r27
 a94:	fd 01       	movw	r30, r26
 a96:	0d c0       	rjmp	.+26     	; 0xab2 <__udivmodsi4_ep>

00000a98 <__udivmodsi4_loop>:
 a98:	aa 1f       	adc	r26, r26
 a9a:	bb 1f       	adc	r27, r27
 a9c:	ee 1f       	adc	r30, r30
 a9e:	ff 1f       	adc	r31, r31
 aa0:	a2 17       	cp	r26, r18
 aa2:	b3 07       	cpc	r27, r19
 aa4:	e4 07       	cpc	r30, r20
 aa6:	f5 07       	cpc	r31, r21
 aa8:	20 f0       	brcs	.+8      	; 0xab2 <__udivmodsi4_ep>
 aaa:	a2 1b       	sub	r26, r18
 aac:	b3 0b       	sbc	r27, r19
 aae:	e4 0b       	sbc	r30, r20
 ab0:	f5 0b       	sbc	r31, r21

00000ab2 <__udivmodsi4_ep>:
 ab2:	66 1f       	adc	r22, r22
 ab4:	77 1f       	adc	r23, r23
 ab6:	88 1f       	adc	r24, r24
 ab8:	99 1f       	adc	r25, r25
 aba:	1a 94       	dec	r1
 abc:	69 f7       	brne	.-38     	; 0xa98 <__udivmodsi4_loop>
 abe:	60 95       	com	r22
 ac0:	70 95       	com	r23
 ac2:	80 95       	com	r24
 ac4:	90 95       	com	r25
 ac6:	9b 01       	movw	r18, r22
 ac8:	ac 01       	movw	r20, r24
 aca:	bd 01       	movw	r22, r26
 acc:	cf 01       	movw	r24, r30
 ace:	08 95       	ret

00000ad0 <__umulhisi3>:
 ad0:	a2 9f       	mul	r26, r18
 ad2:	b0 01       	movw	r22, r0
 ad4:	b3 9f       	mul	r27, r19
 ad6:	c0 01       	movw	r24, r0
 ad8:	a3 9f       	mul	r26, r19
 ada:	70 0d       	add	r23, r0
 adc:	81 1d       	adc	r24, r1
 ade:	11 24       	eor	r1, r1
 ae0:	91 1d       	adc	r25, r1
 ae2:	b2 9f       	mul	r27, r18
 ae4:	70 0d       	add	r23, r0
 ae6:	81 1d       	adc	r24, r1
 ae8:	11 24       	eor	r1, r1
 aea:	91 1d       	adc	r25, r1
 aec:	08 95       	ret

00000aee <_exit>:
 aee:	f8 94       	cli

00000af0 <__stop_program>:
 af0:	ff cf       	rjmp	.-2      	; 0xaf0 <__stop_program>
